{"version":3,"sources":["store/actions/actionTypes.js","components/home/MessageNavbarRow.js","components/home/NavBar.jsx","App.js","store/reducers/pictureReducer.js","store/reducers/userReducer.js","store/reducers/messagesReducer.js","store/reducers/postReducer.js","store/reducers/commentReducer.js","store/reducers/logsReducer.js","store/reducers/index.js","store/reducers/ajaxReducer.js","store/reducers/authReducer.js","store/store.js","serviceWorker.js","index.js","infrastructure/requester.js","infrastructure/index.js","components/common/Footer.js","components/common/Button.js","components/common/BackButtonWithContext.js","components/common/ButtonWithClickEvent.js","components/common/ToastComponent.js","components/common/index.js","assets/images/placeholder.png","assets/images/default-background-image.jpg","components/common/BackButtonWithProps.js","store/actions/messageActions.js","store/actions/userActions.js","infrastructure/userService.js","store/actions/ajaxActions.js","store/actions/authActions.js","components/common/ErrorPage.js","assets/images/Social_Media.jpg"],"names":["__webpack_require__","d","__webpack_exports__","AJAX_BEGIN","AJAX_END","AJAX_ERROR","AJAX_SUCCESS","REGISTER_SUCCESS","REGISTER_ERROR","LOGIN_SUCCESS","LOGIN_ERROR","REDIRECTED","LOGOUT_SUCCESS","FETCH_LOGGEDIN_USERDATA_BEGIN","FETCH_LOGGEDIN_USERDATA_SUCCESS","FETCH_LOGGEDIN_USERDATA_ERROR","UPDATE_LOGGEDIN_USERDATA","FETCH_TIMELINE_USERDATA_BEGIN","FETCH_TIMELINE_USERDATA_SUCCESS","FETCH_TIMELINE_USERDATA_ERROR","UPDATE_TIMELINE_USERDATA","UPDATE_USER_SUCCESS","UPDATE_USER_BEGIN","UPDATE_USER_ERROR","FETCH_ALLUSERS_SUCCESS","FETCH_ALLUSERS_BEGIN","FETCH_ALLUSERS_ERROR","PROMOTE_USER_SUCCESS","PROMOTE_USER_BEGIN","PROMOTE_USER_ERROR","DEMOTE_USER_SUCCESS","DEMOTE_USER_BEGIN","DEMOTE_USER_ERROR","DELETE_USER_SUCCESS","DELETE_USER_BEGIN","DELETE_USER_ERROR","CHANGE_TIMELINE_USERDATA_SUCCESS","CHANGE_TIMELINE_USERDATA_BEGIN","CHANGE_TIMELINE_USERDATA_ERROR","CHANGE_USERROLE","FETCH_ALLFRIENDS_BEGIN","FETCH_ALLFRIENDS_SUCCESS","FETCH_ALLFRIENDS_ERROR","CHANGE_ALLFRIENDS_SUCCESS","CHANGE_ALLFRIENDS_BEGIN","CHANGE_ALLFRIENDS_ERROR","UPDATE_ALL_FRIENDS","REMOVE_FRIEND_SUCCESS","REMOVE_FRIEND_BEGIN","REMOVE_FRIEND_ERROR","FIND_FRIENDS_SUCCESS","FIND_FRIENDS_BEGIN","FIND_FRIENDS_ERROR","ADD_FRIEND_SUCCESS","ADD_FRIEND_BEGIN","ADD_FRIEND_ERROR","CANCEL_REQUEST_SUCCESS","CANCEL_REQUEST_BEGIN","CANCEL_REQUEST_ERROR","CONFIRM_REQUEST_SUCCESS","CONFIRM_REQUEST_BEGIN","CONFIRM_REQUEST_ERROR","SEARCH_RESULTS_SUCCESS","SEARCH_RESULTS_BEGIN","SEARCH_RESULTS_ERROR","FETCH_ALLCHATFRIENDS_BEGIN","FETCH_ALLCHATFRIENDS_SUCCESS","FETCH_ALLCHATFRIENDS_ERROR","EDIT_USERSTATUS","ADD_PICTURE_SUCCESS","ADD_PICTURE_BEGIN","ADD_PICTURE_ERROR","REMOVE_PICTURE_SUCCESS","REMOVE_PICTURE_BEGIN","REMOVE_PICTURE_ERROR","FETCH_PICTURE_BEGIN","FETCH_PICTURE_SUCCESS","FETCH_PICTURE_ERROR","CHANGE_PICTURES_SUCCESS","CHANGE_PICTURES_BEGIN","CHANGE_PICTURES_ERROR","UPDATE_PICTURES","FETCH_ALLMESSAGES_SUCCESS","FETCH_ALLMESSAGES_BEGIN","FETCH_ALLMESSAGES_ERROR","ADD_MESSAGE","FETCH_UNREADMESSAGES_SUCCESS","FETCH_UNREADMESSAGES_BEGIN","FETCH_UNREADMESSAGES_ERROR","LOAD_USER_MESSAGES","CREATE_POST_SUCCESS","CREATE_POST_BEGIN","CREATE_POST_ERROR","FETCH_ALLPOSTS_BEGIN","FETCH_ALLPOSTS_SUCCESS","FETCH_ALLPOSTS_ERROR","REMOVE_POST_BEGIN","REMOVE_POST_SUCCESS","REMOVE_POST_ERROR","ADDLIKE_POST_BEGIN","ADDLIKE_POST_SUCCESS","ADDLIKE_POST_ERROR","REMOVE_COMMENT_BEGIN","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_ERROR","ADDLIKE_COMMENT_BEGIN","ADDLIKE_COMMENT_SUCCESS","ADDLIKE_COMMENT_ERROR","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_BEGIN","CREATE_COMMENT_ERROR","FETCH_ALL_LOGS_SUCCESS","FETCH_ALL_LOGS_BEGIN","FETCH_ALL_LOGS_ERROR","FINDBYUSERNAME_LOGS_SUCCESS","FINDBYUSERNAME_LOGS_BEGIN","FINDBYUSERNAME_LOGS_ERROR","CLEARBYUSERNAME_LOGS_SUCCESS","CLEARBYUSERNAME_LOGS_BEGIN","CLEARBYUSERNAME_LOGS_ERROR","CLEAR_ALL_LOGS_SUCCESS","CLEAR_ALL_LOGS_BEGIN","CLEAR_ALL_LOGS_ERROR","MessageNavBarRow","props","id","fromUserId","firstName","fromUserFirstName","lastName","fromUserLastName","content","time","count","profilePicUrl","fromUserProfilePicUrl","placeholder_user_image","imgClassName","userService","getImageSize","userNameFormatted","formatUsername","contentFormatted","dayTime","hour","month","substring","toLowerCase","minute","react_default","a","createElement","className","onMouseDown","e","triggerMessageLoad","src","alt","dayOfMonth","Navbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getAllFriendMessages","state","showDropdown","loadAllUnreadMessages","setState","changeMessaboxVisibility","event","userData","handleBlur","getUnreadMessagesCount","allUnreadMessages","reduce","b","unreadMessages","displayMessageCount","search","searchFriend","bind","assertThisInitialized","onChangeHandler","prevProps","prevState","_this2","fetchAllUnreadMessages","loading","hasError","errorMessage","getErrorMessage","successMessage","getSuccessMessage","toast","error","common","errorToast","text","position","POSITION","TOP_RIGHT","success","successToast","message","fetchAllLogs","searchResultsData","preventDefault","loggedInUserId","loggedInUserData","searchResult","history","push","pathname","defineProperty","target","name","value","_this3","isAdmin","isRoot","userId","getUserId","_this$props","loggedIn","onLogout","location","isFrendRequestsArrEmpty","friendRequestsArr","length","messages","react","onClick","changeHeight","style","color","map","MessageNavbarRow","assign","key","type","react_router_dom","to","onSubmit","placeholder","aria-label","onChange","htmlFor","marginBottom","exact","concat","getUsername","onBlur","Component","connect","timeLineUserData","searchResults","findFriends","userWaitingForAcceptingRequest","dispatch","triggerMessageLoadAction","searchResultsAction","fetchAllUnreadMessagesAction","StartPage","lazy","then","RegisterPage","LoginPage","HomePage","ErrorPage","Promise","resolve","override","css","_templateObject","App","logout","isTheUserLoggedIn","NavBar","localStorage","getItem","lib","transition","Zoom","closeButton","fallback","react_spinners","sizeUnit","size","react_router","path","component","withRouter","logoutAction","initialStateAddPicture","status","initialStateRemovePicture","initialStateFetchPicture","picturesArr","initialStateChangePicture","initialStateLoggedInUserData","username","email","address","city","category","backgroundImageUrl","default_background_image","authority","initialStateTimeLineUserData","initialStateAllChatFriends","friendsChatArr","updateUserStatus","data","online","newFriendsChatArr","friend","objectSpread","toConsumableArray","initialStateUpdateUser","initialStateAllUsers","userArr","removeUser","deletedUserId","filter","user","updateUserRole","role","newUserArr","initialStateDeleteUser","initialStatePromoteUser","initialStateDemoteUser","initialStateChangeTimeLineUserData","initialStateAllFriends","friendsArr","removeFriend","friendToRemoveId","initialStateChangeAllFriends","initialStateRemoveFriend","initialStateFindFriends","friendsCandidatesArr","usersReceivedRequestFromCurrentUser","setFindFriendsSuccessState","response","starterOfAction","sendUserRequest","friendCandidateId","userToAddIndex","findIndex","userToAdd","slice","cancelRequest","friendToRejectId","userToCancelIndex","userToCancel","confirmRequest","friendToAcceptId","initialStateAddFriend","initialStateCancelRequest","initialStateConfirmRequest","initialStateSearchResults","friendsArrSearch","setSearchResultsSuccessState","searchResultsSendUserRequest","searchResultsCancelRequest","searchResultsConfirmRequest","userToAcceptIndex","userToAccept","searchResultsRemoveFriend","userToRemoveIndex","userToRemove","allMessagesArr","initialStateAllUnreadMessages","initialStateCreatePost","initialStateAllPosts","allPostsArr","initialStateRemovePost","initialStateAddLikePost","initialStateCreateComment","initialStateRemoveComment","initialStateAddLikeComment","initialStateFetchAllLogs","logsArr","initialStateFindLogsByUserName","initialStateClearLogsByUserName","initialStateClearAllLogs","reducers","ajaxStatus","arguments","undefined","ajaxError","action","register","login","registerError","messsage","loginError","updateUserData","payload","fetchAllUsers","fetchPictures","fetchAllChatFriends","fetchAllMessages","fetchAllFriends","createPost","fetchAllPosts","removePost","removeComment","addLikePost","addLikeComment","createComment","promoteUserData","demoteUserData","changeTimeLineUserData","changeAllFriends","changePicture","addPicture","removePicture","findLogsByUserName","clearLogsByUserName","clearAllLogs","deleteUser","addfriend","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","appReducer","combineReducers","middleware","thunk","store","createStore","applyMiddleware","apply","Boolean","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","BASE_URL","getAuthHeader","token","Authorization","requester","get","endpoint","callback","fetch","method","headers","Accept","checkStatus","post","Content-Type","body","JSON","stringify","put","delete","update","console","log","addPhoto","json","Error","statusText","url","Footer","Button","buttonClass","class","context","router","goBack","contextTypes","ButtonWithClickEvent","ToastComponent","_ref","closeToast","fontSize","_ref2","infoToast","_ref3","common_Footer","common_Button","common_ButtonWithClickEvent","module","exports","p","BackButtonWithProps","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","fetchAllMessagesAction","addMessageAction","_infrastructure__WEBPACK_IMPORTED_MODULE_0__","_actionTypes__WEBPACK_IMPORTED_MODULE_1__","fetchAllMessagesError","chatUserId","allMessages","catch","err","clear","messageBody","fetchAllUnreadMessagesError","fetchAllChatFriendsError","updateUserStatusAction","fetchAllChatFriendsAction","fetchLoggedInUserError","fetchLoggedInUserAction","fetchTimeLineUserError","updateTimeLineUserDataAction","fetchTimeLineUserAction","changeCurrentTimeLineUserError","changeCurrentTimeLineUserAction","fetchAllFriendsError","fetchAllFriendsAction","changeAllFriendsError","changeAllFriendsAction","changeAllFriendsSuccess","updateUserError","updateUserAction","otherProps","timeLineUserId","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","updateUserSuccess","deleteUserError","deleteUserAction","deleteUserSuccess","fetchAllUsersError","fetchAllUsersAction","updateUserRoleAction","promoteUserError","promoteUserAction","demoteUserError","demoteUserAction","removeFriendError","removeFriendAction","removeFriendSuccess","findFriendsError","findFriendsAction","findFriendsSuccess","addFriendError","addFriendAction","addFriendSuccess","cancelRequestError","cancelRequestAction","cancelRequestSuccess","confirmRequestAction","confirmRequestSuccess","searchResultsError","searchResultsSuccess","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_toastify__WEBPACK_IMPORTED_MODULE_1__","_components_common__WEBPACK_IMPORTED_MODULE_2__","getBaseUrl","isAuthenticated","getPayload","parse","atob","split","getRole","getProfilePicUrl","getFirstName","isLoggedInUser","checkIfIsRoot","nameLength","img","Image","width","height","ajaxBegin","ajaxEnd","redirectAction","registerAction","loginAction","password","setItem","saveToken","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","errorClass","react__WEBPACK_IMPORTED_MODULE_4___default","margin","socialMedia","_BackButtonWithProps__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"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","file":"static/js/main.13072117.chunk.js","sourcesContent":["export const AJAX_BEGIN = 'AJAX_BEGIN';\nexport const AJAX_END = 'AJAX_END';\nexport const AJAX_ERROR = 'AJAX_ERROR';\nexport const AJAX_SUCCESS = 'AJAX_SUCCESS';\n\n// Authentication\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_ERROR = 'REGISTER_ERROR'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const REDIRECTED = 'REDIRECTED';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\n// User\nexport const FETCH_LOGGEDIN_USERDATA_BEGIN = 'FETCH_LOGGEDIN_USERDATA_BEGIN';\nexport const FETCH_LOGGEDIN_USERDATA_SUCCESS = 'FETCH_LOGGEDIN_USERDATA_SUCCESS';\nexport const FETCH_LOGGEDIN_USERDATA_ERROR = 'FETCH_LOGGEDIN_USERDATA_ERROR';\nexport const UPDATE_LOGGEDIN_USERDATA = 'UPDATE_LOGGEDIN_USERDATA';\n\nexport const FETCH_TIMELINE_USERDATA_BEGIN = 'FETCH_TIMELINE_USERDATA_BEGIN';\nexport const FETCH_TIMELINE_USERDATA_SUCCESS = 'FETCH_TIMELINE_USERDATA_SUCCESS';\nexport const FETCH_TIMELINE_USERDATA_ERROR = 'FETCH_TIMELINE_USERDATA_ERROR';\nexport const UPDATE_TIMELINE_USERDATA = 'UPDATE_TIMELINE_USERDATA';\n\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_BEGIN = 'UPDATE_USER_BEGIN';\nexport const UPDATE_USER_ERROR = 'UPDATE_USER_ERROR';\n\nexport const FETCH_ALLUSERS_SUCCESS = 'FETCH_ALLUSERS_SUCCESS';\nexport const FETCH_ALLUSERS_BEGIN = 'FETCH_ALLUSERS_BEGIN';\nexport const FETCH_ALLUSERS_ERROR = 'FETCH_ALLUSERS_ERROR';\n\nexport const PROMOTE_USER_SUCCESS = 'PROMOTE_USER_SUCCESS';\nexport const PROMOTE_USER_BEGIN = 'PROMOTE_USER_BEGIN';\nexport const PROMOTE_USER_ERROR = 'PROMOTE_USER_ERROR';\n\nexport const DEMOTE_USER_SUCCESS = 'PROMOTE_USER_SUCCESS';\nexport const DEMOTE_USER_BEGIN = 'PROMOTE_USER_BEGIN';\nexport const DEMOTE_USER_ERROR = 'PROMOTE_USER_ERROR';\n\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_BEGIN = 'DELETE_USER_BEGIN';\nexport const DELETE_USER_ERROR = 'DELETE_USER_ERROR';\n\nexport const CHANGE_TIMELINE_USERDATA_SUCCESS = 'CHANGE_TIMELINE_USERDATA_SUCCESS';\nexport const CHANGE_TIMELINE_USERDATA_BEGIN = 'CHANGE_TIMELINE_USERDATA_BEGIN';\nexport const CHANGE_TIMELINE_USERDATA_ERROR = 'CHANGE_TIMELINE_USERDATA_ERROR';\n\nexport const CHANGE_USERROLE = 'CHANGE_USERROLE';\n\n// AllFriends\nexport const FETCH_ALLFRIENDS_BEGIN = 'FETCH_ALLFRIENDS_BEGIN';\nexport const FETCH_ALLFRIENDS_SUCCESS = 'FETCH_ALLFRIENDS_SUCCESS';\nexport const FETCH_ALLFRIENDS_ERROR = 'FETCH_ALLFRIENDS_ERROR';\n\nexport const CHANGE_ALLFRIENDS_SUCCESS = 'CHANGE_ALLFRIENDS_SUCCESS';\nexport const CHANGE_ALLFRIENDS_BEGIN = 'CHANGE_ALLFRIENDS_BEGIN';\nexport const CHANGE_ALLFRIENDS_ERROR = 'CHANGE_ALLFRIENDS_ERROR';\n\nexport const UPDATE_ALL_FRIENDS = 'UPDATE_ALL_FRIENDS';\n\nexport const REMOVE_FRIEND_SUCCESS = 'REMOVE_FRIEND_SUCCESS';\nexport const REMOVE_FRIEND_BEGIN = 'REMOVE_FRIEND_BEGIN';\nexport const REMOVE_FRIEND_ERROR = 'REMOVE_FRIEND_ERROR';\n\nexport const FIND_FRIENDS_SUCCESS = 'FIND_FRIENDS_SUCCESS';\nexport const FIND_FRIENDS_BEGIN = 'FIND_FRIENDS_BEGIN';\nexport const FIND_FRIENDS_ERROR = 'FIND_FRIENDS_ERROR';\n\nexport const ADD_FRIEND_SUCCESS = 'ADD_FRIEND_SUCCESS';\nexport const ADD_FRIEND_BEGIN = 'ADD_FRIEND_BEGIN';\nexport const ADD_FRIEND_ERROR = 'ADD_FRIEND_ERROR';\n\nexport const CANCEL_REQUEST_SUCCESS = 'CANCEL_REQUEST_SUCCESS';\nexport const CANCEL_REQUEST_BEGIN = 'CANCEL_REQUEST_BEGIN';\nexport const CANCEL_REQUEST_ERROR = 'CANCEL_REQUEST_ERROR';\n\nexport const CONFIRM_REQUEST_SUCCESS = 'CONFIRM_REQUEST_SUCCESS';\nexport const CONFIRM_REQUEST_BEGIN = 'CONFIRM_REQUEST_BEGIN';\nexport const CONFIRM_REQUEST_ERROR = 'CONFIRM_REQUEST_ERROR';\n\nexport const SEARCH_RESULTS_SUCCESS = 'SEARCH_RESULTS_SUCCESS';\nexport const SEARCH_RESULTS_BEGIN = 'SEARCH_RESULTS_BEGIN';\nexport const SEARCH_RESULTS_ERROR = 'SEARCH_RESULTS_ERROR';\n\n// AllChatFriends\nexport const FETCH_ALLCHATFRIENDS_BEGIN = 'FETCH_ALLCHATFRIENDS_BEGIN';\nexport const FETCH_ALLCHATFRIENDS_SUCCESS = 'FETCH_ALLCHATFRIENDS_SUCCESS';\nexport const FETCH_ALLCHATFRIENDS_ERROR = 'FETCH_ALLCHATFRIENDS_ERROR';\nexport const EDIT_USERSTATUS = 'EDIT_USERSTATUS';\n\n// Picture\nexport const ADD_PICTURE_SUCCESS = 'ADD_PICTURE_SUCCESS';\nexport const ADD_PICTURE_BEGIN = 'ADD_PICTURE_BEGIN';\nexport const ADD_PICTURE_ERROR = 'ADD_PICTURE_ERROR';\n\nexport const REMOVE_PICTURE_SUCCESS = 'REMOVE_PICTURE_SUCCESS';\nexport const REMOVE_PICTURE_BEGIN = 'REMOVE_PICTURE_BEGIN';\nexport const REMOVE_PICTURE_ERROR = 'REMOVE_PICTURE_ERROR';\n\nexport const FETCH_PICTURE_BEGIN = 'FETCH_PICTURE_BEGIN';\nexport const FETCH_PICTURE_SUCCESS = 'FETCH_PICTURE_SUCCESS';\nexport const FETCH_PICTURE_ERROR = 'FETCH_PICTURE_ERROR';\n\nexport const CHANGE_PICTURES_SUCCESS = 'CHANGE_PICTURES_SUCCESS';\nexport const CHANGE_PICTURES_BEGIN = 'CHANGE_PICTURES_BEGIN';\nexport const CHANGE_PICTURES_ERROR = 'CHANGE_PICTURES_ERROR';\n\nexport const UPDATE_PICTURES = 'UPDATE_PICTURES';\n\n//Message\nexport const FETCH_ALLMESSAGES_SUCCESS = 'FETCH_ALLMESSAGES_SUCCESS';\nexport const FETCH_ALLMESSAGES_BEGIN = 'FETCH_ALLMESSAGES_BEGIN';\nexport const FETCH_ALLMESSAGES_ERROR = 'FETCH_ALLMESSAGES_ERROR';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\n\nexport const FETCH_UNREADMESSAGES_SUCCESS = 'FETCH_UNREADMESSAGES_SUCCESS';\nexport const FETCH_UNREADMESSAGES_BEGIN = 'FETCH_UNREADMESSAGES_BEGIN';\nexport const FETCH_UNREADMESSAGES_ERROR = 'FETCH_UNREADMESSAGES_ERROR';\n\nexport const LOAD_USER_MESSAGES = 'LOAD_USER_MESSAGES';\n\n// Post\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\nexport const CREATE_POST_BEGIN = 'CREATE_POST_BEGIN';\nexport const CREATE_POST_ERROR = 'CREATE_POST_ERROR';\n\nexport const FETCH_ALLPOSTS_BEGIN = 'FETCH_ALLPOSTS_BEGIN';\nexport const FETCH_ALLPOSTS_SUCCESS = 'FETCH_ALLPOSTS_SUCCESS';\nexport const FETCH_ALLPOSTS_ERROR = 'FETCH_ALLPOSTS_ERROR';\n\nexport const REMOVE_POST_BEGIN = 'REMOVE_POST_BEGIN';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_ERROR = 'REMOVE_POST_ERROR';\n\nexport const ADDLIKE_POST_BEGIN = 'ADDLIKE_POST_BEGIN';\nexport const ADDLIKE_POST_SUCCESS = 'ADDLIKE_POST_SUCCESS';\nexport const ADDLIKE_POST_ERROR = 'ADDLIKE_POST_ERROR';\n\n// Comment\nexport const REMOVE_COMMENT_BEGIN = 'REMOVE_COMMENT_BEGIN';\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\nexport const REMOVE_COMMENT_ERROR = 'REMOVE_COMMENT_ERROR';\n\nexport const ADDLIKE_COMMENT_BEGIN = 'ADDLIKE_COMMENT_BEGIN';\nexport const ADDLIKE_COMMENT_SUCCESS = 'ADDLIKE_COMMENT_SUCCESS';\nexport const ADDLIKE_COMMENT_ERROR = 'ADDLIKE_COMMENT_ERROR';\n\nexport const CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS';\nexport const CREATE_COMMENT_BEGIN = 'CREATE_COMMENT_BEGIN';\nexport const CREATE_COMMENT_ERROR = 'CREATE_COMMENT_ERROR';\n\n// Logs\nexport const FETCH_ALL_LOGS_SUCCESS = 'FETCH_ALL_LOGS_SUCCESS';\nexport const FETCH_ALL_LOGS_BEGIN = 'FETCH_ALL_LOGS_BEGIN';\nexport const FETCH_ALL_LOGS_ERROR = 'FETCH_ALL_LOGS_ERROR';\n\nexport const FINDBYUSERNAME_LOGS_SUCCESS = 'FINDBYUSERNAME_LOGS_SUCCESS';\nexport const FINDBYUSERNAME_LOGS_BEGIN = 'FINDBYUSERNAME_LOGS_BEGIN';\nexport const FINDBYUSERNAME_LOGS_ERROR = 'FINDBYUSERNAME_LOGS_ERROR';\n\nexport const CLEARBYUSERNAME_LOGS_SUCCESS = 'CLEARBYUSERNAME_LOGS_SUCCESS';\nexport const CLEARBYUSERNAME_LOGS_BEGIN = 'CLEARBYUSERNAME_LOGS_BEGIN';\nexport const CLEARBYUSERNAME_LOGS_ERROR = 'CLEARBYUSERNAME_LOGS_ERROR';\n\nexport const CLEAR_ALL_LOGS_SUCCESS = 'CLEAR_ALL_LOGS_SUCCESS';\nexport const CLEAR_ALL_LOGS_BEGIN = 'CLEAR_ALL_LOGS_BEGIN';\nexport const CLEAR_ALL_LOGS_ERROR = 'CLEAR_ALL_LOGS_ERROR';\n","import React from 'react';\nimport { userService } from '../../infrastructure';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\n\nconst MessageNavBarRow = (props) => {\n    const {fromUserId: id, fromUserFirstName: firstName, fromUserLastName: lastName, content, time, count } = props;\n    const profilePicUrl = props.fromUserProfilePicUrl || placeholder_user_image\n\n    let imgClassName = '';\n    if (profilePicUrl) {\n        imgClassName = userService.getImageSize(profilePicUrl);\n    }\n\n    let userNameFormatted = userService.formatUsername(firstName, lastName, 18);\n    let contentFormatted = userService.formatUsername(content,'', 40);\n\n    const dayTime = time.hour <= 12 ? 'AM' : 'PM';\n    const month = time.month.substring(0, 1) + time.month.substring(1, 5).toLowerCase()\n    const hour = time.hour < 10 ? '0' + time.hour : time.hour;\n    const minute = time.minute < 10 ? '0' + time.minute : time.minute;\n\n    return (\n        <div className=\"messagebox-navbar-friend-container\" onMouseDown={(e) => props.triggerMessageLoad(id, firstName, lastName, profilePicUrl, e)}>\n            <div className=\"messagebox-navbar-friend-image\">\n                <img className={imgClassName} src={profilePicUrl} alt=\"profilePic\" />\n            </div>\n            <div className=\"messagebox-navbar-username-container\" >\n                <div className=\"message-wrapper\">\n                    <p className=\"messagebox-navbar-username\">{userNameFormatted} <span>({count})</span> </p>\n                    <p className=\"message-navbar-time\"> {time.dayOfMonth} {month} {hour}:{minute} {dayTime}</p>\n                </div>\n                <p className=\"message-navbar-content\">{contentFormatted}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default MessageNavBarRow;\n\n","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport MessageNavBarRow from './MessageNavbarRow';\nimport './css/MessageNavbarRow.css';\nimport './css/Navbar.css';\n\nimport { connect } from 'react-redux';\nimport { fetchAllUnreadMessagesAction, triggerMessageLoadAction } from '../../store/actions/messageActions';\nimport { searchResultsAction } from '../../store/actions/userActions';\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            search: '',\n            showDropdown: '',\n            unreadMessages: 0,\n            displayMessageCount: true,\n            allUnreadMessages: [],\n        }\n\n        this.searchFriend = this.searchFriend.bind(this);\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.getAllFriendMessages = this.getAllFriendMessages.bind(this);\n        this.triggerMessageLoad = this.triggerMessageLoad.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.changeMessaboxVisibility = this.changeMessaboxVisibility.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const loading = this.props.fetchAllUnreadMessages.loading;\n\n        if (!loading && !this.props.fetchAllUnreadMessages.hasError && this.props.fetchAllUnreadMessages !== prevProps.fetchAllUnreadMessages) {\n            this.setState({\n                displayMessageCount: true,\n            }, () => {\n                this.getUnreadMessagesCount();\n            })\n        }\n\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.fetchAllUnreadMessages.hasError && this.props.fetchAllUnreadMessages.message && this.props.fetchAllUnreadMessages !== prevProps.fetchAllUnreadMessages) {\n            return this.props.fetchAllLogs.message;\n        }\n        else if (!this.props.searchResultsData.hasError && this.props.searchResultsData.message && this.props.searchResultsData !== prevProps.searchResultsData) {\n            return this.props.searchResultsData.message;\n        }\n\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.fetchAllUnreadMessages.hasError && prevProps.fetchAllUnreadMessages.error !== this.props.fetchAllUnreadMessages.error) {\n            return this.props.fetchAllUnreadMessages.message || 'Server Error';\n        }\n        else if (this.props.searchResultsData.hasError && prevProps.searchResultsData.error !== this.props.searchResultsData.error) {\n            return this.props.searchResultsData.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    searchFriend(event) {\n        event.preventDefault();\n\n        const loggedInUserId = this.props.loggedInUserData.id;\n        const search = this.state.search;\n\n        this.props.searchResult(loggedInUserId, search);\n        return this.props.history.push({ pathname: \"/home/users/search\" });\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    getAllFriendMessages = () => {\n        if (this.state.showDropdown === 'show-dropdown') {\n            this.changeMessaboxVisibility();\n            return;\n        }\n\n        this.props.loadAllUnreadMessages();\n        this.setState({ showDropdown: 'show-dropdown' })\n    }\n\n    triggerMessageLoad = (id, firstName, lastName, profilePicUrl, event) => {\n        this.changeMessaboxVisibility();\n        const userData = { id, firstName, lastName, profilePicUrl }\n        this.props.triggerMessageLoad(userData);\n    }\n\n    handleBlur = () => (event) => {\n        this.setState({\n            showDropdown: '',\n        });\n    }\n\n    changeMessaboxVisibility = () => {\n        if (this.state.showDropdown === '') {\n            this.setState({ showDropdown: 'show-dropdown' })\n        } else {\n            this.setState({ showDropdown: '' })\n        }\n    }\n\n    getUnreadMessagesCount = () => {\n        let count = this.props.allUnreadMessages.reduce((a, b) => {\n            return a + b.count;\n        }, 0)\n      \n        if (count > 0) {\n            this.setState({\n                unreadMessages: count,\n                displayMessageCount: true,\n            })\n        } else {\n            this.setState({\n                unreadMessages: 0,\n                displayMessageCount: false,\n\n            })\n        }\n    }\n\n    render() {\n        const isAdmin = userService.isAdmin();\n        const isRoot = userService.isRoot();\n        const userId = userService.getUserId();\n\n        const { loggedIn, onLogout } = this.props;\n        const showDropdown = this.state.showDropdown;\n        let pathname = this.props.location.pathname !== \"/\";\n\n        const isFrendRequestsArrEmpty = this.props.friendRequestsArr.length > 0\n\n        let messages = (\n            <Fragment>\n                <div className=\"dropdown-messagebox-header\" onClick={this.changeHeight}>\n                    <h5 className=\"dropdown-chat-title\" style={{ color: ' #333' }}>\n                        There are no messages for you!\n                    </h5>\n                </div>\n            </Fragment>\n        )\n\n        if (this.props.allUnreadMessages.length > 0) {\n            messages = (\n                <Fragment>\n                    <div className=\"messagebox-navbar-container\">\n                        {this.props.allUnreadMessages.map(message =>\n                            <MessageNavBarRow\n                                key={message.id}\n                                {...message}\n                                triggerMessageLoad={this.triggerMessageLoad}\n                                className=\"dropdown-item\"\n                            />\n                        )}\n                    </div>\n                </Fragment>\n            )\n        }\n\n        return (\n            <Fragment >\n                <input type=\"checkbox\" name=\"main-nav-toggle\" id=\"main-nav-toggle\" />\n                <header className=\"site-header\">\n                    <section className=\"navbar-section\">\n                        <div className=\"navbar-wrapper\">\n                            <div className=\"nav-searchbar-container\">\n                                <div className=\"site-logo\">\n                                    <NavLink to=\"/\" className=\"nav-link \" >Social Network</NavLink>\n                                </div>\n                                {loggedIn && <form className=\"form-inline my-2 my-lg-0\" onSubmit={this.searchFriend}>\n                                    <input\n                                        className=\"form-control mr-sm-2\"\n                                        type=\"search\"\n                                        placeholder=\"Search\"\n                                        aria-label=\"Search\"\n                                        name=\"search\"\n                                        id=\"search\"\n                                        value={this.state.search}\n                                        onChange={this.onChangeHandler}\n                                    />\n\n                                    <button className=\"btn button-navbar-outline my-2 my-sm-0\" type=\"submit\">Search</button>\n                                </form>}\n                            </div>\n\n                            <label id=\"toggle\" htmlFor=\"main-nav-toggle\" style={{ 'marginBottom': '0' }}><span>Menu</span></label>\n\n                            <nav className=\"nav-main\">\n                                <ul className=\"nav-ul\">\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to={`/home/profile/${userId}`} className=\"nav-link  fas fa-user tooltipCustom\"  > {userService.getUsername()}<span className=\"tooltiptextCustom\">Profile</span></NavLink></li>}\n\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to={`/home/comments/${userId}`} className=\"nav-link \">Home</NavLink></li>}\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to={`/home/findFriends/${userId}`} className=\"nav-link \" >Find friends!</NavLink></li>}\n\n\n                                    {loggedIn &&\n                                        <li className=\"nav-item\">\n                                            <NavLink exact to={`/home/friendRequests/${userId}`} className=\"nav-link tooltipCustom\">\n                                                <i className=\"fas fa-user-friends\"></i>\n                                                {isFrendRequestsArrEmpty && <span id=\"icon-badge-container-friend-requests\">{this.props.friendRequestsArr.length}</span>}\n                                                {/* <i id=\"icon-badge-container-friend-requests\" data-count=\"2\" className=\"fas fa-user-friends\"></i> */}\n                                                <span className=\"tooltiptextCustom\" id=\"friend-requests-tooltip\">Friend Requests</span>\n                                            </NavLink>\n                                        </li>}\n\n                                    {loggedIn && pathname &&\n                                        <li className=\"nav-item\"\n                                            id=\"onclick-wrapper\"\n                                            onClick={this.getAllFriendMessages}\n                                            onBlur={this.handleBlur('onclick-wrapper')}\n                                        >\n                                            <div className=\"icon-badge-wrapper\">\n                                                <NavLink className=\"fas fa-envelope tooltipCustom nav-link\" to=\"#\">\n                                                    <span className=\"tooltiptextCustom\">Messages</span>\n                                                </NavLink>\n                                                {this.state.displayMessageCount && <span id=\"icon-badge-container-messages\">{this.state.unreadMessages}</span>}\n                                            </div>\n\n                                            <div className={`dropdown-container ${showDropdown}`}>\n                                                <div className=\"dropdown-messagebox-header\" onClick={this.changeHeight}>\n                                                    <div className=\"dropdown-messagebox-chat-icon\">\n                                                        <i className=\"fas fa-envelope\"></i>\n                                                    </div>\n                                                    <h4 className=\"dropdown-chat-title\" style={{ color: ' #333' }}>\n                                                        Messages\n                                                    </h4>\n                                                </div>\n                                                {messages}\n                                            </div>\n                                        </li>\n                                    }\n\n                                    {(loggedIn && (isRoot || isAdmin)) && <li className=\"nav-item\"><NavLink exact to={`/home/logs/${userId}`} className=\"nav-link\"> Logs</NavLink></li>}\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to=\"#\" className=\"nav-link \" onClick={onLogout} >Logout</NavLink></li>}\n                                    {!loggedIn && <li className=\"nav-item\"><NavLink exact to=\"/login\" className=\"nav-link\" >Login</NavLink></li>}\n                                    {!loggedIn && <li className=\"nav-item\"><NavLink exact to=\"/register\" className=\"nav-link\" >Register</NavLink></li>}\n                                </ul>\n                            </nav>\n                        </div>\n                    </section>\n                </header>\n            </Fragment >\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n\n        fetchAllUnreadMessages: state.fetchAllUnreadMessages,\n        allUnreadMessages: state.fetchAllUnreadMessages.allUnreadMessages,\n\n        searchResultsData: state.searchResults,\n\n        friendRequestsArr: state.findFriends.userWaitingForAcceptingRequest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        triggerMessageLoad: (userData) => { dispatch(triggerMessageLoadAction(userData)) },\n        searchResult: (loggedInUserId, search) => { dispatch(searchResultsAction(loggedInUserId, search)) },\n        loadAllUnreadMessages: () => { dispatch(fetchAllUnreadMessagesAction()) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n\n\n","import React, { Component, Fragment, lazy, Suspense } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\nimport { Footer } from './components/common';\nimport Navbar from './components/home/NavBar';\nimport { ToastComponent } from './components/common'\nimport { userService } from './infrastructure';\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport './styles/App.css';\nimport { css } from '@emotion/core';\nimport { CircleLoader } from 'react-spinners';\n\nimport { connect } from 'react-redux';\nimport { logoutAction } from './store/actions/authActions';\n\nconst StartPage = lazy(() => import('./components/auth/StartPage'))\nconst RegisterPage = lazy(() => import('./components/auth/RegisterPage'))\nconst LoginPage = lazy(() => import('./components/auth/LoginPage'))\nconst HomePage = lazy(() => import('./components/home/HomePage'))\nconst ErrorPage = lazy(() => import('./components/common/ErrorPage'))\n\nconst override = css`\n        display: block;\n        margin: 8rem auto;\n        border-color: red;\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.onLogout = this.onLogout.bind(this);\n  }\n\n  onLogout() {\n    this.props.logout();\n\n    toast.success(<ToastComponent.successToast text={`You have been successfully logged out.`} />, {\n      position: toast.POSITION.TOP_RIGHT\n    });\n\n    this.props.history.push('/login');\n  }\n\n  render() {\n    const loggedIn = userService.isTheUserLoggedIn();\n\n    return (\n      <Fragment>\n        <Navbar loggedIn={localStorage.getItem('token') != null} onLogout={this.onLogout} {...this.props} />\n        <ToastContainer transition={Zoom} closeButton={false} />\n        <Suspense fallback={\n          <div className='sweet-loading'>\n            <CircleLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={150}\n              color={'#61dafb'}\n              loading={true}\n            />\n          </div>}>\n          <Switch>\n            <Route exact path=\"/\" component={StartPage} />\n            {!loggedIn && <Route exact path=\"/register\" component={RegisterPage} />}\n            {!loggedIn && <Route exact path=\"/login\" component={LoginPage} />}\n            {loggedIn && <Route path=\"/home\" component={HomePage} />}\n            <Route exact path=\"/error\" component={ErrorPage} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </Suspense>\n        <Footer />\n      </Fragment>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logoutAction()),\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));\n","import {\n    ADD_PICTURE_SUCCESS, ADD_PICTURE_BEGIN, ADD_PICTURE_ERROR,\n    REMOVE_PICTURE_SUCCESS, REMOVE_PICTURE_BEGIN, REMOVE_PICTURE_ERROR,\n    FETCH_PICTURE_SUCCESS, FETCH_PICTURE_BEGIN, FETCH_PICTURE_ERROR,\n    CHANGE_PICTURES_SUCCESS, CHANGE_PICTURES_BEGIN, CHANGE_PICTURES_ERROR, UPDATE_PICTURES,\n} from '../actions/actionTypes';\n\n// addPictureReducer\nconst initialStateAddPicture = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction addPictureReducer(state = initialStateAddPicture, action) {\n    switch (action.type) {\n        case ADD_PICTURE_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case ADD_PICTURE_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case ADD_PICTURE_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// removePictureReducer\nconst initialStateRemovePicture = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction removePictureReducer(state = initialStateRemovePicture, action) {\n    switch (action.type) {\n        case REMOVE_PICTURE_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case REMOVE_PICTURE_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case REMOVE_PICTURE_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// fetchPictureArrReducer\nconst initialStateFetchPicture = {\n    picturesArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction fetchPictureReducer(state = initialStateFetchPicture, action) {\n    switch (action.type) {\n        case FETCH_PICTURE_BEGIN:\n            return Object.assign({}, state, {\n                picturesArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_PICTURE_SUCCESS:\n            return Object.assign({}, state, {\n                picturesArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_PICTURE_ERROR:\n            return Object.assign({}, state, {\n                picturesArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case UPDATE_PICTURES:\n            return Object.assign({}, state, {\n                picturesArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// changePictureReducer\nconst initialStateChangePicture = {\n    picturesArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction changePictureReducer(state = initialStateChangePicture, action) {\n    switch (action.type) {\n        case CHANGE_PICTURES_BEGIN:\n            return Object.assign({}, state, {\n                picturesArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CHANGE_PICTURES_SUCCESS:\n            return Object.assign({}, state, {\n                picturesArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CHANGE_PICTURES_ERROR:\n            return Object.assign({}, state, {\n                picturesArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nexport {\n    addPictureReducer, removePictureReducer, fetchPictureReducer, changePictureReducer\n}","import {\n    FETCH_LOGGEDIN_USERDATA_BEGIN, FETCH_LOGGEDIN_USERDATA_SUCCESS, FETCH_LOGGEDIN_USERDATA_ERROR, UPDATE_LOGGEDIN_USERDATA,\n    FETCH_TIMELINE_USERDATA_BEGIN, FETCH_TIMELINE_USERDATA_SUCCESS, FETCH_TIMELINE_USERDATA_ERROR, UPDATE_TIMELINE_USERDATA,\n    FETCH_ALLCHATFRIENDS_BEGIN, FETCH_ALLCHATFRIENDS_SUCCESS, FETCH_ALLCHATFRIENDS_ERROR, EDIT_USERSTATUS,\n    FETCH_ALLFRIENDS_BEGIN, FETCH_ALLFRIENDS_SUCCESS, FETCH_ALLFRIENDS_ERROR,\n    UPDATE_USER_SUCCESS, UPDATE_USER_BEGIN, UPDATE_USER_ERROR,\n    FETCH_ALLUSERS_SUCCESS, FETCH_ALLUSERS_BEGIN, FETCH_ALLUSERS_ERROR,\n    PROMOTE_USER_SUCCESS, PROMOTE_USER_BEGIN, PROMOTE_USER_ERROR,\n    DEMOTE_USER_SUCCESS, DEMOTE_USER_BEGIN, DEMOTE_USER_ERROR, CHANGE_USERROLE,\n    CHANGE_TIMELINE_USERDATA_SUCCESS, CHANGE_TIMELINE_USERDATA_BEGIN, CHANGE_TIMELINE_USERDATA_ERROR,\n    CHANGE_ALLFRIENDS_SUCCESS, CHANGE_ALLFRIENDS_BEGIN, CHANGE_ALLFRIENDS_ERROR, UPDATE_ALL_FRIENDS,\n    REMOVE_FRIEND_SUCCESS, REMOVE_FRIEND_BEGIN, REMOVE_FRIEND_ERROR,\n    DELETE_USER_SUCCESS, DELETE_USER_BEGIN, DELETE_USER_ERROR,\n    FIND_FRIENDS_SUCCESS, FIND_FRIENDS_BEGIN, FIND_FRIENDS_ERROR,\n    ADD_FRIEND_SUCCESS, ADD_FRIEND_BEGIN, ADD_FRIEND_ERROR,\n    CANCEL_REQUEST_SUCCESS, CANCEL_REQUEST_BEGIN, CANCEL_REQUEST_ERROR,\n    CONFIRM_REQUEST_SUCCESS, CONFIRM_REQUEST_BEGIN, CONFIRM_REQUEST_ERROR,\n    SEARCH_RESULTS_SUCCESS, SEARCH_RESULTS_BEGIN, SEARCH_RESULTS_ERROR,\n} from '../actions/actionTypes';\n\nimport placeholder_user_image from '../../assets/images/placeholder.png';\nimport default_background_image from '../../assets/images/default-background-image.jpg';\n\n// loggedInUserDataReducer\nconst initialStateLoggedInUserData = {\n    id: '',\n    username: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    search: '',\n    category: '',\n    profilePicUrl: placeholder_user_image,\n    backgroundImageUrl: default_background_image,\n    authority: '',\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst loggedInUserDataReducer = (state = initialStateLoggedInUserData, action) => {\n    switch (action.type) {\n        case FETCH_LOGGEDIN_USERDATA_BEGIN:\n            return Object.assign({},\n                state,\n                initialStateLoggedInUserData,\n                { loading: true }\n            )\n        case FETCH_LOGGEDIN_USERDATA_SUCCESS:\n            return Object.assign({},\n                state,\n                action.payload,\n                {\n                    hasError: false,\n                    error: '',\n                    message: '',\n                    status: '',\n                    path: '',\n                    loading: false,\n                }\n            )\n        case FETCH_LOGGEDIN_USERDATA_ERROR:\n            return Object.assign({},\n                state,\n                initialStateLoggedInUserData,\n                {\n                    hasError: true,\n                    error: action.error,\n                    message: action.message,\n                    status: action.status,\n                    path: action.path,\n                    loading: false,\n                }\n            )\n        case UPDATE_LOGGEDIN_USERDATA:\n            return {\n                ...state,\n                ...action.payload,\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            };\n        default:\n            return state\n    }\n}\n\n// timeLineUserDataReducer\nconst initialStateTimeLineUserData = {\n    id: '',\n    username: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    search: '',\n    category: '',\n    profilePicUrl: placeholder_user_image,\n    backgroundImageUrl: default_background_image,\n    authority: '',\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst timeLineUserDataReducer = (state = initialStateTimeLineUserData, action) => {\n    switch (action.type) {\n        case FETCH_TIMELINE_USERDATA_BEGIN:\n            return Object.assign({},\n                state,\n                initialStateTimeLineUserData,\n                { loading: true }\n            )\n        case FETCH_TIMELINE_USERDATA_SUCCESS:\n            return Object.assign({},\n                state,\n                action.payload,\n                {\n                    hasError: false,\n                    error: '',\n                    message: '',\n                    status: '',\n                    path: '',\n                    loading: false,\n                }\n            )\n        case FETCH_TIMELINE_USERDATA_ERROR:\n            return Object.assign({},\n                state,\n                initialStateTimeLineUserData,\n                {\n                    hasError: true,\n                    error: action.error,\n                    message: action.message,\n                    status: action.status,\n                    path: action.path,\n                    loading: false,\n                }\n            )\n        case UPDATE_TIMELINE_USERDATA:\n            return {\n                ...state,\n                ...action.payload,\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            };\n        default:\n            return state\n    }\n}\n\n// fetchAllChatFriendsReducer\nconst initialStateAllChatFriends = {\n    friendsChatArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst fetchAllChatFriendsReducer = (state = initialStateAllChatFriends, action) => {\n    switch (action.type) {\n        case FETCH_ALLCHATFRIENDS_BEGIN:\n            return Object.assign({}, state, {\n                friendsChatArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALLCHATFRIENDS_SUCCESS:\n            return Object.assign({}, state, {\n                friendsChatArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALLCHATFRIENDS_ERROR:\n            return Object.assign({}, state, {\n                friendsChatArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case EDIT_USERSTATUS:\n            return updateUserStatus(state, action.payload)\n        default:\n            return state\n    }\n}\n\nconst updateUserStatus = (state, data) => {\n    const { id, online } = data;\n\n    const newFriendsChatArr = state.friendsChatArr.map((friend) => {\n        if (friend.id !== id) {\n            return friend\n        }\n\n        return {\n            ...friend, online\n        }\n    })\n\n    return Object.assign({}, state, {\n        friendsChatArr: [...newFriendsChatArr],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n}\n\n// updateUserReducer\nconst initialStateUpdateUser = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst updateUserReducer = (state = initialStateUpdateUser, action) => {\n    switch (action.type) {\n        case UPDATE_USER_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case UPDATE_USER_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case UPDATE_USER_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// fetchAllUsersReducer\nconst initialStateAllUsers = {\n    userArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst fetchAllUsersReducer = (state = initialStateAllUsers, action) => {\n    switch (action.type) {\n        case FETCH_ALLUSERS_BEGIN:\n            return Object.assign({}, state, {\n                userArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALLUSERS_SUCCESS:\n            return Object.assign({}, state, {\n                userArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALLUSERS_ERROR:\n            return Object.assign({}, state, {\n                userArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case CHANGE_USERROLE:\n            return updateUserRole(state, action.payload)\n        case DELETE_USER_SUCCESS:\n            return removeUser(state, action.deletedUserId)\n        default:\n            return state\n    }\n}\n\nconst removeUser = (state, deletedUserId) => {\n    const userArr = state.userArr.filter(user => user.id !== deletedUserId);\n\n    return Object.assign({}, state, {\n        userArr: [...userArr],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n}\n\nconst updateUserRole = (state, data) => {\n    const { id, role } = data;\n\n    const newUserArr = state.userArr.map((user) => {\n        if (user.id !== id) {\n            return user\n        }\n\n        return {\n            ...user, role\n        }\n    })\n\n    return Object.assign({}, state, {\n        userArr: [...newUserArr],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n}\n\n// deleteUser\nconst initialStateDeleteUser = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst deleteUserReducer = (state = initialStateDeleteUser, action) => {\n    switch (action.type) {\n        case DELETE_USER_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case DELETE_USER_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case DELETE_USER_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// promoteUserReducer\nconst initialStatePromoteUser = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst promoteUserReducer = (state = initialStatePromoteUser, action) => {\n    switch (action.type) {\n        case PROMOTE_USER_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case PROMOTE_USER_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case PROMOTE_USER_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// demoteUserReducer\nconst initialStateDemoteUser = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst demoteUserReducer = (state = initialStateDemoteUser, action) => {\n    switch (action.type) {\n        case DEMOTE_USER_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case DEMOTE_USER_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case DEMOTE_USER_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// changeTimeLineUserDataReducer\nconst initialStateChangeTimeLineUserData = {\n    id: '',\n    username: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    search: '',\n    category: '',\n    profilePicUrl: placeholder_user_image,\n    backgroundImageUrl: default_background_image,\n    authority: '',\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst changeTimeLineUserDataReducer = (state = initialStateChangeTimeLineUserData, action) => {\n    switch (action.type) {\n        case CHANGE_TIMELINE_USERDATA_BEGIN:\n            return Object.assign({},\n                state,\n                initialStateTimeLineUserData,\n                { loading: true }\n            )\n        case CHANGE_TIMELINE_USERDATA_SUCCESS:\n            return Object.assign({},\n                state,\n                action.payload,\n                {\n                    hasError: false,\n                    error: '',\n                    message: '',\n                    status: '',\n                    path: '',\n                    loading: false,\n                }\n            )\n        case CHANGE_TIMELINE_USERDATA_ERROR:\n            return Object.assign({},\n                state,\n                initialStateTimeLineUserData,\n                {\n                    hasError: true,\n                    error: action.error,\n                    message: action.message,\n                    status: action.status,\n                    path: action.path,\n                    loading: false,\n                }\n            )\n        default:\n            return state\n    }\n}\n\n// fetchAllFriendsReducer\nconst initialStateAllFriends = {\n    friendsArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst fetchAllFriendsReducer = (state = initialStateAllFriends, action) => {\n    switch (action.type) {\n        case FETCH_ALLFRIENDS_BEGIN:\n            return Object.assign({}, state, {\n                friendsArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALLFRIENDS_SUCCESS:\n            return Object.assign({}, state, {\n                friendsArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALLFRIENDS_ERROR:\n            return Object.assign({}, state, {\n                friendsArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case UPDATE_ALL_FRIENDS:\n            return Object.assign({}, state, {\n                friendsArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case REMOVE_FRIEND_SUCCESS:\n            return Object.assign({}, state, {\n                friendsArr: removeFriend(state, action.friendToRemoveId),\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nconst removeFriend = (state, friendToRemoveId) => {\n    return state.friendsArr.filter(friend => friend.id !== friendToRemoveId);\n}\n\n// changeAllFriendsReducer\nconst initialStateChangeAllFriends = {\n    friendsArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst changeAllFriendsReducer = (state = initialStateChangeAllFriends, action) => {\n    switch (action.type) {\n        case CHANGE_ALLFRIENDS_BEGIN:\n            return Object.assign({}, state, {\n                friendsArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CHANGE_ALLFRIENDS_SUCCESS:\n            return Object.assign({}, state, {\n                friendsArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CHANGE_ALLFRIENDS_ERROR:\n            return Object.assign({}, state, {\n                friendsArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// removeFriendReducer\nconst initialStateRemoveFriend = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst removeFriendReducer = (state = initialStateRemoveFriend, action) => {\n    switch (action.type) {\n        case REMOVE_FRIEND_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case REMOVE_FRIEND_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case REMOVE_FRIEND_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// findFriends\nconst initialStateFindFriends = {\n    friendsCandidatesArr: [],\n    userWaitingForAcceptingRequest: [],\n    usersReceivedRequestFromCurrentUser: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst findFriendsReducer = (state = initialStateFindFriends, action) => {\n    switch (action.type) {\n        case FIND_FRIENDS_BEGIN:\n            return Object.assign({}, state, {\n                friendsCandidatesArr: [],\n                userWaitingForAcceptingRequest: [],\n                usersReceivedRequestFromCurrentUser: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FIND_FRIENDS_SUCCESS:\n            return setFindFriendsSuccessState(state, action.payload)\n        case FIND_FRIENDS_ERROR:\n            return Object.assign({}, state, {\n                friendsCandidatesArr: [],\n                userWaitingForAcceptingRequest: [],\n                usersReceivedRequestFromCurrentUser: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case ADD_FRIEND_SUCCESS:\n            return sendUserRequest(state, action.friendCandidateId);\n        case CANCEL_REQUEST_SUCCESS:\n            return cancelRequest(state, action.friendToRejectId);\n        case CONFIRM_REQUEST_SUCCESS:\n            return confirmRequest(state, action.friendToAcceptId);\n        default:\n            return state\n    }\n}\n\nconst setFindFriendsSuccessState = (state, response) => {\n    const friendsCandidatesArr = response.filter(user => user.status !== 0 && user.status !== 1);\n    const userWaitingForAcceptingRequest = response.filter(user => user.status === 0 && user.starterOfAction === true);\n    const usersReceivedRequestFromCurrentUser = response.filter(user => user.status === 0 && user.starterOfAction === false);\n\n    return Object.assign({}, state, {\n        friendsCandidatesArr: friendsCandidatesArr,\n        userWaitingForAcceptingRequest: userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser: usersReceivedRequestFromCurrentUser,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n}\n\nconst sendUserRequest = (state, friendCandidateId) => {\n    const userToAddIndex = state.friendsCandidatesArr.findIndex(user => user.id === friendCandidateId);\n    const userToAdd = state.friendsCandidatesArr[userToAddIndex];\n\n    const friendsCandidatesArr = state.friendsCandidatesArr.filter(user => user.id !== friendCandidateId);\n    const usersReceivedRequestFromCurrentUser = [...state.usersReceivedRequestFromCurrentUser, userToAdd]\n\n    return Object.assign({}, state, {\n        friendsCandidatesArr: friendsCandidatesArr,\n        userWaitingForAcceptingRequest: state.userWaitingForAcceptingRequest.slice(),\n        usersReceivedRequestFromCurrentUser: usersReceivedRequestFromCurrentUser,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n\n}\n\nconst cancelRequest = (state, friendToRejectId) => {\n    let friendsCandidatesArr = state.friendsCandidatesArr.slice();\n    let userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.slice();\n    let usersReceivedRequestFromCurrentUser = state.usersReceivedRequestFromCurrentUser.slice();\n\n    let userToCancelIndex = usersReceivedRequestFromCurrentUser.findIndex(user => user.id === friendToRejectId);\n\n    if (userToCancelIndex > -1) {\n        const userToCancel = usersReceivedRequestFromCurrentUser[userToCancelIndex];\n        usersReceivedRequestFromCurrentUser = usersReceivedRequestFromCurrentUser.filter(user => user.id !== friendToRejectId);\n        friendsCandidatesArr = [...friendsCandidatesArr, userToCancel]\n    } else {\n        userToCancelIndex = userWaitingForAcceptingRequest.findIndex(user => user.id === friendToRejectId);\n        const userToCancel = userWaitingForAcceptingRequest[userToCancelIndex];\n        userWaitingForAcceptingRequest = userWaitingForAcceptingRequest.filter(user => user.id !== friendToRejectId);\n        friendsCandidatesArr = [...friendsCandidatesArr, userToCancel]\n    }\n\n    return Object.assign({}, state, {\n        friendsCandidatesArr,\n        userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n\n}\n\nconst confirmRequest = (state, friendToAcceptId) => {\n    const userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.filter(user => user.id !== friendToAcceptId);\n\n    return Object.assign({}, state, {\n        friendsCandidatesArr: state.friendsCandidatesArr.slice(),\n        userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser: state.usersReceivedRequestFromCurrentUser.slice(),\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n\n}\n\n// addFriend\nconst initialStateAddFriend = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst addfriendReducer = (state = initialStateAddFriend, action) => {\n    switch (action.type) {\n        case ADD_FRIEND_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case ADD_FRIEND_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case ADD_FRIEND_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// cancelRequest\nconst initialStateCancelRequest = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst cancelRequestReducer = (state = initialStateCancelRequest, action) => {\n    switch (action.type) {\n        case CANCEL_REQUEST_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CANCEL_REQUEST_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CANCEL_REQUEST_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// confirmRequestReducer\nconst initialStateConfirmRequest = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst confirmRequestReducer = (state = initialStateConfirmRequest, action) => {\n    switch (action.type) {\n        case CONFIRM_REQUEST_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CONFIRM_REQUEST_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CONFIRM_REQUEST_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// searchResults\nconst initialStateSearchResults = {\n    friendsArrSearch: [],\n    friendsCandidatesArr: [],\n    userWaitingForAcceptingRequest: [],\n    usersReceivedRequestFromCurrentUser: [],\n    search: '',\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst searchResultsReducer = (state = initialStateSearchResults, action) => {\n    switch (action.type) {\n        case SEARCH_RESULTS_BEGIN:\n            return Object.assign({}, state, {\n                friendsArrSearch: [],\n                friendsCandidatesArr: [],\n                userWaitingForAcceptingRequest: [],\n                usersReceivedRequestFromCurrentUser: [],\n                search: '',\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case SEARCH_RESULTS_SUCCESS:\n            return setSearchResultsSuccessState(state, action.payload, action.search)\n        case SEARCH_RESULTS_ERROR:\n            return Object.assign({}, state, {\n                friendsArrSearch: [],\n                friendsCandidatesArr: [],\n                userWaitingForAcceptingRequest: [],\n                usersReceivedRequestFromCurrentUser: [],\n                search: action.search,\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case ADD_FRIEND_SUCCESS:\n            return searchResultsSendUserRequest(state, action.friendCandidateId);\n        case CANCEL_REQUEST_SUCCESS:\n            return searchResultsCancelRequest(state, action.friendToRejectId);\n        case CONFIRM_REQUEST_SUCCESS:\n            return searchResultsConfirmRequest(state, action.friendToAcceptId);\n        case REMOVE_FRIEND_SUCCESS:\n            return searchResultsRemoveFriend(state, action.friendToRemoveId)\n        default:\n            return state\n    }\n}\n\nconst setSearchResultsSuccessState = (state, response, search) => {\n    const friendsArrSearch = response.filter(user => user.status === 1);\n    const friendsCandidatesArr = response.filter(user => user.status !== 0 && user.status !== 1);\n    const userWaitingForAcceptingRequest = response.filter(user => user.status === 0 && user.starterOfAction === true);\n    const usersReceivedRequestFromCurrentUser = response.filter(user => user.status === 0 && user.starterOfAction === false);\n\n    return Object.assign({}, state, {\n        friendsArrSearch,\n        friendsCandidatesArr,\n        userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser,\n        search,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n}\n\nconst searchResultsSendUserRequest = (state, friendCandidateId) => {\n    const userToAddIndex = state.friendsCandidatesArr.findIndex(user => user.id === friendCandidateId);\n\n    if (userToAddIndex > -1) {\n        const userToAdd = state.friendsCandidatesArr[userToAddIndex];\n\n        const friendsCandidatesArr = state.friendsCandidatesArr.filter(user => user.id !== friendCandidateId);\n        const usersReceivedRequestFromCurrentUser = [...state.usersReceivedRequestFromCurrentUser, userToAdd]\n\n        return Object.assign({}, state, {\n            friendsArrSearch: state.friendsArrSearch.slice(),\n            friendsCandidatesArr: friendsCandidatesArr,\n            userWaitingForAcceptingRequest: state.userWaitingForAcceptingRequest.slice(),\n            usersReceivedRequestFromCurrentUser: usersReceivedRequestFromCurrentUser,\n            search: state.search,\n            hasError: false,\n            error: '',\n            message: '',\n            status: '',\n            path: '',\n            loading: false,\n        })\n    } else {\n        return state;\n    }\n\n}\n\nconst searchResultsCancelRequest = (state, friendToRejectId) => {\n    let friendsArrSearch = state.friendsArrSearch.slice();\n    let friendsCandidatesArr = state.friendsCandidatesArr.slice();\n    let userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.slice();\n    let usersReceivedRequestFromCurrentUser = state.usersReceivedRequestFromCurrentUser.slice();\n\n    let userToCancelIndex = usersReceivedRequestFromCurrentUser.findIndex(user => user.id === friendToRejectId);\n\n    if (userToCancelIndex > -1) {\n        const userToCancel = usersReceivedRequestFromCurrentUser[userToCancelIndex];\n        usersReceivedRequestFromCurrentUser = usersReceivedRequestFromCurrentUser.filter(user => user.id !== friendToRejectId);\n        friendsCandidatesArr = [...friendsCandidatesArr, userToCancel]\n    } else {\n        userToCancelIndex = userWaitingForAcceptingRequest.findIndex(user => user.id === friendToRejectId);\n        const userToCancel = userWaitingForAcceptingRequest[userToCancelIndex];\n        userWaitingForAcceptingRequest = userWaitingForAcceptingRequest.filter(user => user.id !== friendToRejectId);\n        friendsCandidatesArr = [...friendsCandidatesArr, userToCancel]\n    }\n\n    return Object.assign({}, state, {\n        friendsArrSearch,\n        friendsCandidatesArr,\n        userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser,\n        search: state.search,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n\n}\n\nconst searchResultsConfirmRequest = (state, friendToAcceptId) => {\n    let friendsArrSearch = state.friendsArrSearch.slice();\n\n    const userToAcceptIndex = state.userWaitingForAcceptingRequest.findIndex(user => user.id === friendToAcceptId);\n\n    if (userToAcceptIndex > -1) {\n        const userToAccept = state.userWaitingForAcceptingRequest[userToAcceptIndex];\n\n        friendsArrSearch = [...friendsArrSearch, userToAccept];\n        const userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.filter(user => user.id !== friendToAcceptId);\n\n        return Object.assign({}, state, {\n            friendsArrSearch,\n            friendsCandidatesArr: state.friendsCandidatesArr.slice(),\n            userWaitingForAcceptingRequest,\n            usersReceivedRequestFromCurrentUser: state.usersReceivedRequestFromCurrentUser.slice(),\n            search: state.search,\n            hasError: false,\n            error: '',\n            message: '',\n            status: '',\n            path: '',\n            loading: false,\n        })\n    } else {\n        return state;\n    }\n}\n\nconst searchResultsRemoveFriend = (state, friendToRemoveId) => {\n    let friendsArrSearch = state.friendsArrSearch.slice();\n\n    const userToRemoveIndex = friendsArrSearch.findIndex(user => user.id === friendToRemoveId);\n\n    if (userToRemoveIndex > -1) {\n        const userToRemove = friendsArrSearch[userToRemoveIndex];\n        friendsArrSearch = state.friendsArrSearch.filter(friend => friend.id !== friendToRemoveId)\n\n        const friendsCandidatesArr = [...state.friendsCandidatesArr, userToRemove]\n\n        return Object.assign({}, state, {\n            friendsArrSearch,\n            friendsCandidatesArr,\n            userWaitingForAcceptingRequest: state.userWaitingForAcceptingRequest,\n            usersReceivedRequestFromCurrentUser: state.usersReceivedRequestFromCurrentUser,\n            search: state.search,\n            hasError: false,\n            error: '',\n            message: '',\n            status: '',\n            path: '',\n            loading: false,\n        })\n    } else {\n        return state;\n    }\n\n\n}\n\nexport {\n    fetchAllChatFriendsReducer,\n    loggedInUserDataReducer,\n    timeLineUserDataReducer,\n    fetchAllFriendsReducer,\n    updateUserReducer,\n    fetchAllUsersReducer,\n    promoteUserReducer,\n    demoteUserReducer,\n    changeTimeLineUserDataReducer,\n    changeAllFriendsReducer,\n    removeFriendReducer,\n    deleteUserReducer,\n    findFriendsReducer,\n    addfriendReducer,\n    cancelRequestReducer,\n    confirmRequestReducer,\n    searchResultsReducer,\n}","import {\n    FETCH_ALLMESSAGES_BEGIN, FETCH_ALLMESSAGES_SUCCESS, FETCH_ALLMESSAGES_ERROR, ADD_MESSAGE,\n    FETCH_UNREADMESSAGES_SUCCESS, FETCH_UNREADMESSAGES_BEGIN, FETCH_UNREADMESSAGES_ERROR, \n    LOAD_USER_MESSAGES,\n} from '../actions/actionTypes';\n\n// fetchAllMessagesReducer\nconst initialStateAllChatFriends = {\n    allMessagesArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction fetchAllMessagesReducer(state = initialStateAllChatFriends, action) {\n    switch (action.type) {\n        case FETCH_ALLMESSAGES_BEGIN:\n            return Object.assign({}, state, {\n                allMessagesArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALLMESSAGES_SUCCESS:\n            return Object.assign({}, state, {\n                allMessagesArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALLMESSAGES_ERROR:\n            return Object.assign({}, state, {\n                allMessagesArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case ADD_MESSAGE:\n            return Object.assign({}, state, {\n                allMessagesArr: [...state.allMessagesArr, action.payload],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n\n    }\n}\n\n// fetchAllUnreadMessagesReducer\nconst initialStateAllUnreadMessages = {\n    allUnreadMessages: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction fetchAllUnreadMessagesReducer(state = initialStateAllUnreadMessages, action) {\n    switch (action.type) {\n        case FETCH_UNREADMESSAGES_BEGIN:\n            return Object.assign({}, state, {\n                allUnreadMessages: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_UNREADMESSAGES_SUCCESS:\n            return Object.assign({}, state, {\n                allUnreadMessages: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_UNREADMESSAGES_ERROR:\n            return Object.assign({}, state, {\n                allUnreadMessages: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n\n    }\n}\n\n// triggerMessageLoadAction\nfunction triggerMessageLoadReducer(state = {}, action) {\n    switch (action.type) {\n        case LOAD_USER_MESSAGES:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport {\n    fetchAllMessagesReducer, fetchAllUnreadMessagesReducer, triggerMessageLoadReducer,\n}","import {\n    FETCH_ALLPOSTS_BEGIN, FETCH_ALLPOSTS_SUCCESS, FETCH_ALLPOSTS_ERROR,\n    REMOVE_POST_BEGIN, REMOVE_POST_SUCCESS, REMOVE_POST_ERROR,\n    ADDLIKE_POST_SUCCESS, ADDLIKE_POST_BEGIN, ADDLIKE_POST_ERROR,\n    CREATE_POST_SUCCESS, CREATE_POST_BEGIN, CREATE_POST_ERROR\n} from '../actions/actionTypes';\n\n// createPostReducer\nconst initialStateCreatePost = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst createPostReducer = (state = initialStateCreatePost, action) => {\n    switch (action.type) {\n        case CREATE_POST_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CREATE_POST_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CREATE_POST_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// fetchAllPostsReducer\nconst initialStateAllPosts = {\n    allPostsArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst fetchAllPostsReducer = (state = initialStateAllPosts, action) => {\n    switch (action.type) {\n        case FETCH_ALLPOSTS_BEGIN:\n            return Object.assign({}, state, {\n                allPostsArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALLPOSTS_SUCCESS:\n            return Object.assign({}, state, {\n                allPostsArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALLPOSTS_ERROR:\n            return Object.assign({}, state, {\n                allPostsArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nconst initialStateRemovePost = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\n// removePostReducer\nconst removePostReducer = (state = initialStateRemovePost, action) => {\n    switch (action.type) {\n        case REMOVE_POST_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case REMOVE_POST_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case REMOVE_POST_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nconst initialStateAddLikePost = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\n// addLikePostReducer\nconst addLikePostReducer = (state = initialStateAddLikePost, action) => {\n    switch (action.type) {\n        case ADDLIKE_POST_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case ADDLIKE_POST_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case ADDLIKE_POST_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nexport { createPostReducer, fetchAllPostsReducer, removePostReducer, addLikePostReducer }","import {\n    REMOVE_COMMENT_BEGIN, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_ERROR,\n    ADDLIKE_COMMENT_SUCCESS, ADDLIKE_COMMENT_BEGIN, ADDLIKE_COMMENT_ERROR,\n    CREATE_COMMENT_SUCCESS, CREATE_COMMENT_BEGIN, CREATE_COMMENT_ERROR,\n} from '../actions/actionTypes';\n\n\n// createCommentReducer\nconst initialStateCreateComment = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst createCommentReducer = (state = initialStateCreateComment, action) => {\n    switch (action.type) {\n        case CREATE_COMMENT_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CREATE_COMMENT_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CREATE_COMMENT_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// removeCommentReducer\nconst initialStateRemoveComment = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst removeCommentReducer = (state = initialStateRemoveComment, action) => {\n    switch (action.type) {\n        case REMOVE_COMMENT_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case REMOVE_COMMENT_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case REMOVE_COMMENT_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// addLikeCommentReducer\nconst initialStateAddLikeComment = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst addLikeCommentReducer = (state = initialStateAddLikeComment, action) => {\n    switch (action.type) {\n        case ADDLIKE_COMMENT_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case ADDLIKE_COMMENT_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case ADDLIKE_COMMENT_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nexport { createCommentReducer, removeCommentReducer, addLikeCommentReducer }","import {\n    FETCH_ALL_LOGS_SUCCESS, FETCH_ALL_LOGS_BEGIN, FETCH_ALL_LOGS_ERROR,\n    FINDBYUSERNAME_LOGS_SUCCESS, FINDBYUSERNAME_LOGS_BEGIN, FINDBYUSERNAME_LOGS_ERROR,\n    CLEARBYUSERNAME_LOGS_SUCCESS, CLEARBYUSERNAME_LOGS_BEGIN, CLEARBYUSERNAME_LOGS_ERROR,\n    CLEAR_ALL_LOGS_SUCCESS, CLEAR_ALL_LOGS_BEGIN, CLEAR_ALL_LOGS_ERROR,\n} from '../actions/actionTypes';\n\n// fetchAllLogsReducer\nconst initialStateFetchAllLogs = {\n    logsArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction fetchAllLogsReducer(state = initialStateFetchAllLogs, action) {\n    switch (action.type) {\n        case FETCH_ALL_LOGS_BEGIN:\n            return Object.assign({}, state, {\n                logsArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALL_LOGS_SUCCESS:\n            return Object.assign({}, state, {\n                logsArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: 'All logs successfully loaded.',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALL_LOGS_ERROR:\n            return Object.assign({}, state, {\n                logsArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case CLEAR_ALL_LOGS_SUCCESS:\n            return Object.assign({}, state, {\n                logsArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// findLogsByUserNameReducer\nconst initialStateFindLogsByUserName = {\n    logsArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction findLogsByUserNameReducer(state = initialStateFindLogsByUserName, action) {\n    switch (action.type) {\n        case FINDBYUSERNAME_LOGS_BEGIN:\n            return Object.assign({}, state, {\n                logsArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FINDBYUSERNAME_LOGS_SUCCESS:\n            return Object.assign({}, state, {\n                logsArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: action.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FINDBYUSERNAME_LOGS_ERROR:\n            return Object.assign({}, state, {\n                logsArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// clearByUserNameReducer\nconst initialStateClearLogsByUserName = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction clearLogsByUserNameReducer(state = initialStateClearLogsByUserName, action) {\n    switch (action.type) {\n        case CLEARBYUSERNAME_LOGS_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CLEARBYUSERNAME_LOGS_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CLEARBYUSERNAME_LOGS_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// clearAllLogsReducer\nconst initialStateClearAllLogs = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction clearAllLogsReducer(state = initialStateClearAllLogs, action) {\n    switch (action.type) {\n        case CLEAR_ALL_LOGS_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CLEAR_ALL_LOGS_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CLEAR_ALL_LOGS_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nexport {\n    fetchAllLogsReducer, findLogsByUserNameReducer, clearLogsByUserNameReducer, clearAllLogsReducer\n}","import { registerReducer, loginReducer, registerErrorReducer, loginErrorReducer, } from './authReducer';\nimport { ajaxStatusReducer, ajaxErrorReducer } from './ajaxReducer';\nimport { addPictureReducer, removePictureReducer, fetchPictureReducer, changePictureReducer } from './pictureReducer';\nimport {\n    fetchAllChatFriendsReducer, loggedInUserDataReducer, timeLineUserDataReducer, fetchAllFriendsReducer,\n    updateUserReducer, fetchAllUsersReducer, promoteUserReducer, demoteUserReducer, changeTimeLineUserDataReducer,\n    changeAllFriendsReducer,removeFriendReducer, deleteUserReducer, findFriendsReducer, addfriendReducer, \n    cancelRequestReducer, confirmRequestReducer, searchResultsReducer,\n} from './userReducer';\nimport { fetchAllMessagesReducer, fetchAllUnreadMessagesReducer, triggerMessageLoadReducer } from './messagesReducer';\nimport { createPostReducer, fetchAllPostsReducer, removePostReducer, addLikePostReducer } from './postReducer';\nimport { createCommentReducer, removeCommentReducer, addLikeCommentReducer } from './commentReducer';\nimport { fetchAllLogsReducer, findLogsByUserNameReducer, clearLogsByUserNameReducer, clearAllLogsReducer } from './logsReducer';\n\nexport default {\n    ajaxStatus: ajaxStatusReducer,\n    ajaxError: ajaxErrorReducer,\n    register: registerReducer,\n    login: loginReducer,\n    registerError: registerErrorReducer,\n    loginError: loginErrorReducer,\n    updateUserData: updateUserReducer,\n    fetchAllUsers: fetchAllUsersReducer,\n    fetchPictures: fetchPictureReducer,\n    fetchAllChatFriends: fetchAllChatFriendsReducer,\n    loggedInUserData: loggedInUserDataReducer,\n    timeLineUserData: timeLineUserDataReducer,\n    fetchAllMessages: fetchAllMessagesReducer,\n    fetchAllUnreadMessages: fetchAllUnreadMessagesReducer,\n    fetchAllFriends: fetchAllFriendsReducer,\n    createPost: createPostReducer,\n    fetchAllPosts: fetchAllPostsReducer,\n    removePost: removePostReducer,\n    removeComment: removeCommentReducer,\n    addLikePost: addLikePostReducer,\n    addLikeComment: addLikeCommentReducer,\n    createComment: createCommentReducer,\n    promoteUserData: promoteUserReducer,\n    demoteUserData: demoteUserReducer,\n    changeTimeLineUserData: changeTimeLineUserDataReducer,\n    changeAllFriends: changeAllFriendsReducer,\n    changePicture: changePictureReducer,\n    addPicture: addPictureReducer,\n    removePicture: removePictureReducer,\n    fetchAllLogs: fetchAllLogsReducer,\n    findLogsByUserName: findLogsByUserNameReducer,\n    clearLogsByUserName: clearLogsByUserNameReducer,\n    clearAllLogs: clearAllLogsReducer,\n    removeFriend: removeFriendReducer,\n    deleteUser: deleteUserReducer,\n    findFriends: findFriendsReducer,\n    addfriend: addfriendReducer,\n    cancelRequest: cancelRequestReducer,\n    confirmRequest: confirmRequestReducer,\n    searchResults: searchResultsReducer,\n    triggerMessageLoad: triggerMessageLoadReducer,\n};","import { AJAX_BEGIN, AJAX_END, AJAX_ERROR, AJAX_SUCCESS } from '../actions/actionTypes'\n\nfunction ajaxStatusReducer(state = 0, action) {\n  switch (action.type) {\n    case AJAX_BEGIN:\n      return state + 1\n    case AJAX_END:\n      return state - 1\n    default:\n      return state\n  }\n}\n\nfunction ajaxErrorReducer(state = { hasError: false, error: '', message: '', status: null, path: '' ,}, action) {\n  switch (action.type) {\n    case AJAX_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n      })\n    case AJAX_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: null,\n        path: '',\n      })\n    default:\n      return state\n  }\n}\n\nexport {\n  ajaxStatusReducer,\n  ajaxErrorReducer\n}\n\n\n","import { REGISTER_SUCCESS, LOGIN_SUCCESS, REDIRECTED, REGISTER_ERROR, LOGIN_ERROR, LOGOUT_SUCCESS } from '../actions/actionTypes';\n\nfunction registerReducer(state = { success: false , message: ''}, action) {\n    switch (action.type) {\n    case REGISTER_SUCCESS:\n        return Object.assign({}, state, { success: true, message: action.message });\n    // case LOGIN_SUCCESS:\n    //     return Object.assign({}, state, { success: false });\n    case REDIRECTED:\n        return Object.assign({}, state, { success: false });\n    default:\n        return state;\n    }\n}\n\nfunction loginReducer(state = { success: false }, action) {\n    switch (action.type) {\n    case LOGIN_SUCCESS:\n        return Object.assign({}, state, { success: true });\n    case REDIRECTED:\n        return Object.assign({}, state, { success: false });\n    case LOGOUT_SUCCESS:\n      return Object.assign({}, state, {success: false})\n    default:\n        return state;\n    }\n}\n\nfunction registerErrorReducer (state = {hasError: false, message: ''}, action) {\n    switch (action.type) {\n      case REGISTER_ERROR:\n        return Object.assign({}, state, {hasError: true, message: action.messsage})\n      case REGISTER_SUCCESS:\n        return Object.assign({}, state, {hasError: false, message: ''})\n      default:\n        return state\n    }\n  }\n  \n  function loginErrorReducer (state = {hasError: false, message: ''}, action) {\n    switch (action.type) {\n      case LOGIN_ERROR:\n        return Object.assign({}, state, {hasError: true, message: action.messsage})\n      case LOGIN_SUCCESS:\n        return Object.assign({}, state, {hasError: false, message: ''})\n      default:\n        return state\n    }\n  }\n  \n  export {\n    registerReducer,\n    loginReducer,\n    registerErrorReducer,\n    loginErrorReducer\n  }","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport reducers from './reducers'\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { LOGOUT_SUCCESS } from './actions/actionTypes'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst appReducer = combineReducers(reducers);\n\nlet middleware = [thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n    middleware = [...middleware, logger];\n} else {\n    middleware = [...middleware];\n}\n\nconst rootReducer = (state, action) => {\n    if (action.type === LOGOUT_SUCCESS) {\n        state = undefined;\n    }\n\n    return appReducer(state, action)\n}\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './styles/index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","const BASE_URL = 'http://localhost:8000';\n\nconst getAuthHeader = () => {\n    const token = localStorage.getItem(\"token\");\n\n    return (token && token.length)\n        ? { 'Authorization': `Bearer ${token}` }\n        : {}\n}\n\nexport default {\n    get: (endpoint, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                ...getAuthHeader(),\n            },\n        }).then(checkStatus)\n            // .then(data => data.json())\n            .then(callback);\n    },\n\n    post: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            },\n\n            body: JSON.stringify(data)\n        }).then(checkStatus)\n            // .then(res => res.json())\n            .then(callback);\n    },\n\n    put: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            },\n            body: JSON.stringify(data)\n        }).then(checkStatus)\n            .then(callback);\n    },\n\n    delete: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            },\n            body: JSON.stringify(data)\n        }).then(checkStatus)\n            .then(callback)\n    },\n\n    update: (data) => {\n        return fetch(BASE_URL + '/users/update', {\n            method: 'put',\n            body: JSON.stringify(data),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            }\n        }).then(checkStatus)\n            .then(() => console.log('updated!!!'))\n        // .catch(err => {\n        //     console.log(err)\n        // })\n\n    },\n\n    addPhoto: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'POST',\n            headers: {\n                ...getAuthHeader()\n            },\n            body: data\n        }).then(checkStatus)\n            .then(callback)\n    }\n}\n\nfunction checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n        return response.json()\n    } else {\n        var error = new Error(response.statusText);\n        if (response.status === 403 && response.url === (BASE_URL + '/login')) {\n            error.message = 'Incorrect credentials!';\n            error.response = response;\n            throw error;\n        } else if (response.status === 403 && response.type === 'cors') {\n            console.log('err response: ', response)\n            error.message = 'Your JWT token is expired. Please log in!'\n            error.status = 403;\n            error.type = 'cors'\n            throw error;\n        } else if (response.status === 400) {\n            console.log('err response: ', response)\n            error.message = 'Error: Bad request'\n            // error.message = response.message\n            error.status = 400;\n            error.type = 'cors'\n            throw error;\n        }\n        // else if (response.status === 500) {\n        //     console.log('err response: ', response)\n        //     error.message = 'Something went wrong'\n        //     error.status = 403;\n        //     error.type = 'cors'\n        //     throw error;\n        // }\n        else {\n            return response.json();\n        }\n    }\n}","import requester from './requester';\nimport userService from './userService';\n\nexport {\n    requester,\n    userService\n};","import React from 'react';\n\nconst Footer = () => (\n    <footer className=\"App-footer\">\n        <div className=\"mb-5\">\n            <p className=\"footer\"> &copy; Social Network 2019. All rights reserved.</p>\n        </div>\n    </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nconst Button = (props ) => {\n    const { buttonClass, url, text} = props;\n    return (\n        <NavLink\n            className={buttonClass}\n            to={url}\n            role=\"button\">\n            {text}\n        </NavLink>\n    )\n}\n\nexport default Button;","import React, {Component} from  'react';\n\nexport default class BackButtonWithContext extends Component {\n    static contextTypes = {\n        router: () => true\n    }\n\n    render() {\n        return (\n            <button\n            className={this.props.class}\n            onClick={this.context.router.history.goBack}>\n                {this.props.text}\n            </button>\n        )\n    }\n}","import React from 'react'\n\nconst ButtonWithClickEvent = (props) => {\n    const { buttonClass, text, onClick } = props;\n\n    return (\n        <button\n            type=\"button\"\n            className={buttonClass}\n            onClick={onClick}>\n            {text}\n        </button>\n    )\n}\n\nexport default ButtonWithClickEvent;","import React from 'react';\n\nexport default {\n    successToast: ({ text, closeToast }) => {\n        return (\n            <div className=\"d-flex justify-content-start align-items-center\" >\n                <div style={{ 'fontSize': '25px' }}>\n                    <i className=\"fas fa-check\"></i>\n                </div>\n                <div className=\"ml-3\">\n                    <div>{text}</div>\n                </div>\n            </div>\n        )\n    },\n\n    errorToast: ({ text, closeToast }) => {\n        return (\n            <div className=\"d-flex justify-content-start align-items-center\">\n                <div style={{ 'fontSize': '25px' }}>\n                    <i className=\"fas fa-exclamation-triangle\"></i>\n                </div>\n                <div className=\"ml-3\">\n                    <div className=\"font-weight-bold\">Error!</div>\n                    <div>{text}</div>\n                </div>\n            </div>\n        )\n    },\n\n    infoToast: ({ text, closeToast }) => {\n        return (\n            <div className=\"d-flex justify-content-start align-items-center\">\n                <div style={{ 'fontSize': '25px' }}>\n                    <i className=\"fas fa-info-circle\"></i>\n                </div>\n                <div className=\"ml-3\">\n                    <div>{text}</div>\n                </div>\n            </div>\n        )\n    }\n};\n\n\n\n","import Footer from './Footer';\nimport Input from './Input';\nimport Button from './Button';\nimport BackButton from './BackButtonWithProps';\nimport BackButtonWithContext from './BackButtonWithContext';\nimport ButtonWithClickEvent from './ButtonWithClickEvent';\nimport ErrorPage from './ErrorPage';\nimport ToastComponent from './ToastComponent';\n\nexport{\n    Footer,\n    Input,\n    Button,\n    BackButton,\n    BackButtonWithContext,\n    ButtonWithClickEvent,\n    ErrorPage,\n    ToastComponent\n};","module.exports = __webpack_public_path__ + \"static/media/placeholder.91347baa.png\";","module.exports = __webpack_public_path__ + \"static/media/default-background-image.c1edb894.jpg\";","import React, {Component} from  'react';\n\nexport default class BackButtonWithProps extends Component {\n    constructor(props){\n        super(props)\n        this.goBack = this.goBack.bind(this)\n    }\n\n    goBack() {\n        this.props.history.goBack()\n    }\n\n    render() {\n        return (\n            <button\n            className={this.props.class}\n            onClick={this.goBack}>\n                {this.props.text}\n            </button>\n        )\n    }\n}","import { requester } from '../../infrastructure';\nimport {\n    FETCH_ALLMESSAGES_SUCCESS, FETCH_ALLMESSAGES_BEGIN, FETCH_ALLMESSAGES_ERROR, ADD_MESSAGE,\n    FETCH_UNREADMESSAGES_SUCCESS, FETCH_UNREADMESSAGES_BEGIN, FETCH_UNREADMESSAGES_ERROR, LOAD_USER_MESSAGES,\n} from './actionTypes';\n\n// fetchAllMessages\nconst fetchAllMessagesSuccess = (allMessages) => {\n    return {\n        type: FETCH_ALLMESSAGES_SUCCESS,\n        payload: allMessages\n    }\n}\n\nconst fetchAllMessagesBegin = () => {\n    return {\n        type: FETCH_ALLMESSAGES_BEGIN,\n    }\n}\n\nconst fetchAllMessagesError = (error, message, status, path) => {\n    return {\n        type: FETCH_ALLMESSAGES_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst fetchAllMessagesAction = (chatUserId) => {\n    return (dispatch) => {\n        dispatch(fetchAllMessagesBegin())\n        return requester.get('/message/all/' + chatUserId, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchAllMessagesError(error, message, status, path));\n            } else {\n                dispatch(fetchAllMessagesSuccess(response));\n                dispatch(fetchAllUnreadMessagesAction());\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchAllMessagesError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\nconst addMessageAction = (messageBody) => {\n    return {\n        type: ADD_MESSAGE,\n        payload: messageBody\n    }\n}\n\n// fetchAllUnreadMessages\nconst fetchAllUnreadMessagesSuccess = (allUnreadMessages) => {\n    return {\n        type: FETCH_UNREADMESSAGES_SUCCESS,\n        payload: allUnreadMessages\n    }\n}\n\nconst fetchAllUnreadMessagesBegin = () => {\n    return {\n        type: FETCH_UNREADMESSAGES_BEGIN,\n    }\n}\n\nconst fetchAllUnreadMessagesError = (error, message, status, path) => {\n    return {\n        type: FETCH_UNREADMESSAGES_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst fetchAllUnreadMessagesAction = () => {\n    return (dispatch) => {\n        dispatch(fetchAllUnreadMessagesBegin())\n        return requester.get('/message/friend', (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchAllUnreadMessagesError(error, message, status, path));\n            } else {\n                dispatch(fetchAllUnreadMessagesSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchAllUnreadMessagesError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// LoadUserMessages and showUserChatBox\nconst triggerMessageLoadAction = (userData) => {\n    return {\n        type: LOAD_USER_MESSAGES,\n        payload: userData\n    }\n}\n\nexport { fetchAllMessagesAction, addMessageAction, fetchAllUnreadMessagesAction, triggerMessageLoadAction };","import { requester } from '../../infrastructure';\nimport {\n    FETCH_LOGGEDIN_USERDATA_BEGIN, FETCH_LOGGEDIN_USERDATA_SUCCESS, FETCH_LOGGEDIN_USERDATA_ERROR, UPDATE_LOGGEDIN_USERDATA,\n    FETCH_TIMELINE_USERDATA_BEGIN, FETCH_TIMELINE_USERDATA_SUCCESS, FETCH_TIMELINE_USERDATA_ERROR, UPDATE_TIMELINE_USERDATA,\n    FETCH_ALLCHATFRIENDS_BEGIN, FETCH_ALLCHATFRIENDS_SUCCESS, FETCH_ALLCHATFRIENDS_ERROR, EDIT_USERSTATUS,\n    FETCH_ALLFRIENDS_BEGIN, FETCH_ALLFRIENDS_SUCCESS, FETCH_ALLFRIENDS_ERROR,\n    UPDATE_USER_SUCCESS, UPDATE_USER_BEGIN, UPDATE_USER_ERROR,\n    FETCH_ALLUSERS_SUCCESS, FETCH_ALLUSERS_BEGIN, FETCH_ALLUSERS_ERROR,\n    PROMOTE_USER_SUCCESS, PROMOTE_USER_BEGIN, PROMOTE_USER_ERROR,\n    DEMOTE_USER_SUCCESS, DEMOTE_USER_BEGIN, DEMOTE_USER_ERROR, CHANGE_USERROLE,\n    CHANGE_TIMELINE_USERDATA_SUCCESS, CHANGE_TIMELINE_USERDATA_BEGIN, CHANGE_TIMELINE_USERDATA_ERROR,\n    CHANGE_ALLFRIENDS_SUCCESS, CHANGE_ALLFRIENDS_BEGIN, CHANGE_ALLFRIENDS_ERROR, UPDATE_ALL_FRIENDS,\n    REMOVE_FRIEND_SUCCESS, REMOVE_FRIEND_BEGIN, REMOVE_FRIEND_ERROR,\n    DELETE_USER_SUCCESS, DELETE_USER_BEGIN, DELETE_USER_ERROR,\n    FIND_FRIENDS_SUCCESS, FIND_FRIENDS_BEGIN, FIND_FRIENDS_ERROR,\n    ADD_FRIEND_SUCCESS, ADD_FRIEND_BEGIN, ADD_FRIEND_ERROR,\n    CANCEL_REQUEST_SUCCESS,CANCEL_REQUEST_BEGIN, CANCEL_REQUEST_ERROR,\n    CONFIRM_REQUEST_SUCCESS,CONFIRM_REQUEST_BEGIN, CONFIRM_REQUEST_ERROR,\n    SEARCH_RESULTS_SUCCESS, SEARCH_RESULTS_BEGIN, SEARCH_RESULTS_ERROR,\n} from './actionTypes';\n\n// fetchAllChatFriends\nconst fetchAllChatFriendsSuccess = (friendsChatArr) => {\n    return {\n        type: FETCH_ALLCHATFRIENDS_SUCCESS,\n        payload: friendsChatArr\n    }\n}\n\nconst fetchAllChatFriendsBegin = () => {\n    return {\n        type: FETCH_ALLCHATFRIENDS_BEGIN,\n    }\n}\n\nconst fetchAllChatFriendsError = (error, message, status, path) => {\n    return {\n        type: FETCH_ALLCHATFRIENDS_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst updateUserStatusAction = (userData) => {\n    return {\n        type: EDIT_USERSTATUS,\n        payload: userData\n    }\n}\n\nconst fetchAllChatFriendsAction = (userId) => {\n    return (dispatch) => {\n        dispatch(fetchAllChatFriendsBegin())\n        return requester.get(`/relationship/friends/${userId}`, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchAllChatFriendsError(error, message, status, path));\n            } else {\n                dispatch(fetchAllChatFriendsSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchAllChatFriendsError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// fetchLoggedInUser\nconst fetchLoggedInUserSuccess = (userData) => {\n    return {\n        type: FETCH_LOGGEDIN_USERDATA_SUCCESS,\n        payload: userData\n    }\n}\n\nconst fetchLoggedInUserBegin = () => {\n    return {\n        type: FETCH_LOGGEDIN_USERDATA_BEGIN,\n    }\n}\n\nconst fetchLoggedInUserError = (error, message, status, path) => {\n    return {\n        type: FETCH_LOGGEDIN_USERDATA_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst updateLoggedInUserDataAction = (userData) => {\n    return {\n        type: UPDATE_LOGGEDIN_USERDATA,\n        payload: userData\n    }\n}\n\nconst fetchLoggedInUserAction = (userId) => {\n    return (dispatch) => {\n        dispatch(fetchLoggedInUserBegin())\n        return requester.get(`/users/details/${userId}`, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchLoggedInUserError(error, message, status, path));\n            } else {\n                dispatch(fetchLoggedInUserSuccess(response));\n\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchLoggedInUserError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// fetchTimeLineUser\nconst fetchTimeLineUserSuccess = (userData) => {\n    return {\n        type: FETCH_TIMELINE_USERDATA_SUCCESS,\n        payload: userData\n    }\n}\n\nconst fetchTimeLineUserBegin = () => {\n    return {\n        type: FETCH_TIMELINE_USERDATA_BEGIN,\n    }\n}\n\nconst fetchTimeLineUserError = (error, message, status, path) => {\n    return {\n        type: FETCH_TIMELINE_USERDATA_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst updateTimeLineUserDataAction = (userData) => {\n    return {\n        type: UPDATE_TIMELINE_USERDATA,\n        payload: userData\n    }\n}\n\nconst fetchTimeLineUserAction = (userId) => {\n    return (dispatch) => {\n        dispatch(fetchTimeLineUserBegin())\n        return requester.get(`/users/details/${userId}`, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchTimeLineUserError(error, message, status, path));\n            } else {\n                dispatch(fetchTimeLineUserSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchTimeLineUserError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// changeCurrentTimeLineUser\nconst changeCurrentTimeLineUserSuccess = (userData) => {\n    return {\n        type: CHANGE_TIMELINE_USERDATA_SUCCESS,\n        payload: userData\n    }\n}\n\nconst changeCurrentTimeLineUserBegin = () => {\n    return {\n        type: CHANGE_TIMELINE_USERDATA_BEGIN,\n    }\n}\n\nconst changeCurrentTimeLineUserError = (error, message, status, path) => {\n    return {\n        type: CHANGE_TIMELINE_USERDATA_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst changeCurrentTimeLineUserAction = (userId) => {\n    return (dispatch) => {\n        dispatch(changeCurrentTimeLineUserBegin())\n        return requester.get(`/users/details/${userId}`, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(changeCurrentTimeLineUserError(error, message, status, path));\n            } else {\n                dispatch(updateTimeLineUserDataAction(response));\n                dispatch(changeCurrentTimeLineUserSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(changeCurrentTimeLineUserError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// fetchAllFriends\nconst fetchAllFriendsSuccess = (friendsArr) => {\n    return {\n        type: FETCH_ALLFRIENDS_SUCCESS,\n        payload: friendsArr\n    }\n}\n\nconst fetchAllFriendsBegin = () => {\n    return {\n        type: FETCH_ALLFRIENDS_BEGIN,\n    }\n}\n\nconst fetchAllFriendsError = (error, message, status, path) => {\n    return {\n        type: FETCH_ALLFRIENDS_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst fetchAllFriendsAction = (userId) => {\n    return (dispatch) => {\n        dispatch(fetchAllFriendsBegin())\n        return requester.get(`/relationship/friends/${userId}`, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchAllFriendsError(error, message, status, path));\n            } else {\n                dispatch(fetchAllFriendsSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchAllFriendsError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// changeAllFriends\nconst changeAllFriendsSuccess = (friendsArr) => {\n    return {\n        type: CHANGE_ALLFRIENDS_SUCCESS,\n        payload: friendsArr\n    }\n}\n\nconst changeAllFriendsBegin = () => {\n    return {\n        type: CHANGE_ALLFRIENDS_BEGIN,\n    }\n}\n\nconst changeAllFriendsError = (error, message, status, path) => {\n    return {\n        type: CHANGE_ALLFRIENDS_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst updateAllFriendsAction = (friendsArr) => {\n    return {\n        type: UPDATE_ALL_FRIENDS,\n        payload: friendsArr\n    }\n}\n\nconst changeAllFriendsAction = (userId) => {\n    return (dispatch) => {\n        dispatch(changeAllFriendsBegin())\n        return requester.get(`/relationship/friends/${userId}`, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(changeAllFriendsError(error, message, status, path));\n            } else {\n                dispatch(updateAllFriendsAction(response));\n                dispatch(changeAllFriendsSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(changeAllFriendsError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// updateUser\nconst updateUserSuccess = (response) => {\n    return {\n        type: UPDATE_USER_SUCCESS,\n        payload: response\n    }\n}\n\nconst updateUserBegin = () => {\n    return {\n        type: UPDATE_USER_BEGIN,\n    }\n}\n\nconst updateUserError = (error, message, status, path) => {\n    return {\n        type: UPDATE_USER_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst updateUserAction = (loggedInUserId, otherProps) => {\n    const timeLineUserId = otherProps.id;\n\n    return (dispatch) => {\n        dispatch(updateUserBegin())\n        return requester.put('/users/update/' + loggedInUserId, { ...otherProps }, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(updateUserError(error, message, status, path));\n            } else {\n                dispatch(updateTimeLineUserDataAction(otherProps));\n                if (loggedInUserId === timeLineUserId) {\n                    dispatch(updateLoggedInUserDataAction(otherProps));\n                }\n                dispatch(updateUserSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(updateUserError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// deleteUser\nconst deleteUserSuccess = (response, userId) => {\n    return {\n        type: DELETE_USER_SUCCESS,\n        payload: response,\n        deletedUserId: userId,\n    }\n}\n\nconst deleteUserBegin = () => {\n    return {\n        type: DELETE_USER_BEGIN,\n    }\n}\n\nconst deleteUserError = (error, message, status, path) => {\n    return {\n        type: DELETE_USER_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst deleteUserAction = (userId) => {\n    return (dispatch) => {\n        dispatch(deleteUserBegin())\n        return requester.delete('/users/delete/' + userId, {}, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(deleteUserError(error, message, status, path));\n            } else {\n                dispatch(deleteUserSuccess(response, userId));\n           \n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(deleteUserError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// fetchAllUsers\nconst fetchAllUsersSuccess = (userArr) => {\n    return {\n        type: FETCH_ALLUSERS_SUCCESS,\n        payload: userArr\n    }\n}\n\nconst fetchAllUsersBegin = () => {\n    return {\n        type: FETCH_ALLUSERS_BEGIN,\n    }\n}\n\nconst fetchAllUsersError = (error, message, status, path) => {\n    return {\n        type: FETCH_ALLUSERS_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst fetchAllUsersAction = (loggedInUserId) => {\n    return (dispatch) => {\n        dispatch(fetchAllUsersBegin())\n        return requester.get('/users/all/' + loggedInUserId, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchAllUsersError(error, message, status, path));\n            } else {\n                dispatch(fetchAllUsersSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchAllUsersError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// updateUserRole\nconst updateUserRoleAction = (data) => {\n    return {\n        type: CHANGE_USERROLE,\n        payload: data\n    }\n}\n\n// promoteUser\nconst promoteUserSuccess = (userArr) => {\n    return {\n        type: PROMOTE_USER_SUCCESS,\n        payload: userArr\n    }\n}\n\nconst promoteUserBegin = () => {\n    return {\n        type: PROMOTE_USER_BEGIN,\n    }\n}\n\nconst promoteUserError = (error, message, status, path) => {\n    return {\n        type: PROMOTE_USER_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst promoteUserAction = (userId) => {\n    return (dispatch) => {\n        dispatch(promoteUserBegin())\n        return requester.post('/users/promote?id=' + userId, userId, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(promoteUserError(error, message, status, path));\n            } else {\n                dispatch(updateUserRoleAction({ role: 'ADMIN', id: userId }));\n                dispatch(promoteUserSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(promoteUserError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// demoteUser\nconst demoteUserSuccess = (userArr) => {\n    return {\n        type: DEMOTE_USER_SUCCESS,\n        payload: userArr\n    }\n}\n\nconst demoteUserBegin = () => {\n    return {\n        type: DEMOTE_USER_BEGIN,\n    }\n}\n\nconst demoteUserError = (error, message, status, path) => {\n    return {\n        type: DEMOTE_USER_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst demoteUserAction = (userId) => {\n    return (dispatch) => {\n        dispatch(demoteUserBegin())\n        return requester.post('/users/demote?id=' + userId, userId, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(demoteUserError(error, message, status, path));\n            } else {\n                dispatch(updateUserRoleAction({ role: 'USER', id: userId }));\n                dispatch(demoteUserSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(demoteUserError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// removeFriend\nconst removeFriendSuccess = (response, friendToRemoveId) => {\n    return {\n        type: REMOVE_FRIEND_SUCCESS,\n        payload: response,\n        friendToRemoveId: friendToRemoveId,\n    }\n}\n\nconst removeFriendBegin = () => {\n    return {\n        type: REMOVE_FRIEND_BEGIN,\n    }\n}\n\nconst removeFriendError = (error, message, status, path) => {\n    return {\n        type: REMOVE_FRIEND_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst removeFriendAction = (loggedInUserId, friendToRemoveId) => {\n    return (dispatch) => {\n        dispatch(removeFriendBegin())\n        return requester.post('/relationship/removeFriend', { loggedInUserId, friendToRemoveId }, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(removeFriendError(error, message, status, path));\n            } else {\n                dispatch(removeFriendSuccess(response, friendToRemoveId));\n                dispatch(fetchAllChatFriendsAction(loggedInUserId));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(removeFriendError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// findFriends\nconst findFriendsSuccess = (response) => {\n    return {\n        type: FIND_FRIENDS_SUCCESS,\n        payload: response\n    }\n}\n\nconst findFriendsBegin = () => {\n    return {\n        type: FIND_FRIENDS_BEGIN,\n    }\n}\n\nconst findFriendsError = (error, message, status, path) => {\n    return {\n        type: FIND_FRIENDS_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst findFriendsAction = (userId) => {\n    return (dispatch) => {\n        dispatch(findFriendsBegin())\n        return requester.get(`/relationship/findFriends/${userId}`, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(findFriendsError(error, message, status, path));\n            } else {\n                dispatch(findFriendsSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(findFriendsError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// addFriend\nconst addFriendSuccess = (response, friendCandidateId) => {\n    return {\n        type: ADD_FRIEND_SUCCESS,\n        payload: response,\n        friendCandidateId\n    }\n}\n\nconst addFriendBegin = () => {\n    return {\n        type: ADD_FRIEND_BEGIN,\n    }\n}\n\nconst addFriendError = (error, message, status, path) => {\n    return {\n        type: ADD_FRIEND_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst addFriendAction = (loggedInUserId, friendCandidateId) => {\n    return (dispatch) => {\n        dispatch(addFriendBegin())\n        return requester.post('/relationship/addFriend', {loggedInUserId, friendCandidateId}, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(addFriendError(error, message, status, path));\n            } else {\n                dispatch(addFriendSuccess(response, friendCandidateId));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(addFriendError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// cancelRequest\nconst cancelRequestSuccess = (response, friendToRejectId) => {\n    return {\n        type: CANCEL_REQUEST_SUCCESS,\n        payload: response,\n        friendToRejectId\n    }\n}\n\nconst cancelRequestBegin = () => {\n    return {\n        type: CANCEL_REQUEST_BEGIN,\n    }\n}\n\nconst cancelRequestError = (error, message, status, path) => {\n    return {\n        type: CANCEL_REQUEST_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst cancelRequestAction = (loggedInUserId, friendToRejectId) => {\n    return (dispatch) => {\n        dispatch(cancelRequestBegin())\n        return requester.post('/relationship/cancelRequest', {loggedInUserId, friendToRejectId}, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(cancelRequestError(error, message, status, path));\n            } else {\n                dispatch(cancelRequestSuccess(response, friendToRejectId));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(cancelRequestError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n\n// confirmRequest\nconst confirmRequestSuccess = (response, friendToAcceptId) => {\n    return {\n        type: CONFIRM_REQUEST_SUCCESS,\n        payload: response,\n        friendToAcceptId\n    }\n}\n\nconst confirmRequestBegin = () => {\n    return {\n        type: CONFIRM_REQUEST_BEGIN,\n    }\n}\n\nconst confirmRequestError = (error, message, status, path) => {\n    return {\n        type: CONFIRM_REQUEST_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst confirmRequestAction = (loggedInUserId, friendToAcceptId) => {\n    return (dispatch) => {\n        dispatch(confirmRequestBegin())\n        return requester.post('/relationship/acceptFriend', {loggedInUserId, friendToAcceptId}, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(cancelRequestError(error, message, status, path));\n            } else {\n                dispatch(confirmRequestSuccess(response, friendToAcceptId));\n                dispatch(changeAllFriendsAction(loggedInUserId));\n                dispatch(fetchAllChatFriendsAction(loggedInUserId));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(confirmRequestError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n\n// searchResults\nconst searchResultsSuccess = (response, search) => {\n    return {\n        type: SEARCH_RESULTS_SUCCESS,\n        payload: response,\n        search: search,\n    }\n}\n\nconst searchResultsBegin = () => {\n    return {\n        type: SEARCH_RESULTS_BEGIN,\n    }\n}\n\nconst searchResultsError = (error, message, status, path) => {\n    return {\n        type: SEARCH_RESULTS_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst searchResultsAction = (loggedInUserId, search) => {\n    return (dispatch) => {\n        dispatch(searchResultsBegin())\n        return requester.post('/relationship/search', {loggedInUserId, search}, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(searchResultsError(error, message, status, path));\n            } else {\n                dispatch(searchResultsSuccess(response, search));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(searchResultsError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\nexport {\n    fetchAllChatFriendsAction,\n    updateUserStatusAction,\n    fetchLoggedInUserAction,\n    updateLoggedInUserDataAction,\n    fetchTimeLineUserAction,\n    updateTimeLineUserDataAction,\n    fetchAllFriendsAction,\n    updateUserAction,\n    fetchAllUsersAction,\n    promoteUserAction,\n    demoteUserAction,\n    updateUserRoleAction,\n    changeCurrentTimeLineUserAction,\n    changeAllFriendsAction,\n    removeFriendAction,\n    deleteUserAction,\n    findFriendsAction,\n    addFriendAction,\n    cancelRequestAction,\n    confirmRequestAction,\n    searchResultsAction,\n};","import React from 'react';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../components/common'\n\nconst BASE_URL = 'http://localhost:8000';\n\nexport default {\n    getBaseUrl: () => {\n        return BASE_URL;\n    },\n\n    isAuthenticated: () => {\n        return window.localStorage.getItem('token') !== null\n    },\n\n    getPayload: () => {\n        const token = localStorage.getItem('token')\n\n        if (token !== null && token !== undefined) {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            if (payload) {\n                return payload;\n            }\n        }\n    },\n\n    getUsername: () => {\n        const token = localStorage.getItem('token')\n        if (token !== null && token !== undefined) {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n\n            if (payload) {\n                return payload['sub'];\n            }\n        }\n    },\n\n    getUserId: () => {\n        const token = localStorage.getItem('token')\n        if (token !== null && token !== undefined) {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n\n            if (payload) {\n                return payload['id'];\n            }\n        }\n    },\n\n    getRole: () => {\n        const token = localStorage.getItem('token')\n        if (token !== null && token !== undefined) {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            if (payload) {\n                return payload['role'];\n            }\n        }\n    },\n\n    getProfilePicUrl: () => {\n        const token = localStorage.getItem('token')\n        if (token !== null && token !== undefined) {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            if (payload) {\n                return payload['profilePicUrl'];\n            }\n        }\n    },\n\n    getFirstName: () => {\n        const token = localStorage.getItem('token')\n        if (token !== null && token !== undefined) {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            if (payload) {\n                return payload['firstName'];\n            }\n        }\n    },\n\n    isTheUserLoggedIn: () => {\n        const token = localStorage.getItem('token')\n        if (token !== null && token !== undefined) {\n            try {\n                const payload = JSON.parse(atob(token.split('.')[1]));\n                const role = payload['role'];\n\n                if (payload) {\n                    if (role !== null || role !== undefined) {\n                        return true;\n                    }\n                }\n            } catch (err) {\n                localStorage.clear();\n                toast.error(<ToastComponent.errorToast text={'Unauthorized'} />, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n                // throw new Error(\"Unauthorized\");\n            }\n        }\n        return false;\n    },\n\n    isRoot: () => {\n        const token = localStorage.getItem('token')\n        if (token !== null && token !== undefined) {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            const role = payload['role'];\n\n            if (payload) {\n                if ((role !== null || role !== undefined) && role === 'ROOT') {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    },\n\n    isAdmin: () => {\n        const token = localStorage.getItem('token')\n        if (token !== null && token !== undefined) {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            const role = payload['role'];\n            if (payload) {\n                if ((role !== null || role !== undefined) && (role === 'ADMIN' || role === 'ROOT')) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    },\n\n\n    isLoggedInUser(username) {\n        const token = localStorage.getItem('token')\n        if (token !== null && token !== undefined) {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n\n            if (payload) {\n                const loggedInUserName = payload['sub'];\n                if (username === loggedInUserName) {\n                    return true;\n                }\n                return false;\n            }\n        }\n    },\n\n    checkIfIsRoot(role) {\n        if (role === 'ROOT') {\n            return true;\n        }\n\n        return false;\n    },\n\n    formatUsername(firstName = '', lastName = '', nameLength = 18) {\n        let name = firstName + ' ' + lastName;\n\n        if (name.length >= nameLength) {\n            return name.substring(0, nameLength) + '...';\n        }\n        return name;\n    },\n\n    getImageSize(profilePicUrl) {\n        let img = new Image();\n        img.src = profilePicUrl;\n\n        if (img.width >= img.height) {\n            return 'l'\n        }\n\n        return '';\n    }\n} ","import { AJAX_BEGIN, AJAX_END, AJAX_ERROR, AJAX_SUCCESS } from './actionTypes';\n\nfunction ajaxBegin() {\n    return {\n        type: AJAX_BEGIN\n    }\n}\n\nfunction ajaxEnd(){\n    return {\n        type: AJAX_END\n    }\n}\n\nfunction ajaxError(error, message, status, path) {\n    return {\n        type: AJAX_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nfunction ajaxSuccess(message) {\n    return {\n        type: AJAX_SUCCESS,\n        message,\n    }\n}\n\nexport {\n    ajaxBegin,\n    ajaxEnd,\n    ajaxError, \n    ajaxSuccess,\n}\n","import { LOGIN_SUCCESS, LOGIN_ERROR, REDIRECTED, REGISTER_SUCCESS, REGISTER_ERROR, LOGOUT_SUCCESS } from './actionTypes';\nimport { ajaxBegin, ajaxEnd } from './ajaxActions';\nimport { requester } from '../../infrastructure';\n\nfunction registerSuccess(message) {\n    return {\n        type: REGISTER_SUCCESS,\n        message\n    }\n}\n\nfunction registerError(messsage) {\n    return {\n        type: REGISTER_ERROR,\n        messsage\n    }\n}\n\nfunction loginSuccess() {\n    return {\n        type: LOGIN_SUCCESS,\n    }\n}\n\nfunction loginError(messsage) {\n    return {\n        type: LOGIN_ERROR,\n        messsage\n    }\n}\n\nfunction redirectAction() {\n    return {\n        type: REDIRECTED\n    }\n}\n\nfunction logoutSuccess() {\n    return {\n        type: LOGOUT_SUCCESS\n    }\n}\n\n\nfunction registerAction(userData) {\n    return (dispatch) => {\n        dispatch(ajaxBegin());\n        return requester.post('/users/register', { ...userData }, (response) => {\n            if (response.success === true) {\n                dispatch(registerSuccess(response.message))\n            } else {\n                dispatch(registerError(response.message))\n            }\n            dispatch(ajaxEnd());\n        }).catch(err => {\n            dispatch(registerError(`${err.message}`));\n            dispatch(ajaxEnd());\n        })\n    }\n}\n\nfunction loginAction(username, password) {\n    return (dispatch) => {\n        dispatch(ajaxBegin());\n        return requester.post('/login', { username, password }, (response) => {\n            if (response.error) {\n                dispatch(loginError(' Incorrect credentials!'));\n            } else {\n                saveToken(response)\n                dispatch(loginSuccess());\n            }\n            dispatch(ajaxEnd());\n        }).catch(err => {\n            localStorage.clear();\n            dispatch(loginError(`${err.message}`));\n            dispatch(ajaxEnd());\n        })\n    }\n}\n\nfunction logoutAction() {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(logoutSuccess())\n    }\n}\n\nfunction saveToken(response) {\n    const token = response.split(' ')[1];\n    localStorage.setItem('token', token);\n}\n\nexport { loginAction, redirectAction, registerAction, logoutAction };","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport BackButton from './BackButtonWithProps';\nimport socialMedia from '../../assets/images/Social_Media.jpg';\nimport './css/ErrorPage.css';\nimport { userService } from '../../infrastructure'\n\nexport default class ErrorPage extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render = () => {\n        let isAuthenticated = userService.isAuthenticated();\n        const errorClass = isAuthenticated ? '': 'error-page-content-section-unauthorized';\n        \n        return (\n            <article className=\"main-article-shared-content\">\n                <section className={`error-page-content-section ${errorClass}`}>\n                    <div className=\"container error-page-container text-center col-md-12 text-center mb-5\">\n                        {/* <div className=\"container text-center pt-5 mt-5\"> */}\n                        <h1 className=\"text-center  mt-4\" style={{ 'margin': '1rem auto' }}>This page isn't available</h1>\n\n                        <h3>The link you followed may be broken, or the page may have been removed.</h3>\n\n                        <div className=\"image-wrapper mt-5\">\n                            <img src={socialMedia} alt=\"pic\" />\n                        </div>\n\n                        <div className=\"text-center mt-5\">\n                            <BackButton\n                                text=\"Go back to the previous page\"\n                                class=\"btn App-button-primary btn-lg m-3\"\n                                {...this.props}\n                            />\n\n                            <NavLink\n                                className=\"btn App-button-primary btn-lg m-3\"\n                                to=\"/\"\n                                role=\"button\">\n                                Go to Home\n                </NavLink>\n                        </div>\n                    </div>\n                </section>\n            </article>\n        )\n    }\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/Social_Media.92c44f76.jpg\";"],"sourceRoot":""}