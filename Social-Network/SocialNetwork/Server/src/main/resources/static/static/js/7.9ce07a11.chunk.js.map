{"version":3,"sources":["components/user/Friend.js","components/user/UserFriendsAllPage.js"],"names":["Friend","props","_this","Object","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","render","state","ready","_this$state","id","firstName","lastName","firstButtonText","secondButtonText","firstButtonLink","secondButtonLink","firstButtonOnClick","secondButtonOnClick","backgroundImageUrl","default_background_image","profilePicUrl","placeholder_user_image","imgClassName","userService","getImageSize","userNames","formatUsername","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","style","backgroundImage","concat","src","alt","onClick","bind","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","username","status","actionUser","setState","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Component","UserFriendsAllPage","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","removeFriend","friendToRemoveId","event","loggedInUserId","loggedInUserData","deleteFriend","friendsArr","currentTimeLineUserId","match","params","timeLineUserData","changeTimeLineUser","changeAllPictures","changeAllFriends","prevProps","prevState","errorMessage","getErrorMessage","successMessage","getSuccessMessage","toast","error","react__WEBPACK_IMPORTED_MODULE_5___default","_common__WEBPACK_IMPORTED_MODULE_8__","errorToast","text","position","POSITION","TOP_RIGHT","success","successToast","hasError","message","_this2","isTheCurrentLoggedInUser","react__WEBPACK_IMPORTED_MODULE_5__","margin","length","map","friend","_Friend__WEBPACK_IMPORTED_MODULE_9__","assign","key","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","connect","fetchAllLogs","logsArr","fetchAllFriends","dispatch","userId","changeCurrentTimeLineUserAction","changeAllFriendsAction","changeAllPicturesAction","removeFriendAction"],"mappings":"2QAMqBA,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAyBVQ,OAAS,WACL,IAAKP,EAAKQ,MAAMC,MACZ,OAAO,KAFA,IAAAC,EAMqCV,EAAKQ,MAD7CG,EALGD,EAKHC,GAAIC,EALDF,EAKCE,UAAWC,EALZH,EAKYG,SAAUC,EALtBJ,EAKsBI,gBAAiBC,EALvCL,EAKuCK,iBAAkBC,EALzDN,EAKyDM,gBAAiBC,EAL1EP,EAK0EO,iBACjFC,EANOR,EAMPQ,mBAAoBC,EANbT,EAMaS,oBAClBC,EAAqBpB,EAAKQ,MAAMY,oBAAsBC,IACtDC,EAAgBtB,EAAKQ,MAAMc,eAAiBC,IAE9CC,EAAe,GACfF,IACAE,EAAeC,IAAYC,aAAaJ,IAG5C,IAAMK,EAAYF,IAAYG,eAAehB,EAAWC,GAExD,OACIgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBC,MAAO,CAAEC,gBAAA,OAAAC,OAA0Bf,EAA1B,OACvCS,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAcY,IAAKd,EAAee,IAAI,iBAE1DR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,GAAAG,OAAwCR,IACxCE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACTd,EAKIW,EAAAC,EAAAC,cAAA,UACEC,UAAU,qBACVM,QAASpB,EAAmBqB,KAAnBtC,OAAAuC,EAAA,EAAAvC,QAAAuC,EAAA,EAAAvC,CAAAD,IAA8BW,IACtCG,GAPHe,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAChBH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASC,GAAI1B,GAAkBF,IAUrCK,EAKIU,EAAAC,EAAAC,cAAA,UACEC,UAAU,uBACVM,QAASnB,EAAoBoB,KAApBtC,OAAAuC,EAAA,EAAAvC,QAAAuC,EAAA,EAAAvC,CAAAD,IAA+BW,IACvCI,GAPHc,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAChBH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASC,GAAIzB,GAAb,IAAiCF,EAAjC,UA9DxBf,EAAKQ,MAAQ,CACTG,GAAI,GACJC,UAAW,GACXC,SAAU,GACV8B,SAAU,GACVrB,cAAe,GACfF,mBAAoB,GACpBN,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,iBAAkB,GAClBC,mBAAoB,GACpBC,oBAAqB,GACrByB,OAAQ,GACRC,WAAY,GACZpC,OAAO,GAlBIT,mFAuBfG,KAAK2C,SAAL7C,OAAA8C,EAAA,EAAA9C,CAAA,GAAmBE,KAAKJ,MAAxB,CAA+BU,OAAO,YAxBVuC,oLCK9BC,cACF,SAAAA,EAAYlD,GAAO,IAAAC,EAAA,OAAAC,OAAAiD,EAAA,EAAAjD,CAAAE,KAAA8C,IACfjD,EAAAC,OAAAkD,EAAA,EAAAlD,CAAAE,KAAAF,OAAAmD,EAAA,EAAAnD,CAAAgD,GAAA3C,KAAAH,KAAMJ,KA8CVsD,aAAe,SAACC,EAAkBC,GAC9B,IAAMC,EAAiBxD,EAAKD,MAAM0D,iBAAiB9C,GACnDX,EAAKD,MAAM2D,aAAaF,EAAgBF,IA9CxCtD,EAAKQ,MAAQ,CACTmD,WAAY3D,EAAKD,MAAM4D,WACvBhD,GAAIX,EAAKD,MAAMY,IALJX,mFAUf,IAAM4D,EAAwBzD,KAAKJ,MAAM8D,MAAMC,OAAOnD,GAClDiD,IAA0BzD,KAAKJ,MAAMgE,iBAAiBpD,KACtDR,KAAKJ,MAAMiE,mBAAmBJ,GAC9BzD,KAAKJ,MAAMkE,kBAAkBL,GAC7BzD,KAAKJ,MAAMmE,iBAAiBN,+CAIjBO,EAAWC,GAC1B,IAAMC,EAAelE,KAAKmE,gBAAgBH,GACpCI,EAAiBpE,KAAKqE,kBAAkBL,GAE1CE,EACAI,QAAMC,MAAMC,EAAA7C,EAAAC,cAAC6C,EAAA,EAAeC,WAAhB,CAA2BC,KAAMT,IAAkB,CAC3DU,SAAUN,QAAMO,SAASC,YAEtBV,GACPE,QAAMS,QAAQP,EAAA7C,EAAAC,cAAC6C,EAAA,EAAeO,aAAhB,CAA6BL,KAAMP,IAAoB,CACjEQ,SAAUN,QAAMO,SAASC,sDAKnBd,GACd,OAAKhE,KAAKJ,MAAMsD,aAAa+B,UAAYjF,KAAKJ,MAAMsD,aAAagC,SAAWlF,KAAKJ,MAAMsD,eAAiBc,EAAUd,aACvGlD,KAAKJ,MAAMsD,aAAagC,QAE5B,6CAGKlB,GACZ,OAAIhE,KAAKJ,MAAMsD,aAAa+B,UAAYjB,EAAUd,aAAaqB,QAAUvE,KAAKJ,MAAMsD,aAAaqB,MACtFvE,KAAKJ,MAAMsD,aAAagC,SAAW,eAEvC,sCAQF,IAAAC,EAAAnF,KACCoF,EAA4BpF,KAAKJ,MAAM0D,iBAAiB9C,KAAOR,KAAKJ,MAAMgE,iBAAiBpD,GAEjG,OACIgE,EAAA7C,EAAAC,cAACyD,EAAA,SAAD,KACIb,EAAA7C,EAAAC,cAAA,WAASC,UAAU,+BACf2C,EAAA7C,EAAAC,cAAA,WAASC,UAAU,0BACf2C,EAAA7C,EAAAC,cAAA,OAAKC,UAAU,wCACX2C,EAAA7C,EAAAC,cAAA,MAAIC,UAAU,oCAAoCC,MAAO,CAAEwD,OAAU,cAArE,YACAd,EAAA7C,EAAAC,cAAA,OAAKC,UAAU,cACf2C,EAAA7C,EAAAC,cAAA,WAASC,UAAU,kBACd7B,KAAKJ,MAAM4D,WAAW+B,OAAS,EAC5BvF,KAAKJ,MAAM4D,WAAWgC,IAAI,SAACC,GAAD,OACtBL,EACIZ,EAAA7C,EAAAC,cAAC8D,EAAA,EAAD5F,OAAA6F,OAAA,CACIC,IAAKH,EAAOjF,IACRiF,EAFR,CAGI5E,gBAAe,iBAAAmB,OAAmByD,EAAOjF,IACzCM,iBAAgB,IAChBH,gBAAiB,eACjBC,iBAAkB,SAClBI,oBAAqBmE,EAAKjC,gBAG9BsB,EAAA7C,EAAAC,cAAC8D,EAAA,EAAD5F,OAAA6F,OAAA,CACIC,IAAKH,EAAOjF,IACRiF,EAFR,CAGI5E,gBAAe,iBAAAmB,OAAmByD,EAAOjF,IACzCM,iBAAgB,kBAAAkB,OAAoBmD,EAAKvF,MAAM0D,iBAAiB9C,IAChEG,gBAAiB,eACjBC,iBAAkB,YAG7B4D,EAAA7C,EAAAC,cAACyD,EAAA,SAAD,KACGb,EAAA7C,EAAAC,cAAA,oDAEIwD,EACKZ,EAAA7C,EAAAC,cAAA,UAAQC,UAAU,wBACf2C,EAAA7C,EAAAC,cAACiE,EAAA,EAAD,CAAStD,GAAE,qBAAAP,OAAuBhC,KAAKJ,MAAM0D,iBAAiB9C,KAA9D,iBAEF,KAEVgE,EAAA7C,EAAAC,cAAA,OAAKC,UAAU,2BA/FtBgB,aAoIlBiD,sBAxBS,SAACzF,GACrB,MAAO,CACHuD,iBAAkBvD,EAAMuD,iBACxBN,iBAAkBjD,EAAMiD,iBAExByC,aAAc1F,EAAM0F,aACpBC,QAAS3F,EAAM0F,aAAaC,QAE5BxC,WAAYnD,EAAM4F,gBAAgBzC,WAClCyC,gBAAiB5F,EAAM4F,gBAEvB/C,aAAc7C,EAAM6C,eAID,SAACgD,GACxB,MAAO,CACHrC,mBAAoB,SAACsC,GAAaD,EAASE,YAAgCD,KAC3EpC,iBAAkB,SAACoC,GAAaD,EAASG,YAAuBF,KAChErC,kBAAmB,SAACqC,GAAaD,EAASI,YAAwBH,KAClE5C,aAAc,SAACF,EAAgBF,GAAuB+C,EAASK,YAAmBlD,EAAgBF,OAI3F2C,CAA6ChD","file":"static/js/7.9ce07a11.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure'\nimport default_background_image from '../../assets/images/default-background-image.jpg';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\n\nexport default class Friend extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: '',\n            firstName: '',\n            lastName: '',\n            username: '',\n            profilePicUrl: '',\n            backgroundImageUrl: '',\n            firstButtonText: '',\n            secondButtonText: '',\n            firstButtonLink: '',\n            secondButtonLink: '',\n            firstButtonOnClick: '',\n            secondButtonOnClick: '',\n            status: '',\n            actionUser: '',\n            ready: false,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ ...this.props, ready: true })\n    }\n\n    render = () => {\n        if (!this.state.ready) {\n            return null;\n        }\n\n        const { id, firstName, lastName, firstButtonText, secondButtonText, firstButtonLink, secondButtonLink,\n            firstButtonOnClick, secondButtonOnClick } = this.state;\n        const backgroundImageUrl = this.state.backgroundImageUrl || default_background_image\n        const profilePicUrl = this.state.profilePicUrl || placeholder_user_image\n\n        let imgClassName = '';\n        if (profilePicUrl) {\n            imgClassName = userService.getImageSize(profilePicUrl);\n        }\n\n        const userNames = userService.formatUsername(firstName, lastName);\n\n        return (\n            <div className=\"friend-container\" style={{ 'backgroundImage': `url(${backgroundImageUrl})` }}>\n                <span className=\"friend-img-container\">\n                    <img className={imgClassName} src={profilePicUrl} alt=\"Profile pic\" />\n                </span>\n                <div className=\"friend-content\">\n                    <h2 className=\"friend-text-shadow\" >{`${userNames}`}</h2>\n                    <div className=\"friend-button-container\">\n                        {!firstButtonOnClick\n                            ? <button className=\"button update-info\" >\n                                <NavLink to={firstButtonLink}>{firstButtonText}</NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button update-info\"\n                                onClick={firstButtonOnClick.bind(this, id)} >\n                                {firstButtonText}\n                            </button>\n                        }\n\n                        {!secondButtonOnClick\n                            ? <button className=\"button view-activity\">\n                                <NavLink to={secondButtonLink}> {secondButtonText} </NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button view-activity\"\n                                onClick={secondButtonOnClick.bind(this, id)} >\n                                {secondButtonText}\n                            </button>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport Friend from './Friend';\nimport './css/UserFriends.css';\n\nimport { connect } from 'react-redux';\nimport { changeCurrentTimeLineUserAction, changeAllFriendsAction, removeFriendAction } from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\n\nclass UserFriendsAllPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            friendsArr: this.props.friendsArr,\n            id: this.props.id,\n        };\n    }\n\n    componentDidMount() {\n        const currentTimeLineUserId = this.props.match.params.id;\n        if (currentTimeLineUserId !== this.props.timeLineUserData.id) {\n            this.props.changeTimeLineUser(currentTimeLineUserId);\n            this.props.changeAllPictures(currentTimeLineUserId);\n            this.props.changeAllFriends(currentTimeLineUserId);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.removeFriend.hasError && this.props.removeFriend.message && this.props.removeFriend !== prevProps.removeFriend) {\n            return this.props.removeFriend.message;\n        }\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.removeFriend.hasError && prevProps.removeFriend.error !== this.props.removeFriend.error) {\n            return this.props.removeFriend.message || 'Server Error';\n        }\n        return null;\n    }\n\n    removeFriend = (friendToRemoveId, event) => {\n        const loggedInUserId = this.props.loggedInUserData.id\n        this.props.deleteFriend(loggedInUserId, friendToRemoveId);\n    }\n\n    render() {\n        const isTheCurrentLoggedInUser = (this.props.loggedInUserData.id === this.props.timeLineUserData.id);\n\n        return (\n            <Fragment >\n                <article className=\"main-article-shared-content\">\n                    <section className=\"friend-content-section\">\n                        <div className=\"container col-md-12 text-center mb-5\">\n                            <h1 className=\"text-center font-weight-bold mt-4\" style={{ 'margin': '1rem auto' }}>Friends </h1>\n                            <div className=\"hr-styles\"></div>\n                            <section className=\"friend-section\" >\n                                {this.props.friendsArr.length > 0 ?\n                                    this.props.friendsArr.map((friend) =>\n                                        isTheCurrentLoggedInUser ?\n                                            <Friend\n                                                key={friend.id}\n                                                {...friend}\n                                                firstButtonLink={`/home/profile/${friend.id}`}\n                                                secondButtonLink={`/`}\n                                                firstButtonText={'VIEW PROFILE'}\n                                                secondButtonText={'REMOVE'}\n                                                secondButtonOnClick={this.removeFriend}\n                                            />\n                                            :\n                                            <Friend\n                                                key={friend.id}\n                                                {...friend}\n                                                firstButtonLink={`/home/profile/${friend.id}`}\n                                                secondButtonLink={`/home/comments/${this.props.loggedInUserData.id}`}\n                                                firstButtonText={'VIEW PROFILE'}\n                                                secondButtonText={'HOME'}\n                                            />)\n                                    :\n                                    (<Fragment>\n                                        <h2>You don't have any friends. Find some!</h2>\n                                        {\n                                            isTheCurrentLoggedInUser ?\n                                                (<button className=\"button view-activity\">\n                                                    <NavLink to={`/home/findFriends/${this.props.loggedInUserData.id}`}>FIND FRIENDS</NavLink>\n                                                </button>)\n                                                : null\n                                        }\n                                        <div className=\"hr-styles\"></div>\n                                    </Fragment>\n                                    )\n                                }\n                            </section>\n                        </div>\n                    </section>\n                </article>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n\n        fetchAllLogs: state.fetchAllLogs,\n        logsArr: state.fetchAllLogs.logsArr,\n\n        friendsArr: state.fetchAllFriends.friendsArr,\n        fetchAllFriends: state.fetchAllFriends,\n\n        removeFriend: state.removeFriend\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeTimeLineUser: (userId) => { dispatch(changeCurrentTimeLineUserAction(userId)) },\n        changeAllFriends: (userId) => { dispatch(changeAllFriendsAction(userId)) },\n        changeAllPictures: (userId) => { dispatch(changeAllPicturesAction(userId)) },\n        deleteFriend: (loggedInUserId, friendToRemoveId) => { dispatch(removeFriendAction(loggedInUserId, friendToRemoveId)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserFriendsAllPage);"],"sourceRoot":""}