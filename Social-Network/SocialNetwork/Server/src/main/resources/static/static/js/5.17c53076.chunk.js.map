{"version":3,"sources":["components/user/Friend.js","components/user/FriendRequest.js","components/user/UserSearchResultsPage.js"],"names":["Friend","props","_this","Object","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","render","state","ready","_this$state","id","firstName","lastName","firstButtonText","secondButtonText","firstButtonLink","secondButtonLink","firstButtonOnClick","secondButtonOnClick","backgroundImageUrl","default_background_image","profilePicUrl","placeholder_user_image","imgClassName","userService","getImageSize","userNames","formatUsername","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","style","backgroundImage","concat","src","alt","onClick","bind","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","username","status","actionUser","setState","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Component","FriendRequest","thirdButtonText","thirdButtonLink","thirdButtonOnClick","formattedName","UserSearchResultsPage","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","addFriend","friendCandidateId","loggedInUserId","loggedInUserData","confirmRequest","friendToAcceptId","acceptRequest","rejectRequest","friendToRejectId","cancelRequest","removeFriend","friendToRemoveId","event","deleteFriend","search","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","getUserId","timeLineUserData","changeTimeLineUser","changeAllPictures","changeAllFriends","prevProps","prevState","errorMessage","getErrorMessage","successMessage","getSuccessMessage","toast","error","react__WEBPACK_IMPORTED_MODULE_6___default","_common__WEBPACK_IMPORTED_MODULE_9__","errorToast","text","position","POSITION","TOP_RIGHT","success","successToast","addfriendData","hasError","message","cancelRequestData","confirmRequestData","_this2","friends","friendsArrSearch","length","react__WEBPACK_IMPORTED_MODULE_6__","map","friend","_Friend__WEBPACK_IMPORTED_MODULE_10__","assign","key","requests","userWaitingForAcceptingRequest","_FriendRequest__WEBPACK_IMPORTED_MODULE_11__","friendsCandidates","usersReceivedRequestFromCurrentUser","remainCandidates","friendsCandidatesArr","noResult","searchResults","loading","margin","connect","addfriend","dispatch","userId","changeCurrentTimeLineUserAction","changeAllFriendsAction","changeAllPicturesAction","addFriendAction","cancelRequestAction","confirmRequestAction","removeFriendAction"],"mappings":"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","file":"static/js/5.17c53076.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure'\nimport default_background_image from '../../assets/images/default-background-image.jpg';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\n\nexport default class Friend extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: '',\n            firstName: '',\n            lastName: '',\n            username: '',\n            profilePicUrl: '',\n            backgroundImageUrl: '',\n            firstButtonText: '',\n            secondButtonText: '',\n            firstButtonLink: '',\n            secondButtonLink: '',\n            firstButtonOnClick: '',\n            secondButtonOnClick: '',\n            status: '',\n            actionUser: '',\n            ready: false,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ ...this.props, ready: true })\n    }\n\n    render = () => {\n        if (!this.state.ready) {\n            return null;\n        }\n\n        const { id, firstName, lastName, firstButtonText, secondButtonText, firstButtonLink, secondButtonLink,\n            firstButtonOnClick, secondButtonOnClick } = this.state;\n        const backgroundImageUrl = this.state.backgroundImageUrl || default_background_image\n        const profilePicUrl = this.state.profilePicUrl || placeholder_user_image\n\n        let imgClassName = '';\n        if (profilePicUrl) {\n            imgClassName = userService.getImageSize(profilePicUrl);\n        }\n\n        const userNames = userService.formatUsername(firstName, lastName);\n\n        return (\n            <div className=\"friend-container\" style={{ 'backgroundImage': `url(${backgroundImageUrl})` }}>\n                <span className=\"friend-img-container\">\n                    <img className={imgClassName} src={profilePicUrl} alt=\"Profile pic\" />\n                </span>\n                <div className=\"friend-content\">\n                    <h2 className=\"friend-text-shadow\" >{`${userNames}`}</h2>\n                    <div className=\"friend-button-container\">\n                        {!firstButtonOnClick\n                            ? <button className=\"button update-info\" >\n                                <NavLink to={firstButtonLink}>{firstButtonText}</NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button update-info\"\n                                onClick={firstButtonOnClick.bind(this, id)} >\n                                {firstButtonText}\n                            </button>\n                        }\n\n                        {!secondButtonOnClick\n                            ? <button className=\"button view-activity\">\n                                <NavLink to={secondButtonLink}> {secondButtonText} </NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button view-activity\"\n                                onClick={secondButtonOnClick.bind(this, id)} >\n                                {secondButtonText}\n                            </button>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure';\nimport default_background_image from '../../assets/images/default-background-image.jpg';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\n\nexport default class FriendRequest extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: '',\n            firstName: '',\n            lastName: '',\n            username: '',\n            profilePicUrl: '',\n            backgroundImageUrl: '',\n            firstButtonText: '',\n            secondButtonText: '',\n            firstButtonLink: '',\n            secondButtonLink: '',\n            firstButtonOnClick: '',\n            secondButtonOnClick: '',\n            status: '',\n            actionUser: '',\n            ready: false,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ ...this.props, ready: true })\n    }\n\n    render = () => {\n        if (!this.state.ready) {\n            return null;\n        }\n\n        const { id, firstName, lastName, firstButtonText, secondButtonText, firstButtonLink, secondButtonLink,\n            firstButtonOnClick, secondButtonOnClick, thirdButtonText, thirdButtonLink, thirdButtonOnClick } = this.state;\n        const backgroundImageUrl = this.state.backgroundImageUrl || default_background_image\n        const profilePicUrl = this.state.profilePicUrl || placeholder_user_image\n        const formattedName = userService.formatUsername(firstName, lastName, 18)\n\n        let imgClassName = '';\n        if (profilePicUrl) {\n            imgClassName = userService.getImageSize(profilePicUrl);\n        }\n\n        return (\n            <div className=\"friend-container\" style={{ 'backgroundImage': `url(${backgroundImageUrl})` }}>\n                <span className=\"friend-img-container\">\n                    <img className={imgClassName} src={profilePicUrl} alt=\"Profile pic\" />\n                </span>\n                <div className=\"friend-content\">\n                    <h2 className=\"friend-text-shadow\" >{`${formattedName}`}</h2>\n                    <div className=\"friend-button-container\">\n                        {!firstButtonOnClick\n                            ? <button className=\"button update-info\" >\n                                <NavLink to={firstButtonLink}>{firstButtonText}</NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button update-info\"\n                                onClick={firstButtonOnClick.bind(this, id)} >\n                                {firstButtonText}\n                            </button>\n                        }\n\n                        {!secondButtonOnClick\n                            ?\n                            <button className=\"button update-info\">\n                                <NavLink to={secondButtonLink}>{secondButtonText}</NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button update-info\"\n                                onClick={secondButtonOnClick.bind(this, id)} >\n                                {secondButtonText}\n                            </button>\n                        }\n\n                        {!thirdButtonOnClick\n                            ?\n                            <button className=\"button update-info\">\n                                <NavLink to={thirdButtonLink}>{thirdButtonText}</NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button update-info\"\n                                onClick={thirdButtonOnClick.bind(this, id)} >\n                                {secondButtonText}\n                            </button>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component, Fragment } from 'react';\nimport {userService} from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common'\nimport Friend from './Friend';\nimport FriendRequest from './FriendRequest';\nimport './css/UserFriends.css';\n\nimport { connect } from 'react-redux';\nimport {\n    changeCurrentTimeLineUserAction, changeAllFriendsAction, addFriendAction,\n    cancelRequestAction, confirmRequestAction, removeFriendAction, searchResultsAction\n} from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\n\nclass UserSearchResultsPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            search: '',\n            ready: false,\n        };\n\n        this.addFriend = this.addFriend.bind(this);\n        this.confirmRequest = this.confirmRequest.bind(this);\n        this.rejectRequest = this.rejectRequest.bind(this);\n        this.removeFriend = this.removeFriend.bind(this);\n    }\n\n    componentDidMount() {\n        const loggedInUserId = userService.getUserId();\n        if (loggedInUserId !== this.props.timeLineUserData.id) {\n            this.props.changeTimeLineUser(loggedInUserId);\n            this.props.changeAllPictures(loggedInUserId);\n            this.props.changeAllFriends(loggedInUserId);\n        }\n\n        this.setState({ready: true})\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.addfriendData.hasError && this.props.addfriendData.message && this.props.addfriendData !== prevProps.addfriendData) {\n            return this.props.addfriendData.message;\n        }\n        else if (!this.props.cancelRequestData.hasError && this.props.cancelRequestData.message && this.props.cancelRequestData !== prevProps.cancelRequestData) {\n            return this.props.cancelRequestData.message;\n        }\n        else if (!this.props.confirmRequestData.hasError && this.props.confirmRequestData.message && this.props.confirmRequestData !== prevProps.confirmRequestData) {\n            return this.props.confirmRequestData.message;\n        }\n        else if (!this.props.removeFriend.hasError && this.props.removeFriend.message && this.props.removeFriend !== prevProps.removeFriend) {\n            return this.props.removeFriend.message;\n        }\n\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.addfriendData.hasError && prevProps.addfriendData.error !== this.props.addfriendData.error) {\n            return this.props.addfriendData.message || 'Server Error';\n        }\n        else if (this.props.cancelRequestData.hasError && prevProps.cancelRequestData.error !== this.props.cancelRequestData.error) {\n            return this.props.cancelRequestData.message || 'Server Error';\n        }\n        else if (this.props.confirmRequestData.hasError && prevProps.confirmRequestData.error !== this.props.confirmRequestData.error) {\n            return this.props.confirmRequestData.message || 'Server Error';\n        }\n        else if (this.props.removeFriend.hasError && prevProps.removeFriend.error !== this.props.removeFriend.error) {\n            return this.props.removeFriend.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    addFriend = (friendCandidateId) => {\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.addFriend(loggedInUserId, friendCandidateId);\n    }\n\n    confirmRequest = (friendToAcceptId) => {\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.acceptRequest(loggedInUserId, friendToAcceptId);\n    }\n\n    rejectRequest = (friendToRejectId) => {\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.cancelRequest(loggedInUserId, friendToRejectId);\n    }\n\n    removeFriend = (friendToRemoveId, event) => {\n        const loggedInUserId = this.props.loggedInUserData.id\n        this.props.deleteFriend(loggedInUserId, friendToRemoveId);\n    }\n\n    render() {\n        if(!this.state.ready){\n            return <h1 className=\"text-center pt-5 mt-5\">Loading...</h1>\n        }\n\n        const friendsArrLength = this.props.friendsArrSearch.length;\n        let friends = '';\n\n        if (friendsArrLength > 0) {\n            friends = (\n                <Fragment>\n                    <h3 className=\"mt-5\">Users From Your Friend List</h3>\n                    <div className=\"hr-styles\"></div>\n                    {this.props.friendsArrSearch.map((friend) =>\n                        <Friend\n                            key={friend.id}\n                            {...this.props}\n                            {...friend}\n                            firstButtonLink={`/home/profile/${friend.id}`}\n                            secondButtonLink={`/`}\n                            firstButtonText={'VIEW PROFILE'}\n                            secondButtonText={'REMOVE'}\n                            secondButtonOnClick={this.removeFriend}\n                        />)}\n                </Fragment>\n            )\n        }\n\n        const requestLength = this.props.userWaitingForAcceptingRequest.length;\n        let requests = '';\n        if (requestLength > 0) {\n            requests = (\n                <Fragment>\n                    <h3 className=\"mt-5\">Respond to Your Friend Requests</h3>\n                    <div className=\"hr-styles\"></div>\n                    {this.props.userWaitingForAcceptingRequest.map((friend) =>\n                        <FriendRequest\n                            key={friend.id}\n                            {...this.props}\n                            {...friend}\n                            firstButtonText={'CONFIRM'}\n                            secondButtonText={'REJECT'}\n                            thirdButtonText={'VIEW PROFILE'}\n                            firstButtonOnClick={this.confirmRequest}\n                            secondButtonOnClick={this.rejectRequest}\n                            thirdButtonLink={`/home/profile/${friend.id}`}\n                        />)}\n                </Fragment>\n            )\n        }\n\n        let waitingForResponseUsers = this.props.usersReceivedRequestFromCurrentUser.length;\n        let friendsCandidates = '';\n\n        if (waitingForResponseUsers > 0) {\n            friendsCandidates = (\n                <Fragment>\n                    <h3 className=\"mt-5\">Pending Requests</h3>\n                    <div className=\"hr-styles\"></div>\n                    {\n                        this.props.usersReceivedRequestFromCurrentUser.map((friend) =>\n                            <Friend\n                                key={friend.id}\n                                {...this.props}\n                                {...friend}\n                                firstButtonLink={`/home/profile/${friend.id}`}\n                                secondButtonLink={`/`}\n                                firstButtonText={'VIEW PROFILE'}\n                                secondButtonText={'CANCEL REQUEST'}\n                                secondButtonOnClick={this.rejectRequest}\n                            />)\n                    }\n                </Fragment>\n            )\n        }\n\n        let friendsCandidatesArr = this.props.friendsCandidatesArr.length;\n        let remainCandidates = '';\n\n        if (friendsCandidatesArr > 0) {\n            remainCandidates = (\n                <Fragment>\n                    <h3 className=\"mt-5\">People You May Know</h3>\n                    <div className=\"hr-styles\"></div>\n                    {\n                        this.props.friendsCandidatesArr.map((friend) =>\n                            <Friend\n                                key={friend.id}\n                                {...this.props}\n                                {...friend}\n                                firstButtonLink={`/home/profile/${friend.id}`}\n                                secondButtonLink={`/`}\n                                firstButtonText={'VIEW PROFILE'}\n                                secondButtonText={'ADD FRIEND'}\n                                secondButtonOnClick={this.addFriend}\n                            />)\n                    }\n                </Fragment>\n            )\n        }\n\n        let noResult = '';\n\n        if (!friends && !requests && !friendsCandidates && !remainCandidates && !this.props.searchResults.loading) {\n            noResult = (\n                <Fragment>\n                    <h2>No results for <span className=\"App-secondary-color\">\"{this.props.search}\"</span></h2>\n                    <div className=\"hr-styles\"></div>\n                </Fragment>\n            )\n        }\n\n        return (\n            <Fragment>\n                <article className=\"main-article-shared-content\">\n                    <section className=\"friend-content-section\">\n                        <div className=\"container col-md-12 text-center mb-5\">\n                            <h1 className=\"text-center font-weight-bold mt-4\" style={{ 'margin': '1rem auto' }}>Search Results</h1>\n                            <div className=\"hr-styles\"></div>\n                            <section className=\"friend-section\" >\n                                {friends}\n                                {requests}\n                                {friendsCandidates}\n                                {remainCandidates}\n                                {noResult}\n                            </section>\n                        </div>\n                    </section>\n                </article>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n\n        searchResults: state.searchResults,\n        search: state.searchResults.search,\n        friendsArrSearch: state.searchResults.friendsArrSearch,\n        friendsCandidatesArr: state.searchResults.friendsCandidatesArr,\n        userWaitingForAcceptingRequest: state.searchResults.userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser: state.searchResults.usersReceivedRequestFromCurrentUser,\n\n        addfriendData: state.addfriend,\n        cancelRequestData: state.cancelRequest,\n        confirmRequestData: state.confirmRequest,\n        removeFriend: state.removeFriend\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeTimeLineUser: (userId) => { dispatch(changeCurrentTimeLineUserAction(userId)) },\n        changeAllFriends: (userId) => { dispatch(changeAllFriendsAction(userId)) },\n        changeAllPictures: (userId) => { dispatch(changeAllPicturesAction(userId)) },\n        addFriend: (loggedInUserId, friendCandidateId) => { dispatch(addFriendAction(loggedInUserId, friendCandidateId)) },\n        cancelRequest: (loggedInUserId, friendToRejectId) => { dispatch(cancelRequestAction(loggedInUserId, friendToRejectId)) },\n        acceptRequest: (loggedInUserId, friendToAcceptId) => { dispatch(confirmRequestAction(loggedInUserId, friendToAcceptId)) },\n        deleteFriend: (loggedInUserId, friendToRemoveId) => { dispatch(removeFriendAction(loggedInUserId, friendToRemoveId)) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSearchResultsPage);"],"sourceRoot":""}