{"version":3,"sources":["components/user/Friend.js","components/user/FriendRequest.js","components/user/UserFindFriendsPage.js"],"names":["Friend","props","_this","Object","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","render","state","ready","_this$state","id","firstName","lastName","firstButtonText","secondButtonText","firstButtonLink","secondButtonLink","firstButtonOnClick","secondButtonOnClick","backgroundImageUrl","default_background_image","profilePicUrl","placeholder_user_image","imgClassName","userService","getImageSize","userNames","formatUsername","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","style","backgroundImage","concat","src","alt","onClick","bind","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","username","status","actionUser","setState","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Component","FriendRequest","thirdButtonText","thirdButtonLink","thirdButtonOnClick","formattedName","UserFindFriendsPage","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","addFriend","friendCandidateId","loggedInUserId","loggedInUserData","confirmRequest","friendToAcceptId","acceptRequest","rejectRequest","friendToRejectId","cancelRequest","friendsCandidatesArr","userWaitingForAcceptingRequest","usersReceivedRequestFromCurrentUser","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","getUserId","timeLineUserData","changeTimeLineUser","changeAllPictures","changeAllFriends","findFriends","prevProps","prevState","errorMessage","getErrorMessage","successMessage","getSuccessMessage","toast","error","react__WEBPACK_IMPORTED_MODULE_6___default","_common__WEBPACK_IMPORTED_MODULE_9__","errorToast","text","position","POSITION","TOP_RIGHT","success","successToast","findFriendsData","hasError","message","addfriendData","cancelRequestData","confirmRequestData","_this2","requests","length","react__WEBPACK_IMPORTED_MODULE_6__","map","friend","_FriendRequest__WEBPACK_IMPORTED_MODULE_11__","assign","key","friendsCandidates","_Friend__WEBPACK_IMPORTED_MODULE_10__","remainCandidates","noResult","margin","connect","addfriend","dispatch","userId","changeCurrentTimeLineUserAction","changeAllFriendsAction","changeAllPicturesAction","findFriendsAction","addFriendAction","cancelRequestAction","confirmRequestAction"],"mappings":"2QAMqBA,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAyBVQ,OAAS,WACL,IAAKP,EAAKQ,MAAMC,MACZ,OAAO,KAFA,IAAAC,EAMqCV,EAAKQ,MAD7CG,EALGD,EAKHC,GAAIC,EALDF,EAKCE,UAAWC,EALZH,EAKYG,SAAUC,EALtBJ,EAKsBI,gBAAiBC,EALvCL,EAKuCK,iBAAkBC,EALzDN,EAKyDM,gBAAiBC,EAL1EP,EAK0EO,iBACjFC,EANOR,EAMPQ,mBAAoBC,EANbT,EAMaS,oBAClBC,EAAqBpB,EAAKQ,MAAMY,oBAAsBC,IACtDC,EAAgBtB,EAAKQ,MAAMc,eAAiBC,IAE9CC,EAAe,GACfF,IACAE,EAAeC,IAAYC,aAAaJ,IAG5C,IAAMK,EAAYF,IAAYG,eAAehB,EAAWC,GAExD,OACIgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBC,MAAO,CAAEC,gBAAA,OAAAC,OAA0Bf,EAA1B,OACvCS,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAcY,IAAKd,EAAee,IAAI,iBAE1DR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,GAAAG,OAAwCR,IACxCE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACTd,EAKIW,EAAAC,EAAAC,cAAA,UACEC,UAAU,qBACVM,QAASpB,EAAmBqB,KAAnBtC,OAAAuC,EAAA,EAAAvC,QAAAuC,EAAA,EAAAvC,CAAAD,IAA8BW,IACtCG,GAPHe,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAChBH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASC,GAAI1B,GAAkBF,IAUrCK,EAKIU,EAAAC,EAAAC,cAAA,UACEC,UAAU,uBACVM,QAASnB,EAAoBoB,KAApBtC,OAAAuC,EAAA,EAAAvC,QAAAuC,EAAA,EAAAvC,CAAAD,IAA+BW,IACvCI,GAPHc,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAChBH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASC,GAAIzB,GAAb,IAAiCF,EAAjC,UA9DxBf,EAAKQ,MAAQ,CACTG,GAAI,GACJC,UAAW,GACXC,SAAU,GACV8B,SAAU,GACVrB,cAAe,GACfF,mBAAoB,GACpBN,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,iBAAkB,GAClBC,mBAAoB,GACpBC,oBAAqB,GACrByB,OAAQ,GACRC,WAAY,GACZpC,OAAO,GAlBIT,mFAuBfG,KAAK2C,SAAL7C,OAAA8C,EAAA,EAAA9C,CAAA,GAAmBE,KAAKJ,MAAxB,CAA+BU,OAAO,YAxBVuC,0MCAfC,cACjB,SAAAA,EAAYlD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACfjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KAAMJ,KAyBVQ,OAAS,WACL,IAAKP,EAAKQ,MAAMC,MACZ,OAAO,KAFA,IAAAC,EAM2FV,EAAKQ,MADnGG,EALGD,EAKHC,GAAIC,EALDF,EAKCE,UAAWC,EALZH,EAKYG,SAAUC,EALtBJ,EAKsBI,gBAAiBC,EALvCL,EAKuCK,iBAAkBC,EALzDN,EAKyDM,gBAAiBC,EAL1EP,EAK0EO,iBACjFC,EANOR,EAMPQ,mBAAoBC,EANbT,EAMaS,oBAAqB+B,EANlCxC,EAMkCwC,gBAAiBC,EANnDzC,EAMmDyC,gBAAiBC,EANpE1C,EAMoE0C,mBACzEhC,EAAqBpB,EAAKQ,MAAMY,oBAAsBC,IACtDC,EAAgBtB,EAAKQ,MAAMc,eAAiBC,IAC5C8B,EAAgB5B,IAAYG,eAAehB,EAAWC,EAAU,IAElEW,EAAe,GAKnB,OAJIF,IACAE,EAAeC,IAAYC,aAAaJ,IAIxCO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBC,MAAO,CAAEC,gBAAA,OAAAC,OAA0Bf,EAA1B,OACvCS,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAcY,IAAKd,EAAee,IAAI,iBAE1DR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,GAAAG,OAAwCkB,IACxCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACTd,EAKIW,EAAAC,EAAAC,cAAA,UACEC,UAAU,qBACVM,QAASpB,EAAmBqB,KAAnBtC,OAAAuC,EAAA,EAAAvC,QAAAuC,EAAA,EAAAvC,CAAAD,IAA8BW,IACtCG,GAPHe,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAChBH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASC,GAAI1B,GAAkBF,IAUrCK,EAMIU,EAAAC,EAAAC,cAAA,UACEC,UAAU,qBACVM,QAASnB,EAAoBoB,KAApBtC,OAAAuC,EAAA,EAAAvC,QAAAuC,EAAA,EAAAvC,CAAAD,IAA+BW,IACvCI,GAPLc,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASC,GAAIzB,GAAmBF,IAUtCqC,EAMIvB,EAAAC,EAAAC,cAAA,UACEC,UAAU,qBACVM,QAASc,EAAmBb,KAAnBtC,OAAAuC,EAAA,EAAAvC,QAAAuC,EAAA,EAAAvC,CAAAD,IAA8BW,IACtCI,GAPLc,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASC,GAAIS,GAAkBD,QA3EvDlD,EAAKQ,MAAQ,CACTG,GAAI,GACJC,UAAW,GACXC,SAAU,GACV8B,SAAU,GACVrB,cAAe,GACfF,mBAAoB,GACpBN,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,iBAAkB,GAClBC,mBAAoB,GACpBC,oBAAqB,GACrByB,OAAQ,GACRC,WAAY,GACZpC,OAAO,GAlBIT,mFAuBfG,KAAK2C,SAAL7C,OAAA8C,EAAA,EAAA9C,CAAA,GAAmBE,KAAKJ,MAAxB,CAA+BU,OAAO,YAxBHuC,oMCSrCM,cACF,SAAAA,EAAYvD,GAAO,IAAAC,EAAA,OAAAC,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAmD,IACftD,EAAAC,OAAAuD,EAAA,EAAAvD,CAAAE,KAAAF,OAAAwD,EAAA,EAAAxD,CAAAqD,GAAAhD,KAAAH,KAAMJ,KA2EV2D,UAAY,SAACC,GACT,IAAMC,EAAiB5D,EAAKD,MAAM8D,iBAAiBlD,GACnDX,EAAKD,MAAM2D,UAAUE,EAAgBD,IA9EtB3D,EAiFnB8D,eAAiB,SAACC,GACd,IAAMH,EAAiB5D,EAAKD,MAAM8D,iBAAiBlD,GACnDX,EAAKD,MAAMiE,cAAcJ,EAAgBG,IAnF1B/D,EAsFnBiE,cAAgB,SAACC,GACb,IAAMN,EAAiB5D,EAAKD,MAAM8D,iBAAiBlD,GACnDX,EAAKD,MAAMoE,cAAcP,EAAgBM,IArFzClE,EAAKQ,MAAQ,CACT4D,qBAAsB,GACtBC,+BAAgC,GAChCC,oCAAqC,GACrC7D,OAAO,GAGXT,EAAK0D,UAAY1D,EAAK0D,UAAUnB,KAAftC,OAAAsE,EAAA,EAAAtE,QAAAsE,EAAA,EAAAtE,CAAAD,KACjBA,EAAK8D,eAAiB9D,EAAK8D,eAAevB,KAApBtC,OAAAsE,EAAA,EAAAtE,QAAAsE,EAAA,EAAAtE,CAAAD,KACtBA,EAAKiE,cAAgBjE,EAAKiE,cAAc1B,KAAnBtC,OAAAsE,EAAA,EAAAtE,QAAAsE,EAAA,EAAAtE,CAAAD,KAZNA,mFAgBf,IAAM4D,EAAiBnC,IAAY+C,YAC/BZ,IAAmBzD,KAAKJ,MAAM0E,iBAAiB9D,KAC/CR,KAAKJ,MAAM2E,mBAAmBd,GAC9BzD,KAAKJ,MAAM4E,kBAAkBf,GAC7BzD,KAAKJ,MAAM6E,iBAAiBhB,IAGhCzD,KAAKJ,MAAM8E,YAAYjB,GACvBzD,KAAK2C,SAAS,CAAErC,OAAO,+CAGRqE,EAAWC,GAC1B,IAAMC,EAAe7E,KAAK8E,gBAAgBH,GACpCI,EAAiB/E,KAAKgF,kBAAkBL,GAE1CE,EACAI,QAAMC,MAAMC,EAAAxD,EAAAC,cAACwD,EAAA,EAAeC,WAAhB,CAA2BC,KAAMT,IAAkB,CAC3DU,SAAUN,QAAMO,SAASC,YAEtBV,GACPE,QAAMS,QAAQP,EAAAxD,EAAAC,cAACwD,EAAA,EAAeO,aAAhB,CAA6BL,KAAMP,IAAoB,CACjEQ,SAAUN,QAAMO,SAASC,sDAKnBd,GACd,OAAK3E,KAAKJ,MAAMgG,gBAAgBC,UAAY7F,KAAKJ,MAAMgG,gBAAgBE,SAAW9F,KAAKJ,MAAMgG,kBAAoBjB,EAAUiB,gBAChH5F,KAAKJ,MAAMgG,gBAAgBE,SAE5B9F,KAAKJ,MAAMmG,cAAcF,UAAY7F,KAAKJ,MAAMmG,cAAcD,SAAW9F,KAAKJ,MAAMmG,gBAAkBpB,EAAUoB,cAC/G/F,KAAKJ,MAAMmG,cAAcD,SAE1B9F,KAAKJ,MAAMoG,kBAAkBH,UAAY7F,KAAKJ,MAAMoG,kBAAkBF,SAAW9F,KAAKJ,MAAMoG,oBAAsBrB,EAAUqB,kBAC3HhG,KAAKJ,MAAMoG,kBAAkBF,SAE9B9F,KAAKJ,MAAMqG,mBAAmBJ,UAAY7F,KAAKJ,MAAMqG,mBAAmBH,SAAW9F,KAAKJ,MAAMqG,qBAAuBtB,EAAUsB,mBAC9HjG,KAAKJ,MAAMqG,mBAAmBH,QAGlC,6CAGKnB,GACZ,OAAI3E,KAAKJ,MAAMgG,gBAAgBC,UAAYlB,EAAUiB,gBAAgBV,QAAUlF,KAAKJ,MAAMgG,gBAAgBV,MAC/FlF,KAAKJ,MAAMgG,gBAAgBE,SAAW,eAExC9F,KAAKJ,MAAMmG,cAAcF,UAAYlB,EAAUoB,cAAcb,QAAUlF,KAAKJ,MAAMmG,cAAcb,MAC9FlF,KAAKJ,MAAMmG,cAAcD,SAAW,eAEtC9F,KAAKJ,MAAMoG,kBAAkBH,UAAYlB,EAAUqB,kBAAkBd,QAAUlF,KAAKJ,MAAMoG,kBAAkBd,MAC1GlF,KAAKJ,MAAMoG,kBAAkBF,SAAW,eAE1C9F,KAAKJ,MAAMqG,mBAAmBJ,UAAYlB,EAAUsB,mBAAmBf,QAAUlF,KAAKJ,MAAMqG,mBAAmBf,MAC7GlF,KAAKJ,MAAMqG,mBAAmBH,SAAW,eAG7C,sCAkBF,IAAAI,EAAAlG,KAEDmG,EAAW,GADOnG,KAAKJ,MAAMsE,+BAA+BkC,OAG5C,IAChBD,EACIhB,EAAAxD,EAAAC,cAACyE,EAAA,SAAD,KACIlB,EAAAxD,EAAAC,cAAA,MAAIC,UAAU,QAAd,mCACAsD,EAAAxD,EAAAC,cAAA,OAAKC,UAAU,cACd7B,KAAKJ,MAAMsE,+BAA+BoC,IAAI,SAACC,GAAD,OAC3CpB,EAAAxD,EAAAC,cAAC4E,EAAA,EAAD1G,OAAA2G,OAAA,CACIC,IAAKH,EAAO/F,IACR0F,EAAKtG,MACL2G,EAHR,CAII5F,gBAAiB,UACjBC,iBAAkB,SAClBmC,gBAAiB,eACjBhC,mBAAoBmF,EAAKvC,eACzB3C,oBAAqBkF,EAAKpC,cAC1Bd,gBAAe,iBAAAhB,OAAmBuE,EAAO/F,WAM7D,IACImG,EAAoB,GADM3G,KAAKJ,MAAMuE,oCAAoCiC,OAG/C,IAC1BO,EACIxB,EAAAxD,EAAAC,cAACyE,EAAA,SAAD,KACIlB,EAAAxD,EAAAC,cAAA,MAAIC,UAAU,QAAd,oBACAsD,EAAAxD,EAAAC,cAAA,OAAKC,UAAU,cAEX7B,KAAKJ,MAAMuE,oCAAoCmC,IAAI,SAACC,GAAD,OAC/CpB,EAAAxD,EAAAC,cAACgF,EAAA,EAAD9G,OAAA2G,OAAA,CACIC,IAAKH,EAAO/F,IACR0F,EAAKtG,MACL2G,EAHR,CAII1F,gBAAe,iBAAAmB,OAAmBuE,EAAO/F,IACzCM,iBAAgB,IAChBH,gBAAiB,eACjBC,iBAAkB,iBAClBI,oBAAqBkF,EAAKpC,qBAOlD,IACI+C,EAAmB,GADI7G,KAAKJ,MAAMqE,qBAAqBmC,OAGhC,IACvBS,EACI1B,EAAAxD,EAAAC,cAACyE,EAAA,SAAD,KACIlB,EAAAxD,EAAAC,cAAA,MAAIC,UAAU,QAAd,uBACAsD,EAAAxD,EAAAC,cAAA,OAAKC,UAAU,cAEX7B,KAAKJ,MAAMqE,qBAAqBqC,IAAI,SAACC,GAAD,OAChCpB,EAAAxD,EAAAC,cAACgF,EAAA,EAAD9G,OAAA2G,OAAA,CACIC,IAAKH,EAAO/F,IACR0F,EAAKtG,MACL2G,EAHR,CAII1F,gBAAe,iBAAAmB,OAAmBuE,EAAO/F,IACzCM,iBAAgB,IAChBH,gBAAiB,eACjBC,iBAAkB,aAClBI,oBAAqBkF,EAAK3C,iBAOlD,IAAIuD,EAAW,GAWf,OATKX,GAAaQ,GAAsBE,IACpCC,EACI3B,EAAAxD,EAAAC,cAACyE,EAAA,SAAD,KACIlB,EAAAxD,EAAAC,cAAA,4DACAuD,EAAAxD,EAAAC,cAAA,OAAKC,UAAU,gBAMvBsD,EAAAxD,EAAAC,cAACyE,EAAA,SAAD,KACIlB,EAAAxD,EAAAC,cAAA,WAASC,UAAU,+BACfsD,EAAAxD,EAAAC,cAAA,WAASC,UAAU,0BACfsD,EAAAxD,EAAAC,cAAA,OAAKC,UAAU,wCACXsD,EAAAxD,EAAAC,cAAA,MAAIC,UAAU,oCAAoCC,MAAO,CAAEiF,OAAU,cAArE,gBAGA5B,EAAAxD,EAAAC,cAAA,OAAKC,UAAU,cACfsD,EAAAxD,EAAAC,cAAA,WAASC,UAAU,kBACdsE,EACAQ,EACAE,EACAC,cA/LCjE,aAsOnBmE,sBA5BS,SAAC3G,GACrB,MAAO,CACHiE,iBAAkBjE,EAAMiE,iBACxBZ,iBAAkBrD,EAAMqD,iBAExBkC,gBAAiBvF,EAAMqE,YACvBT,qBAAsB5D,EAAMqE,YAAYT,qBACxCC,+BAAgC7D,EAAMqE,YAAYR,+BAClDC,oCAAqC9D,EAAMqE,YAAYP,oCAEvD4B,cAAe1F,EAAM4G,UACrBjB,kBAAmB3F,EAAM2D,cACzBiC,mBAAoB5F,EAAMsD,iBAIP,SAACuD,GACxB,MAAO,CACH3C,mBAAoB,SAAC4C,GAAaD,EAASE,YAAgCD,KAC3E1C,iBAAkB,SAAC0C,GAAaD,EAASG,YAAuBF,KAChE3C,kBAAmB,SAAC2C,GAAaD,EAASI,YAAwBH,KAClEzC,YAAa,SAACyC,GAAaD,EAASK,YAAkBJ,KACtD5D,UAAW,SAACE,EAAgBD,GAAwB0D,EAASM,YAAgB/D,EAAgBD,KAC7FQ,cAAe,SAACP,EAAgBM,GAAuBmD,EAASO,YAAoBhE,EAAgBM,KACpGF,cAAe,SAACJ,EAAgBG,GAAuBsD,EAASQ,YAAqBjE,EAAgBG,OAI9FoD,CAA6C7D","file":"static/js/8.5dc34a49.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure'\nimport default_background_image from '../../assets/images/default-background-image.jpg';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\n\nexport default class Friend extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: '',\n            firstName: '',\n            lastName: '',\n            username: '',\n            profilePicUrl: '',\n            backgroundImageUrl: '',\n            firstButtonText: '',\n            secondButtonText: '',\n            firstButtonLink: '',\n            secondButtonLink: '',\n            firstButtonOnClick: '',\n            secondButtonOnClick: '',\n            status: '',\n            actionUser: '',\n            ready: false,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ ...this.props, ready: true })\n    }\n\n    render = () => {\n        if (!this.state.ready) {\n            return null;\n        }\n\n        const { id, firstName, lastName, firstButtonText, secondButtonText, firstButtonLink, secondButtonLink,\n            firstButtonOnClick, secondButtonOnClick } = this.state;\n        const backgroundImageUrl = this.state.backgroundImageUrl || default_background_image\n        const profilePicUrl = this.state.profilePicUrl || placeholder_user_image\n\n        let imgClassName = '';\n        if (profilePicUrl) {\n            imgClassName = userService.getImageSize(profilePicUrl);\n        }\n\n        const userNames = userService.formatUsername(firstName, lastName);\n\n        return (\n            <div className=\"friend-container\" style={{ 'backgroundImage': `url(${backgroundImageUrl})` }}>\n                <span className=\"friend-img-container\">\n                    <img className={imgClassName} src={profilePicUrl} alt=\"Profile pic\" />\n                </span>\n                <div className=\"friend-content\">\n                    <h2 className=\"friend-text-shadow\" >{`${userNames}`}</h2>\n                    <div className=\"friend-button-container\">\n                        {!firstButtonOnClick\n                            ? <button className=\"button update-info\" >\n                                <NavLink to={firstButtonLink}>{firstButtonText}</NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button update-info\"\n                                onClick={firstButtonOnClick.bind(this, id)} >\n                                {firstButtonText}\n                            </button>\n                        }\n\n                        {!secondButtonOnClick\n                            ? <button className=\"button view-activity\">\n                                <NavLink to={secondButtonLink}> {secondButtonText} </NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button view-activity\"\n                                onClick={secondButtonOnClick.bind(this, id)} >\n                                {secondButtonText}\n                            </button>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure';\nimport default_background_image from '../../assets/images/default-background-image.jpg';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\n\nexport default class FriendRequest extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: '',\n            firstName: '',\n            lastName: '',\n            username: '',\n            profilePicUrl: '',\n            backgroundImageUrl: '',\n            firstButtonText: '',\n            secondButtonText: '',\n            firstButtonLink: '',\n            secondButtonLink: '',\n            firstButtonOnClick: '',\n            secondButtonOnClick: '',\n            status: '',\n            actionUser: '',\n            ready: false,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ ...this.props, ready: true })\n    }\n\n    render = () => {\n        if (!this.state.ready) {\n            return null;\n        }\n\n        const { id, firstName, lastName, firstButtonText, secondButtonText, firstButtonLink, secondButtonLink,\n            firstButtonOnClick, secondButtonOnClick, thirdButtonText, thirdButtonLink, thirdButtonOnClick } = this.state;\n        const backgroundImageUrl = this.state.backgroundImageUrl || default_background_image\n        const profilePicUrl = this.state.profilePicUrl || placeholder_user_image\n        const formattedName = userService.formatUsername(firstName, lastName, 18)\n\n        let imgClassName = '';\n        if (profilePicUrl) {\n            imgClassName = userService.getImageSize(profilePicUrl);\n        }\n\n        return (\n            <div className=\"friend-container\" style={{ 'backgroundImage': `url(${backgroundImageUrl})` }}>\n                <span className=\"friend-img-container\">\n                    <img className={imgClassName} src={profilePicUrl} alt=\"Profile pic\" />\n                </span>\n                <div className=\"friend-content\">\n                    <h2 className=\"friend-text-shadow\" >{`${formattedName}`}</h2>\n                    <div className=\"friend-button-container\">\n                        {!firstButtonOnClick\n                            ? <button className=\"button update-info\" >\n                                <NavLink to={firstButtonLink}>{firstButtonText}</NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button update-info\"\n                                onClick={firstButtonOnClick.bind(this, id)} >\n                                {firstButtonText}\n                            </button>\n                        }\n\n                        {!secondButtonOnClick\n                            ?\n                            <button className=\"button update-info\">\n                                <NavLink to={secondButtonLink}>{secondButtonText}</NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button update-info\"\n                                onClick={secondButtonOnClick.bind(this, id)} >\n                                {secondButtonText}\n                            </button>\n                        }\n\n                        {!thirdButtonOnClick\n                            ?\n                            <button className=\"button update-info\">\n                                <NavLink to={thirdButtonLink}>{thirdButtonText}</NavLink>\n                            </button>\n\n                            : <button\n                                className=\"button update-info\"\n                                onClick={thirdButtonOnClick.bind(this, id)} >\n                                {secondButtonText}\n                            </button>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component, Fragment } from 'react';\nimport {userService} from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common'\nimport Friend from './Friend';\nimport FriendRequest from './FriendRequest';\nimport './css/UserFriends.css';\n\nimport { connect } from 'react-redux';\nimport {\n    changeCurrentTimeLineUserAction, changeAllFriendsAction, findFriendsAction,\n    addFriendAction, cancelRequestAction, confirmRequestAction\n} from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\n\nclass UserFindFriendsPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            friendsCandidatesArr: [],\n            userWaitingForAcceptingRequest: [],\n            usersReceivedRequestFromCurrentUser: [],\n            ready: false,\n        };\n\n        this.addFriend = this.addFriend.bind(this);\n        this.confirmRequest = this.confirmRequest.bind(this);\n        this.rejectRequest = this.rejectRequest.bind(this);\n    }\n\n    componentDidMount() {\n        const loggedInUserId = userService.getUserId();\n        if (loggedInUserId !== this.props.timeLineUserData.id) {\n            this.props.changeTimeLineUser(loggedInUserId);\n            this.props.changeAllPictures(loggedInUserId);\n            this.props.changeAllFriends(loggedInUserId);\n        }\n\n        this.props.findFriends(loggedInUserId);\n        this.setState({ ready: true });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.findFriendsData.hasError && this.props.findFriendsData.message && this.props.findFriendsData !== prevProps.findFriendsData) {\n            return this.props.findFriendsData.message;\n        }\n        else if (!this.props.addfriendData.hasError && this.props.addfriendData.message && this.props.addfriendData !== prevProps.addfriendData) {\n            return this.props.addfriendData.message;\n        }\n        else if (!this.props.cancelRequestData.hasError && this.props.cancelRequestData.message && this.props.cancelRequestData !== prevProps.cancelRequestData) {\n            return this.props.cancelRequestData.message;\n        }\n        else if (!this.props.confirmRequestData.hasError && this.props.confirmRequestData.message && this.props.confirmRequestData !== prevProps.confirmRequestData) {\n            return this.props.confirmRequestData.message;\n        }\n\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.findFriendsData.hasError && prevProps.findFriendsData.error !== this.props.findFriendsData.error) {\n            return this.props.findFriendsData.message || 'Server Error';\n        }\n        else if (this.props.addfriendData.hasError && prevProps.addfriendData.error !== this.props.addfriendData.error) {\n            return this.props.addfriendData.message || 'Server Error';\n        }\n        else if (this.props.cancelRequestData.hasError && prevProps.cancelRequestData.error !== this.props.cancelRequestData.error) {\n            return this.props.cancelRequestData.message || 'Server Error';\n        }\n        else if (this.props.confirmRequestData.hasError && prevProps.confirmRequestData.error !== this.props.confirmRequestData.error) {\n            return this.props.confirmRequestData.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    addFriend = (friendCandidateId) => {\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.addFriend(loggedInUserId, friendCandidateId);\n    }\n\n    confirmRequest = (friendToAcceptId) => {\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.acceptRequest(loggedInUserId, friendToAcceptId);\n    }\n\n    rejectRequest = (friendToRejectId) => {\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.cancelRequest(loggedInUserId, friendToRejectId);\n    }\n\n    render() {\n        const requestLength = this.props.userWaitingForAcceptingRequest.length;\n        let requests = '';\n\n        if (requestLength > 0) {\n            requests = (\n                <Fragment>\n                    <h3 className=\"mt-5\">Respond to Your Friend Requests</h3>\n                    <div className=\"hr-styles\"></div>\n                    {this.props.userWaitingForAcceptingRequest.map((friend) =>\n                        <FriendRequest\n                            key={friend.id}\n                            {...this.props}\n                            {...friend}\n                            firstButtonText={'CONFIRM'}\n                            secondButtonText={'REJECT'}\n                            thirdButtonText={'VIEW PROFILE'}\n                            firstButtonOnClick={this.confirmRequest}\n                            secondButtonOnClick={this.rejectRequest}\n                            thirdButtonLink={`/home/profile/${friend.id}`}\n                        />)}\n                </Fragment>\n            )\n        }\n\n        let waitingForResponseUsers = this.props.usersReceivedRequestFromCurrentUser.length;\n        let friendsCandidates = '';\n\n        if (waitingForResponseUsers > 0) {\n            friendsCandidates = (\n                <Fragment>\n                    <h3 className=\"mt-5\">Pending Requests</h3>\n                    <div className=\"hr-styles\"></div>\n                    {\n                        this.props.usersReceivedRequestFromCurrentUser.map((friend) =>\n                            <Friend\n                                key={friend.id}\n                                {...this.props}\n                                {...friend}\n                                firstButtonLink={`/home/profile/${friend.id}`}\n                                secondButtonLink={`/`}\n                                firstButtonText={'VIEW PROFILE'}\n                                secondButtonText={'CANCEL REQUEST'}\n                                secondButtonOnClick={this.rejectRequest}\n                            />)\n                    }\n                </Fragment>\n            )\n        }\n\n        let friendsCandidatesArr = this.props.friendsCandidatesArr.length;\n        let remainCandidates = '';\n\n        if (friendsCandidatesArr > 0) {\n            remainCandidates = (\n                <Fragment>\n                    <h3 className=\"mt-5\">People You May Know</h3>\n                    <div className=\"hr-styles\"></div>\n                    {\n                        this.props.friendsCandidatesArr.map((friend) =>\n                            <Friend\n                                key={friend.id}\n                                {...this.props}\n                                {...friend}\n                                firstButtonLink={`/home/profile/${friend.id}`}\n                                secondButtonLink={`/`}\n                                firstButtonText={'VIEW PROFILE'}\n                                secondButtonText={'ADD FRIEND'}\n                                secondButtonOnClick={this.addFriend}\n                            />)\n                    }\n                </Fragment>\n            )\n        }\n\n        let noResult = '';\n\n        if (!requests && !friendsCandidates && !remainCandidates) {\n            noResult = (\n                <Fragment>\n                    <h2>All registered users are already your friends!</h2>\n                    <div className=\"hr-styles\"></div>\n                </Fragment>\n            )\n        }\n\n        return (\n            <Fragment>\n                <article className=\"main-article-shared-content\">\n                    <section className=\"friend-content-section\">\n                        <div className=\"container col-md-12 text-center mb-5\">\n                            <h1 className=\"text-center font-weight-bold mt-4\" style={{ 'margin': '1rem auto' }}>\n                                Find Friends\n                            </h1>\n                            <div className=\"hr-styles\"></div>\n                            <section className=\"friend-section\" >\n                                {requests}\n                                {friendsCandidates}\n                                {remainCandidates}\n                                {noResult}\n                            </section>\n                        </div>\n\n                    </section>\n                </article>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n\n        findFriendsData: state.findFriends,\n        friendsCandidatesArr: state.findFriends.friendsCandidatesArr,\n        userWaitingForAcceptingRequest: state.findFriends.userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser: state.findFriends.usersReceivedRequestFromCurrentUser,\n\n        addfriendData: state.addfriend,\n        cancelRequestData: state.cancelRequest,\n        confirmRequestData: state.confirmRequest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeTimeLineUser: (userId) => { dispatch(changeCurrentTimeLineUserAction(userId)) },\n        changeAllFriends: (userId) => { dispatch(changeAllFriendsAction(userId)) },\n        changeAllPictures: (userId) => { dispatch(changeAllPicturesAction(userId)) },\n        findFriends: (userId) => { dispatch(findFriendsAction(userId)) },\n        addFriend: (loggedInUserId, friendCandidateId) => { dispatch(addFriendAction(loggedInUserId, friendCandidateId)) },\n        cancelRequest: (loggedInUserId, friendToRejectId) => { dispatch(cancelRequestAction(loggedInUserId, friendToRejectId)) },\n        acceptRequest: (loggedInUserId, friendToAcceptId) => { dispatch(confirmRequestAction(loggedInUserId, friendToAcceptId)) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserFindFriendsPage);"],"sourceRoot":""}