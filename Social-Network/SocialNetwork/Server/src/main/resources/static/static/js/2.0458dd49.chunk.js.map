{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/auth/RegisterPage.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","__webpack_require__","d","__webpack_exports__","RegisterPage","props","_this","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","handleBlur","field","event","setState","touched","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","state","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","validate","username","email","firstName","lastName","password","confirmPassword","address","city","firstLastNameRegex","testEmail","test","testFirstName","testLastName","profilePicUrl","placeholder_user_image","backgroundImageUrl","default_background_image","onChangeHandler","bind","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","onSubmitHandler","prevProps","prevState","registerError","hasError","toast","error","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","_common__WEBPACK_IMPORTED_MODULE_12__","errorToast","text","message","position","POSITION","TOP_RIGHT","registerSuccess","redirect","success","successToast","registerMessage","history","push","name","value","preventDefault","canBeSubmitted","_this$state","otherProps","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","register","_this$state2","errors","some","x","_this2","_this$state3","isEnabled","shouldMarkError","shouldShow","react__WEBPACK_IMPORTED_MODULE_9__","className","style","margin","paddingTop","width","onSubmit","htmlFor","type","id","onChange","onBlur","aria-describedby","placeholder","disabled","Component","connect","dispatch","userData","registerAction","redirectAction"],"mappings":"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","file":"static/js/2.0458dd49.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { Component, Fragment } from 'react';\nimport '../../styles/FormPages.css'\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\nimport default_background_image from '../../assets/images/default-background-image.jpg';\nimport { connect } from 'react-redux';\nimport { registerAction, redirectAction } from '../../store/actions/authActions'\n\nclass RegisterPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            firstName: '',\n            lastName: '',\n            address: '',\n            city: '',\n            profilePicUrl: placeholder_user_image,\n            backgroundImageUrl: default_background_image,\n            touched: {\n                username: false,\n                email: false,\n                password: false,\n                confirmPassword: false,\n                firstName: false,\n                lastName: false,\n                address: false,\n                city: false,\n            }\n        };\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if (this.props.registerError.hasError && prevProps.registerError !== this.props.registerError) {\n            toast.error(<ToastComponent.errorToast text={this.props.registerError.message} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (this.props.registerSuccess) {\n            this.props.redirect();\n\n            toast.success(<ToastComponent.successToast text={this.props.registerMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n\n            this.props.history.push('/login');\n        }\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    onSubmitHandler(event) {\n        event.preventDefault();\n\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n\n        const { touched, ...otherProps } = this.state;\n        this.props.register(otherProps)\n    }\n\n    canBeSubmitted() {\n        const { username, email, firstName, lastName, password, confirmPassword, address, city } = this.state;\n        const errors = this.validate(username, email, firstName, lastName, password, confirmPassword, address, city);\n        const isDisabled = Object.keys(errors).some(x => errors[x])\n        return !isDisabled;\n    }\n\n    handleBlur = (field) => (event) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n\n    }\n\n    validate = (username, email, firstName, lastName, password, confirmPassword, address, city) => {\n        const emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n        const firstLastNameRegex = /^[A-Z]([a-zA-Z]+)?$/;\n        const testEmail = emailRegex.test(email)\n        const testFirstName = firstLastNameRegex.test(firstName)\n        const testLastName = firstLastNameRegex.test(lastName)\n        return {\n            username: username.length < 4 || username.length > 16,\n            email: email.length === 0 || !testEmail,\n            firstName: firstName.length === 0 || !testFirstName,\n            lastName: lastName.length === 0 || !testLastName,\n            password: password.length < 4 || password.length > 16,\n            confirmPassword: confirmPassword.length === 0 || confirmPassword !== password,\n            address: address.length === 0,\n            city: city.length === 0,\n        }\n    }\n\n    render() {\n        const { username, email, firstName, lastName, password, confirmPassword, address, city } = this.state;\n        const errors = this.validate(username, email, firstName, lastName, password, confirmPassword, address, city);\n        const isEnabled = !Object.keys(errors).some(x => errors[x])\n\n        const shouldMarkError = (field) => {\n            const hasError = errors[field];\n            const shouldShow = this.state.touched[field];\n            return hasError ? shouldShow : false;\n        }\n\n        return (\n            <Fragment>\n                <section className=\"pt-3\">\n                    <div className=\"container register-form-content-section pb-4 \">\n                        <h1 className=\"text-center font-weight-bold mt-4\" style={{ 'margin': '1rem auto', 'paddingTop': '2rem' }}>Register</h1>\n                        <div className=\"hr-styles\" style={{ 'width': '70%' }}></div>\n\n                        <form className=\"Register-form-container\" onSubmit={this.onSubmitHandler}>\n\n                            <div className=\"section-container\">\n                                <section className=\"left-section\">\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"username\" >Username</label>\n                                        <input\n                                            type=\"text\"\n                                            className={\"form-control \" + (shouldMarkError('username') ? \"error\" : \"\")}\n                                            id=\"username\"\n                                            name=\"username\"\n                                            value={this.state.username}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('username')}\n                                            aria-describedby=\"usernameHelp\"\n                                            placeholder=\"Enter username\"\n                                        />\n                                        {shouldMarkError('username') && <small id=\"usernameHelp\" className=\"form-text alert alert-danger\"> {(!this.state.username ? 'Username is required!' : 'Username should be at least 4 and maximum 16 characters long!')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"firstName\" >First Name</label>\n                                        <input\n                                            type=\"text\"\n                                            className={\"form-control \" + (shouldMarkError('firstName') ? \"error\" : \"\")}\n                                            id=\"firstName\"\n                                            name=\"firstName\"\n                                            value={this.state.firstName}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('firstName')}\n                                            aria-describedby=\"firstNameHelp\"\n                                            placeholder=\"Enter first name\"\n                                        />\n                                        {shouldMarkError('firstName') && <small id=\"firstNameHelp\" className=\"form-text alert alert-danger\">{(!this.state.firstName ? 'First Name is required!' : 'First Name must start with a capital letter and contain only letters!')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"address\" >Address</label>\n                                        <input\n                                            type=\"text\"\n                                            className={\"form-control \" + (shouldMarkError('address') ? \"error\" : \"\")}\n                                            id=\"address\"\n                                            name=\"address\"\n                                            value={this.state.address}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('address')}\n                                            aria-describedby=\"addressHelp\"\n                                            placeholder=\"Enter address\"\n                                        />\n                                        {shouldMarkError('address') && <small id=\"addressHelp\" className=\"form-text alert alert-danger\">{(!this.state.address ? 'Address is required!' : '')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"password\" >Password</label>\n                                        <input\n                                            type=\"password\"\n                                            className={\"form-control \" + (shouldMarkError('password') ? \"error\" : \"\")}\n                                            id=\"password\"\n                                            name=\"password\"\n                                            value={this.state.password}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('password')}\n                                            aria-describedby=\"passwordHelp\"\n                                            placeholder=\"Enter password\"\n                                        />\n                                        {shouldMarkError('password') && <small id=\"passwordHelp\" className=\"form-text alert alert-danger\">{(!this.state.password ? 'Password is required!' : 'Password should be at least 4 and maximum 16 characters long!')}</small>}\n                                    </div>\n                                </section>\n\n                                <section className=\"right-section\">\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"email\" >Email Address</label>\n                                        <input\n                                            type=\"email\"\n                                            className={\"form-control \" + (shouldMarkError('email') ? \"error\" : \"\")}\n                                            id=\"email\"\n                                            name=\"email\"\n                                            value={this.state.email}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('email')}\n                                            aria-describedby=\"emailHelp\"\n                                            placeholder=\"Enter email\"\n\n                                        />\n                                        {shouldMarkError('email') && <small id=\"emailHelp\" className=\"form-text alert alert-danger\">{(!this.state.email ? 'Email is required!' : 'Invalid e-mail address!')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"lastName\" >Last Name</label>\n                                        <input\n                                            type=\"text\"\n                                            className={\"form-control \" + (shouldMarkError('lastName') ? \"error\" : \"\")}\n                                            id=\"lastName\"\n                                            name=\"lastName\"\n                                            value={this.state.lastName}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('lastName')}\n                                            aria-describedby=\"lastNameHelp\"\n                                            placeholder=\"Enter last name\"\n                                        />\n                                        {shouldMarkError('lastName') && <small id=\"lastNameHelp\" className=\"form-text alert alert-danger\">{(!this.state.lastName ? 'Last Name is required!' : 'Last Name must start with a capital letter and contain only letters!')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"city\" >City</label>\n                                        <input\n                                            type=\"text\"\n                                            className={\"form-control \" + (shouldMarkError('city') ? \"error\" : \"\")}\n                                            id=\"city\"\n                                            name=\"city\"\n                                            value={this.state.city}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('city')}\n                                            aria-describedby=\"cityHelp\"\n                                            placeholder=\"Enter city\"\n                                        />\n                                        {shouldMarkError('city') && <small id=\"cityHelp\" className=\"form-text alert alert-danger\">{(!this.state.city ? 'City is required!' : '')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"confirmPassword\" >Confirm Password</label>\n                                        <input\n                                            type=\"password\"\n                                            className={\"form-control \" + (shouldMarkError('confirmPassword') ? \"error\" : \"\")}\n                                            id=\"confirmPassword\"\n                                            name=\"confirmPassword\"\n                                            value={this.state.confirmPassword}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('confirmPassword')}\n                                            aria-describedby=\"confirmPasswordHelp\"\n                                            placeholder=\"Confirm your password\"\n                                        />\n                                        {shouldMarkError('confirmPassword') && <small id=\"confirmPasswordHelp\" className=\"form-text alert alert-danger\">Passwords do not match!</small>}\n                                    </div>\n                                </section>\n                            </div>\n\n                            <div className=\"text-center\">\n                                <button disabled={!isEnabled} type=\"submit\" className=\"btn App-button-primary btn-lg m-3\">Register</button>\n                            </div>\n                        </form>\n                    </div>\n\n                </section>\n            </Fragment>\n        )\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        registerSuccess: state.register.success,\n        registerMessage: state.register.message,\n        registerError: state.registerError\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        register: (userData) =>\n            dispatch(registerAction(userData)),\n        redirect: () => dispatch(redirectAction())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\n"],"sourceRoot":""}