{"version":3,"sources":["components/user/UserDeletePage.js"],"names":["UserDeletePage","props","_this","Object","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","componentDidMount","currentTimeLineUserId","match","params","id","timeLineUserData","changeTimeLineUser","changeAllPictures","changeAllFriends","onSubmitHandlerDelete","e","preventDefault","userToRemoveId","removeUser","render","authority","authorities","_this$props$timeLineU","username","email","firstName","lastName","address","city","isAdmin","userService","isRoot","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_6__","className","style","margin","formatUsername","_common__WEBPACK_IMPORTED_MODULE_9__","buttonClass","url","text","onClick","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","concat","role","getUserId","state","bind","C_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","prevProps","prevState","errorMessage","getErrorMessage","successMessage","getSuccessMessage","toast","error","errorToast","position","POSITION","TOP_RIGHT","success","successToast","loggedInUserId","loggedInUserData","history","push","deleteUser","hasError","message","Component","connect","updateUserData","dispatch","userId","changeCurrentTimeLineUserAction","changeAllFriendsAction","changeAllPicturesAction","deleteUserAction"],"mappings":"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","file":"static/js/12.4299583e.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure';\nimport { Button, ButtonWithClickEvent } from '../common'\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport './css/UserDeletePage.css';\n\nimport { connect } from 'react-redux';\nimport { changeCurrentTimeLineUserAction, changeAllFriendsAction, deleteUserAction } from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\n\nclass UserDeletePage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: '',\n            username: '',\n            email: '',\n            firstName: '',\n            lastName: '',\n            address: '',\n            city: '',\n            authorities: []\n        };\n\n        this.onSubmitHandlerDelete = this.onSubmitHandlerDelete.bind(this);\n    }\n\n    componentDidMount = () => {\n        const currentTimeLineUserId = this.props.match.params.id\n        if (currentTimeLineUserId !== this.props.timeLineUserData.id) {\n            this.props.changeTimeLineUser(currentTimeLineUserId);\n            this.props.changeAllPictures(currentTimeLineUserId);\n            this.props.changeAllFriends(currentTimeLineUserId);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n\n            const loggedInUserId = this.props.loggedInUserData.id;\n            this.props.history.push('/home/users/all/' + loggedInUserId)\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.deleteUser.hasError && this.props.deleteUser.message && this.props.deleteUser !== prevProps.deleteUser) {\n            return this.props.deleteUser.message;\n        }\n\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.deleteUser.hasError && prevProps.deleteUser.error !== this.props.deleteUser.error) {\n            return this.props.deleteUser.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    onSubmitHandlerDelete = (e) => {\n        e.preventDefault();\n\n        const userToRemoveId = this.props.timeLineUserData.id;\n\n        this.props.removeUser(userToRemoveId);\n    }\n\n    render = () => {\n        let authority;\n        if (this.props.timeLineUserData.authorities) {\n            authority = this.props.timeLineUserData.authorities[0]['authority'];\n        }\n\n        const { username, email, firstName, lastName, address, city } = this.props.timeLineUserData;\n\n        const isAdmin = userService.isAdmin();\n        const isRoot = userService.isRoot();\n\n        return (\n            <Fragment>\n                <article className=\"main-article-shared-content\">\n                    <section className=\"delete-content-section\">\n                        <div className=\"container mx-auto text-center mb-4\" >\n                            <h1 className=\"text-center font-weight-bold alert alert-danger position col-md-10 mt-4\" style={{ 'margin': '1.5rem auto' }}>Are you sure you want to delete this User?</h1>\n                            <div className=\"col-md-6 mx-auto text-center\">\n                                <table className=\"table table-hover mt-3 mx-auto text-center\">\n                                    <thead>\n                                        <tr className=\"row align-center\">\n                                            {/* <th className=\"col-md-6\" scope=\"col\">Category:</th>\n                                <th className=\"col-md-6\" scope=\"col\">Price</th>  */}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr className=\"row\">\n                                            <td className=\"col-md-6\">\n                                                <h5 className=\" font-weight-bold\">Username</h5>\n                                            </td>\n                                            <td className=\"col-md-6 username-color\" >\n                                                <h5>{userService.formatUsername(username)}</h5>\n                                            </td>\n                                        </tr>\n                                        <tr className=\"row\">\n                                            <td className=\"col-md-6\" >\n                                                <h5 className=\" font-weight-bold\">Email</h5>\n                                            </td>\n                                            <td className=\"col-md-6\">\n                                                <h5>{userService.formatUsername(email)}</h5>\n                                            </td>\n                                        </tr>\n                                        <tr className=\"row\">\n                                            <td className=\"col-md-6\" >\n                                                <h5 className=\" font-weight-bold\">First Name</h5>\n                                            </td>\n                                            <td className=\"col-md-6\" >\n                                                <h5>{userService.formatUsername(firstName)}</h5>\n                                            </td>\n                                        </tr>\n                                        <tr className=\"row\">\n                                            <td className=\"col-md-6\" >\n                                                <h5 className=\" font-weight-bold\">Last Name</h5>\n                                            </td>\n                                            <td className=\"col-md-6\" >\n                                                <h5>{userService.formatUsername(lastName)}</h5>\n                                            </td>\n                                        </tr>\n                                        <tr className=\"row\">\n                                            <td className=\"col-md-6\" >\n                                                <h5 className=\" font-weight-bold\">Address</h5>\n                                            </td>\n                                            <td className=\"col-md-6\">\n                                                <h5>{userService.formatUsername(address)}</h5>\n                                            </td>\n                                        </tr>\n                                        <tr className=\"row\">\n                                            <td className=\"col-md-6\" >\n                                                <h5 className=\" font-weight-bold\">City</h5>\n                                            </td>\n                                            <td className=\"col-md-6\" >\n                                                <h5>{userService.formatUsername(city)}</h5>\n                                            </td>\n                                        </tr>\n                                        {(isAdmin || isRoot) && <tr className=\"row\">\n                                            <td className=\"col-md-6\" >\n                                                <h5 className=\" font-weight-bold\">Role</h5>\n                                            </td>\n                                            <td className=\"col-md-6\" >\n                                                <h5>{authority}</h5>\n                                            </td>\n                                        </tr>}\n\n                                    </tbody>\n                                </table>\n                                <div className=\"hr-styles\"></div>\n                                <div className=\"d-flex justify-content-center \">\n                                    {(isAdmin || isRoot) && <ButtonWithClickEvent buttonClass={\"btn App-button-primary btn-lg m-3\"} url={`/home/users/delete/`} text={\"Delete\"} onClick={this.onSubmitHandlerDelete} />}\n                                    {(isAdmin || isRoot) && <NavLink className=\"btn App-button-primary btn-lg m-3\" to={`/home/profile/${this.props.id}`} role=\"button\">Cancel</NavLink>}\n                                    {(isAdmin || isRoot) && <Button buttonClass={\"btn App-button-primary btn-lg m-3\"} url={`/home/users/all/${userService.getUserId()}`} text={\"All Users\"} />}\n                                </div >\n                            </div >\n\n                        </div >\n\n                    </section>\n                </article>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n        updateUserData: state.updateUserData,\n        deleteUser: state.deleteUser,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeTimeLineUser: (userId) => { dispatch(changeCurrentTimeLineUserAction(userId)) },\n        changeAllFriends: (userId) => { dispatch(changeAllFriendsAction(userId)) },\n        changeAllPictures: (userId) => { dispatch(changeAllPicturesAction(userId)) },\n        removeUser: (userId) => { dispatch(deleteUserAction(userId)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDeletePage);"],"sourceRoot":""}