{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/user/UserEditPage.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","__webpack_require__","d","__webpack_exports__","UserEditPage","props","_this","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","componentDidMount","currentTimeLineUserId","match","params","id","timeLineUserData","changeTimeLineUser","changeAllPictures","changeAllFriends","handleBlur","field","event","setState","touched","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","state","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","validate","username","email","firstName","lastName","address","city","profilePicUrl","backgroundImageUrl","firstLastNameRegex","testEmail","test","testFirstName","testLastName","onChangeHandler","bind","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","onSubmitHandler","prevProps","prevState","changeTimeLineUserData","loading","changePicture","errorMessage","getErrorMessage","successMessage","getSuccessMessage","toast","error","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","_common__WEBPACK_IMPORTED_MODULE_13__","errorToast","text","position","POSITION","TOP_RIGHT","success","successToast","history","push","concat","updateUserData","hasError","message","name","value","preventDefault","canBeSubmitted","_this$state","otherProps","c_Users_vaibh_Desktop_SocialMediaWebsite_Social_Network_SocialNetwork_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","loggedInUserId","loggedInUserData","updateUser","_this$state2","errors","some","x","_this2","_this$state3","loggedInUserName","userService","getUsername","loggedInRole","getRole","isAdmin","isRoot","showPicsButtons","isEnabled","shouldMarkError","shouldShow","react__WEBPACK_IMPORTED_MODULE_9__","className","style","margin","onSubmit","htmlFor","type","onChange","onBlur","aria-describedby","placeholder","disabled","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","role","getUserId","Component","connect","dispatch","userData","updateUserAction","userId","changeCurrentTimeLineUserAction","changeAllFriendsAction","changeAllPicturesAction"],"mappings":"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","file":"static/js/11.c7159dfd.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport '../../styles/FormPages.css';\n\nimport { connect } from 'react-redux';\nimport { updateUserAction, changeCurrentTimeLineUserAction, changeAllFriendsAction } from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\n\nclass UserEditPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.timeLineUserData.id,\n            username: this.props.timeLineUserData.username,\n            email: this.props.timeLineUserData.email,\n            firstName: this.props.timeLineUserData.firstName,\n            lastName: this.props.timeLineUserData.lastName,\n            address: this.props.timeLineUserData.address,\n            city: this.props.timeLineUserData.city,\n            profilePicUrl: this.props.timeLineUserData.profilePicUrl,\n            backgroundImageUrl: this.props.timeLineUserData.backgroundImageUrl,\n            touched: {\n                username: false,\n                email: false,\n                firstName: false,\n                lastName: false,\n                address: false,\n                city: false,\n                profilePicUrl: false,\n                backgroundImageUrl: false,\n            }\n        }\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    }\n\n    componentDidMount = () => {\n        const currentTimeLineUserId = this.props.match.params.id\n        if (currentTimeLineUserId !== this.props.timeLineUserData.id) {\n            this.props.changeTimeLineUser(currentTimeLineUserId);\n            this.props.changeAllPictures(currentTimeLineUserId);\n            this.props.changeAllFriends(currentTimeLineUserId);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const loading = this.props.changeTimeLineUserData.loading ||\n            this.props.changeAllFriends.loading || this.props.changePicture.loading;\n\n        if (!loading && this.props.timeLineUserData.id !== this.state.id) {\n            this.setState({\n                id: this.props.timeLineUserData.id,\n                username: this.props.timeLineUserData.username,\n                email: this.props.timeLineUserData.email,\n                firstName: this.props.timeLineUserData.firstName,\n                lastName: this.props.timeLineUserData.lastName,\n                address: this.props.timeLineUserData.address,\n                city: this.props.timeLineUserData.city,\n                profilePicUrl: this.props.timeLineUserData.profilePicUrl,\n                backgroundImageUrl: this.props.timeLineUserData.backgroundImageUrl,\n            })\n        }\n\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n\n            this.setState({\n                id: this.props.timeLineUserData.id,\n                username: this.props.timeLineUserData.username,\n                email: this.props.timeLineUserData.email,\n                firstName: this.props.timeLineUserData.firstName,\n                lastName: this.props.timeLineUserData.lastName,\n                address: this.props.timeLineUserData.address,\n                city: this.props.timeLineUserData.city,\n                profilePicUrl: this.props.timeLineUserData.profilePicUrl,\n                backgroundImageUrl: this.props.timeLineUserData.backgroundImageUrl\n            })\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n            this.props.history.push(`/home/profile/${this.state.id}`);\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.updateUserData.hasError && this.props.updateUserData.message && this.props.updateUserData !== prevProps.updateUserData) {\n            return this.props.updateUserData.message;\n        }\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.updateUserData.hasError && prevProps.updateUserData.error !== this.props.updateUserData.error) {\n            return this.props.updateUserData.message || 'Server Error';\n        }\n        return null;\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    onSubmitHandler(event) {\n        event.preventDefault();\n\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n\n        const { touched, ...otherProps } = this.state;\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.updateUser(loggedInUserId, otherProps);\n    }\n\n    canBeSubmitted() {\n        const { username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl } = this.state;\n        const errors = this.validate(username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl);\n        const isDisabled = Object.keys(errors).some(x => errors[x])\n        return !isDisabled;\n    }\n\n    handleBlur = (field) => (event) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    validate = (username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl) => {\n        const emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n        const firstLastNameRegex = /^[A-Z]([a-zA-Z]+)?$/;\n        let testEmail = emailRegex.test(email)\n        let testFirstName = firstLastNameRegex.test(firstName)\n        let testLastName = firstLastNameRegex.test(lastName)\n\n        return {\n            username: username.length < 4 || username.length > 16,\n            email: email.length === 0 || !testEmail,\n            firstName: firstName.length === 0 || !testFirstName,\n            lastName: lastName.length === 0 || !testLastName,\n            address: address.length === 0,\n            city: city.length === 0,\n            profilePicUrl: profilePicUrl.length === 0,\n            backgroundImageUrl: backgroundImageUrl.length === 0,\n        }\n    }\n\n    render() {\n        const { username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl } = this.state;\n\n        const loggedInUserName = userService.getUsername();\n        const loggedInRole = userService.getRole();\n        const isAdmin = userService.isAdmin();\n        const isRoot = userService.isRoot();\n\n        let showPicsButtons = true;\n        if (loggedInUserName !== username && (loggedInRole !== \"ROOT\")) {\n            showPicsButtons = false;\n        }\n        const errors = this.validate(username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl);\n        const isEnabled = !Object.keys(errors).some(x => errors[x])\n\n        const shouldMarkError = (field) => {\n            const hasError = errors[field];\n            const shouldShow = this.state.touched[field];\n\n            return hasError ? shouldShow : false;\n        }\n        return (\n            <Fragment>\n                <article className=\"main-article-shared-content\">\n                    <section className=\"form-content-section\">\n                        <div className=\"container mb-4\">\n                            <h1 className=\"text-center font-weight-bold mt-4\" style={{ 'margin': '1rem auto' }}>Edit Account</h1>\n\n                            <div className=\"hr-styles\"></div>\n\n                            <form className=\"Register-form-container  \" onSubmit={this.onSubmitHandler} >\n\n                                <div className=\"section-container w-100 mx-auto text-center\">\n                                    <section className=\"left-section\">\n                                        {/* <div className=\"form-group\">\n                                <label htmlFor=\"username\" className=\"font-weight-bold\" >Username</label>\n                                <input\n                                    type=\"text\"\n                                    className={\"form-control \" + (shouldMarkError('username') ? \"error\" : \"\")}\n                                    id=\"username\"\n                                    name=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.onChangeHandler}\n                                    onBlur={this.handleBlur('username')}\n                                    aria-describedby=\"usernameHelp\"\n                                    placeholder=\"Enter username\"\n                                />\n                                {shouldMarkError('username') && <small id=\"usernameHelp\" className=\"form-text alert alert-danger\"> {(!this.state.username ? 'Username is required!' : 'Username should be at least 4 and maximum 16 characters long!')}</small>}\n                            </div> */}\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"firstName\" className=\"font-weight-bold\" >First Name</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('firstName') ? \"error\" : \"\")}\n                                                id=\"firstName\"\n                                                name=\"firstName\"\n                                                value={this.state.firstName}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('firstName')}\n                                                aria-describedby=\"firstNameHelp\"\n                                                placeholder=\"Enter first name\"\n                                            />\n                                            {shouldMarkError('firstName') && <small id=\"firstNameHelp\" className=\"form-text alert alert-danger\">{(!this.state.firstName ? 'First Name is required!' : 'First Name must start with a capital letter and contain only letters!')}</small>}\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"address\" className=\"font-weight-bold\" >Address</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('address') ? \"error\" : \"\")}\n                                                id=\"address\"\n                                                name=\"address\"\n                                                value={this.state.address}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('address')}\n                                                aria-describedby=\"addressHelp\"\n                                                placeholder=\"Enter address\"\n                                            />\n                                            {shouldMarkError('address') && <small id=\"addressHelp\" className=\"form-text alert alert-danger\">{(!this.state.address ? 'Address is required!' : '')}</small>}\n                                        </div>\n\n                                        {showPicsButtons && <div className=\"form-group\">\n                                            <label htmlFor=\"profilePicUrl\" className=\"font-weight-bold\" >Profile image url</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('profilePicUrl') ? \"error\" : \"\")}\n                                                id=\"profilePicUrl\"\n                                                name=\"profilePicUrl\"\n                                                value={this.state.profilePicUrl}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('profilePicUrl')}\n                                                aria-describedby=\"profilePicUrlHelp\"\n                                                placeholder=\"Enter profile image url\"\n                                            />\n                                            {shouldMarkError('profilePicUrl') && <small id=\"profilePicUrl\" className=\"form-text alert alert-danger\">{(!this.state.profilePicUrl ? 'Profile Image Url is required!' : '')}</small>}\n                                        </div>}\n\n                                    </section>\n\n                                    <section className=\"right-section\">\n                                        {/* <div className=\"form-group\">\n                                <label htmlFor=\"email\" className=\"font-weight-bold\">Email Address</label>\n                                <input\n                                    type=\"email\"\n                                    className={\"form-control \" + (shouldMarkError('email') ? \"error\" : \"\")}\n                                    id=\"email\"\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.onChangeHandler}\n                                    onBlur={this.handleBlur('email')}\n                                    aria-describedby=\"emailHelp\"\n                                    placeholder=\"Enter email\"\n\n                                />\n                                {shouldMarkError('email') && <small id=\"emailHelp\" className=\"form-text alert alert-danger\">{(!this.state.email ? 'Email is required!' : 'Invalid e-mail address!')}</small>}\n                            </div> */}\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"lastName\" className=\"font-weight-bold\">Last Name</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('lastName') ? \"error\" : \"\")}\n                                                id=\"lastName\"\n                                                name=\"lastName\"\n                                                value={this.state.lastName}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('lastName')}\n                                                aria-describedby=\"lastNameHelp\"\n                                                placeholder=\"Enter last name\"\n                                            />\n                                            {shouldMarkError('lastName') && <small id=\"lastNameHelp\" className=\"form-text alert alert-danger\">{(!this.state.lastName ? 'Last Name is required!' : 'Last Name must start with a capital letter and contain only letters!')}</small>}\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"city\" className=\"font-weight-bold\">City</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('city') ? \"error\" : \"\")}\n                                                id=\"city\"\n                                                name=\"city\"\n                                                value={this.state.city}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('city')}\n                                                aria-describedby=\"cityHelp\"\n                                                placeholder=\"Enter city\"\n                                            />\n                                            {shouldMarkError('city') && <small id=\"cityHelp\" className=\"form-text alert alert-danger\">{(!this.state.city ? 'City is required!' : '')}</small>}\n                                        </div>\n\n                                        {showPicsButtons && <div className=\"form-group\">\n                                            <label htmlFor=\"backgroundImageUrl\" className=\"font-weight-bold\" >Cover image url</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('backgroundImageUrl') ? \"error\" : \"\")}\n                                                id=\"backgroundImageUrl\"\n                                                name=\"backgroundImageUrl\"\n                                                value={this.state.backgroundImageUrl}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('backgroundImageUrl')}\n                                                aria-describedby=\"backgroundImageUrlHelp\"\n                                                placeholder=\"Enter cover image url\"\n                                            />\n                                            {shouldMarkError('backgroundImageUrl') && <small id=\"backgroundImageUrlHelp\" className=\"form-text alert alert-danger\">{(!this.state.backgroundImageUrl ? 'Cover Image Url is required!' : '')}</small>}\n                                        </div>}\n                                    </section>\n                                </div>\n\n                                <div className=\"hr-styles\"></div>\n                                <div className=\"text-center\">\n                                    <button disabled={!isEnabled} type=\"submit\" className=\"btn App-button-primary btn-lg m-3\">Edit</button>\n                                    <NavLink className=\"btn App-button-primary btn-lg m-3\" to={`/home/profile/${this.props.id}`} role=\"button\">Cancel</NavLink>\n                                    {(isAdmin || isRoot) && <NavLink className=\"btn App-button-primary btn-lg m-3\" to={`/home/users/all/${userService.getUserId()}`} role=\"button\">All Users</NavLink>}\n                                </div>\n                            </form>\n                        </div>\n                    </section>\n                </article>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n        updateUserData: state.updateUserData,\n        changeTimeLineUserData: state.changeTimeLineUserData,\n        changePicture: state.changePicture,\n        changeAllFriends: state.changeAllFriends\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateUser: (loggedInUserId, userData) => { dispatch(updateUserAction(loggedInUserId, userData)) },\n        changeTimeLineUser: (userId) => { dispatch(changeCurrentTimeLineUserAction(userId)) },\n        changeAllFriends: (userId) => { dispatch(changeAllFriendsAction(userId)) },\n        changeAllPictures: (userId) => { dispatch(changeAllPicturesAction(userId)) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditPage);\n\n"],"sourceRoot":""}