{"version":3,"sources":["components/user/UserRow.js","components/user/UserAllPage.js"],"names":["UserRow","props","react_default","a","createElement","className","index","username","role","userService","checkIfIsRoot","isLoggedInUser","onClick","promote","bind","id","demote","changeTimeLineUser","UserAllPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","userId","promoteUser","demoteUser","history","push","concat","state","userArr","assertThisInitialized","loggedInUserId","getUserId","timeLineUserData","changeAllPictures","changeAllFriends","loadAllUsers","prevProps","prevState","loading","fetchAllUsers","promoteUserData","demoteUserData","errorMessage","getErrorMessage","successMessage","getSuccessMessage","toast","error","common","errorToast","text","position","POSITION","TOP_RIGHT","success","successToast","hasError","message","_this2","react","style","margin","scope","map","user","i","user_UserRow","assign","key","Component","connect","loggedInUserData","changeTimeLineUserData","changePicture","dispatch","fetchAllUsersAction","promoteUserAction","demoteUserAction","changeCurrentTimeLineUserAction","changeAllFriendsAction","changeAllPicturesAction"],"mappings":"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","file":"static/js/10.0023c459.chunk.js","sourcesContent":["import React from 'react';\nimport { userService } from '../../infrastructure'\n\nconst UserRow = (props) => {\n    return (\n        <tr className=\"row\" >\n            <td className=\"col-md-1 font-weight-bold\" >\n                {props.index}\n            </td>\n            <td className=\"col-md-2 username-color\" >\n                {props.username}\n            </td>\n            <td className=\"col-md-2\" >\n                {props.role}\n            </td>\n            <td className=\"col-md-7 d-flex justify-content-center\" >\n                {(!userService.checkIfIsRoot(props.role) && !userService.isLoggedInUser(props.username)) &&\n                    <h5>\n                        <button className=\"btn App-button-primary  m-1\" onClick={props.promote.bind(this, props.id)} >Promote</button>\n                    </h5>}\n                {(!userService.checkIfIsRoot(props.role) && !userService.isLoggedInUser(props.username)) &&\n                    <h5>\n                        <button className=\"btn App-button-primary  m-1\" onClick={props.demote.bind(this, props.id)} >Demote</button>\n                    </h5>}\n                <h5>\n                    <button className=\"btn App-button-primary  m-1\" onClick={props.changeTimeLineUser.bind(this, props.id)} >Profile</button>\n                </h5>\n            </td>\n        </tr>\n    )\n}\n\nexport default UserRow;\n\n\n","import React, { Component, Fragment } from 'react';\nimport {userService} from '../../infrastructure';\nimport UserRow from './UserRow';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport './css/UserAllPage.css';\n\nimport { connect } from 'react-redux';\nimport {\n    fetchAllUsersAction, promoteUserAction, demoteUserAction,\n    changeCurrentTimeLineUserAction, changeAllFriendsAction\n} from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\n\nclass UserAllPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: '',\n            userArr: [],\n        };\n\n        this.promote = this.promote.bind(this);\n        this.demote = this.demote.bind(this);\n        this.changeTimeLineUser = this.changeTimeLineUser.bind(this);\n    }\n\n    componentDidMount() {\n        const loggedInUserId = userService.getUserId();\n\n        if (loggedInUserId !== this.props.timeLineUserData.id) {\n            this.props.changeTimeLineUser(loggedInUserId);\n            this.props.changeAllPictures(loggedInUserId);\n            this.props.changeAllFriends(loggedInUserId);\n        }\n      \n        this.props.loadAllUsers(loggedInUserId);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const loading = this.props.fetchAllUsers.loading ||\n            this.props.promoteUserData.loading || this.props.demoteUserData.loading;\n\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage && !loading) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage && !loading) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.fetchAllUsers.hasError && this.props.fetchAllUsers.message && this.props.fetchAllUsers !== prevProps.fetchAllUsers) {\n            return this.props.fetchAllUsers.message;\n        }\n        if (!this.props.promoteUserData.hasError && this.props.promoteUserData.message && this.props.promoteUserData !== prevProps.promoteUserData) {\n            return this.props.promoteUserData.message;\n        }\n        if (!this.props.demoteUserData.hasError && this.props.demoteUserData.message && this.props.demoteUserData !== prevProps.demoteUserData) {\n            return this.props.demoteUserData.message;\n        }\n\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.fetchAllUsers.hasError && prevProps.fetchAllUsers.error !== this.props.fetchAllUsers.error) {\n            return this.props.fetchAllUsers.message || 'Server Error';\n        }\n        if (this.props.promoteUserData.hasError && prevProps.promoteUserData.error !== this.props.promoteUserData.error) {\n            return this.props.promoteUserData.message || 'Server Error';\n        }\n        if (this.props.demoteUserData.hasError && prevProps.demoteUserData.error !== this.props.demoteUserData.error) {\n            return this.props.demoteUserData.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    promote = (userId) => {\n        this.props.promoteUser(userId);\n    }\n\n    demote = (userId) => {\n        this.props.demoteUser(userId);\n    }\n\n    changeTimeLineUser = (userId) => {\n        this.props.changeTimeLineUser(userId);\n        this.props.history.push(`/home/profile/${userId}`)\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <article className=\"main-article-shared-content\">\n                    <section className=\"profile-content-section\">\n                        <div className=\"container col-md-10 text-center mb-4\">\n                            <h1 className=\"text-center font-weight-bold mt-4\" style={{ 'margin': '1rem auto' }}>All Users</h1>\n                            <table className=\"table table-hover mt-3 w-80 mx-auto text-center\">\n                                <thead>\n                                    <tr className=\"row\">\n                                        <th className=\"col-md-1\" scope=\"col\">#</th>\n                                        <th className=\"col-md-2\" scope=\"col\">Username</th>\n                                        <th className=\"col-md-2\" scope=\"col\">Role</th>\n                                        <th className=\"col-md-7\" scope=\"col\">Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.userArr.map((user, i) => <UserRow\n                                        key={user.id}\n                                        index={i + 1}\n                                        promote={this.promote}\n                                        demote={this.demote}\n                                        changeTimeLineUser={this.changeTimeLineUser}\n                                        {...user} />)}\n                                </tbody>\n                            </table>\n\n                        </div>\n                    </section>\n                </article>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n        userArr: state.fetchAllUsers.userArr,\n        fetchAllUsers: state.fetchAllUsers,\n        promoteUserData: state.promoteUserData,\n        demoteUserData: state.demoteUserData,\n        changeTimeLineUserData: state.changeTimeLineUserData,\n        changePicture: state.changePicture,\n        changeAllFriends: state.changeAllFriends\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadAllUsers: (userId) => { dispatch(fetchAllUsersAction(userId)) },\n        promoteUser: (userId) => { dispatch(promoteUserAction(userId)) },\n        demoteUser: (userId) => { dispatch(demoteUserAction(userId)) },\n        changeTimeLineUser: (userId) => { dispatch(changeCurrentTimeLineUserAction(userId)) },\n        changeAllFriends: (userId) => { dispatch(changeAllFriendsAction(userId)) },\n        changeAllPictures: (userId) => { dispatch(changeAllPicturesAction(userId)) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAllPage);"],"sourceRoot":""}