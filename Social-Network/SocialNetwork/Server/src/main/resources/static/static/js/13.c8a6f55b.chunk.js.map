{"version":3,"sources":["components/user/Picture.js","components/user/UserGalleryPage.js"],"names":["Picture","props","imageClass","userService","getImageSize","imageUrl","isRoot","isTheCurrentLoggedInUser","userId","getUserId","react_default","a","createElement","id","className","src","alt","onClick","removePhoto","bind","override","css","_templateObject","UserGalleryPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uploadFile","setState","error","msg","state","file","size","toast","common","errorToast","text","position","POSITION","TOP_RIGHT","timeLineUserId","timeLineUserData","data","FormData","append","addImage","photoToRemoveId","loggedInUserId","loggedInUserData","removeImage","onFileChange","event","target","files","ready","assertThisInitialized","currentTimeLineUserId","match","params","changeTimeLineUser","changeAllPictures","changeAllFriends","prevProps","prevState","addPicture","loading","errorMessage","getErrorMessage","successMessage","getSuccessMessage","success","successToast","hasError","message","removePicture","_this2","picturesArr","length","formattedUserNames","formatUsername","firstName","lastName","htmlFor","onChange","type","react","style","width","map","picture","user_Picture","assign","key","react_spinners","sizeUnit","color","concat","Component","connect","fetchPictures","dispatch","changeCurrentTimeLineUserAction","changeAllFriendsAction","changeAllPicturesAction","addPicturesAction","removePictureAction"],"mappings":"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","file":"static/js/13.c8a6f55b.chunk.js","sourcesContent":["import React from 'react';\nimport { userService } from '../../infrastructure'\n\nconst Picture = (props) => {\n    const imageClass = userService.getImageSize(props.imageUrl);\n    const isRoot = userService.isRoot();\n    const isTheCurrentLoggedInUser = (props.userId === userService.getUserId());\n\n    return (\n        <li>\n            <div id=\"container\">\n                <article className=\"card \" id=\"contauner\">\n                    <div className=\"media\">\n                        <img className={imageClass} src={props.imageUrl} alt=\"pic1\" />\n                    </div>\n                    <div  onClick={props.removePhoto.bind(this, props.id)}>\n                   { (isRoot ||  isTheCurrentLoggedInUser) &&  <div className=\"btn fbPhotoCurationControl inner uiButtonGroup delete-button\" ><i className=\"far fa-trash-alt \"></i></div>} \n                    </div>\n                </article>\n            </div>\n        </li>\n    )\n}\n\nexport default Picture;","import React, { Component, Fragment } from 'react';\nimport { userService } from '../../infrastructure'\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common'\nimport Picture from './Picture';\nimport './css/UserGallery.css';\n\nimport { css } from '@emotion/core';\nimport { RingLoader, GridLoader, MoonLoader, CircleLoader } from 'react-spinners';\n\nimport { connect } from 'react-redux';\nimport { changeCurrentTimeLineUserAction, changeAllFriendsAction } from '../../store/actions/userActions';\nimport { addPicturesAction, changeAllPicturesAction, removePictureAction } from '../../store/actions/pictureActions';\n\nconst override = css`\n        display: block;\n        margin: 0 auto;\n        border-color: red;\n`;\n\nclass UserGalleryPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            file: '',\n            error: '',\n            msg: '',\n            ready: true,\n        };\n\n        this.uploadFile = this.uploadFile.bind(this);\n        this.onFileChange = this.onFileChange.bind(this);\n        this.removePhoto = this.removePhoto.bind(this);\n    }\n\n    componentDidMount() {\n        const currentTimeLineUserId = this.props.match.params.id;\n        if (currentTimeLineUserId !== this.props.timeLineUserData.id) {\n            this.props.changeTimeLineUser(currentTimeLineUserId);\n            this.props.changeAllPictures(currentTimeLineUserId);\n            this.props.changeAllFriends(currentTimeLineUserId);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const loading = this.props.addPicture.loading\n\n        if (!loading && this.props.addPicture !== prevProps.addPicture) {\n            this.setState({ ready: true })\n        }\n\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.addPicture.hasError && this.props.addPicture.message && this.props.addPicture !== prevProps.addPicture) {\n            return this.props.addPicture.message;\n        } else if (!this.props.removePicture.hasError && this.props.removePicture.message && this.props.removePicture !== prevProps.removePicture) {\n            return this.props.removePicture.message;\n        }\n\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.addPicture.hasError && prevProps.addPicture.error !== this.props.addPicture.error) {\n            return this.props.addPicture.message || 'Server Error';\n        } else if (this.props.removePicture.hasError && prevProps.removePicture.error !== this.props.removePicture.error) {\n            return this.props.removePicture.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    uploadFile = () => {\n        this.setState({ error: '', msg: '' });\n\n        if (!this.state.file) {\n            toast.error(<ToastComponent.errorToast text='Please upload a file.' />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n            return;\n        }\n\n        if (this.state.file.size >= 2000000) {\n            toast.error(<ToastComponent.errorToast text='File size exceeds limit of 2MB.' />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n            return;\n        }\n\n        const timeLineUserId = this.props.timeLineUserData.id;\n\n        let data = new FormData();\n        data.append('file', this.state.file);\n        data.append('loggedInUserId', timeLineUserId);\n\n        this.props.addImage(data, timeLineUserId);\n    }\n\n    removePhoto = (photoToRemoveId) => {\n        const timeLineUserId = this.props.timeLineUserData.id;\n        const loggedInUserId = this.props.loggedInUserData.id;\n\n        this.props.removeImage(loggedInUserId, photoToRemoveId, timeLineUserId);\n    }\n\n    onFileChange = (event) => {\n        this.setState({\n            file: event.target.files[0],\n            ready: false\n        }, () => this.uploadFile());\n    }\n\n    render() {\n        if (!this.state.ready && this.props.picturesArr.length === 0) {\n            // return <CircleLoader\n            //     css={override}\n            //     sizeUnit={\"px\"}\n            //     size={150}\n            //     color={'#61dafb'}\n            //     loading={true}\n            // />\n        }\n\n        const isRoot = userService.isRoot();\n        const isTheCurrentLoggedInUser = (this.props.loggedInUserData.id === this.props.timeLineUserData.id);\n\n        const formattedUserNames = userService.formatUsername(this.props.timeLineUserData.firstName, this.props.timeLineUserData.lastName)\n\n        return (\n\n            <section className=\"galerry-section\">\n\n                <article className=\"aside-article-photos\">\n                    <div className=\"gallery-article-intro\">\n\n                        <div className=\"gallery-aside-article-header\"  >\n                            <div className=\"aside-article-icon\">\n                                <i className=\"fas fa-images\"></i>\n                            </div>\n                            <h3 className=\"aside-article-title\">Photos</h3>\n                        </div>\n\n                        {(isRoot || isTheCurrentLoggedInUser) && <div className=\"\">\n                            <button className=\"button update-info\">\n                                <label className=\"cursor-pointer\" id=\"upload\" htmlFor=\"fileUpload\" > ADD PHOTO\n                                <input className=\"cursor-pointer\" id=\"fileUpload\" onChange={this.onFileChange} type=\"file\" />\n                                </label>\n                            </button>\n                        </div>}\n\n                    </div>\n\n                    {this.props.picturesArr.length > 0\n                        ?\n                        <Fragment>\n                            <div className=\"hr-styles\" style={{ 'width': '90%' }}></div>\n\n                            {!this.state.ready ?\n                                <CircleLoader\n                                    css={override}\n                                    sizeUnit={\"px\"}\n                                    size={150}\n                                    color={'#61dafb'}\n                                    loading={true}\n                                /> :\n                                <ul className=\"grid-container\">\n                                    {this.props.picturesArr.map((picture) => <Picture key={picture.id} removePhoto={this.removePhoto}  {...picture} userId={this.props.timeLineUserData.id} />)}\n                                </ul>}\n                        </Fragment>\n                        :\n\n                        <Fragment>\n                            {!this.state.ready ?\n                                <Fragment>\n                                    <div className=\"hr-styles\" style={{ 'width': '90%' }}></div>\n                                    <CircleLoader\n                                        css={override}\n                                        sizeUnit={\"px\"}\n                                        size={150}\n                                        color={'#61dafb'}\n                                        loading={true}\n                                    />\n                                </Fragment> :\n                                <Fragment>\n                                    <div className=\"hr-styles\" style={{ 'width': '90%' }}></div>\n                                    <h3 className=\"text-center\">There are no photos of <span className=\"username-gallery\">{`${formattedUserNames}`}</span> !</h3>\n                                    <div className=\"hr-styles\" style={{ 'width': '90%' }}></div>\n                                </Fragment>\n                            }\n                        </Fragment>\n                    }\n                </article>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        addPicture: state.addPicture,\n        removePicture: state.removePicture,\n        picturesArr: state.fetchPictures.picturesArr,\n        fetchPictures: state.fetchPictures,\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeTimeLineUser: (userId) => { dispatch(changeCurrentTimeLineUserAction(userId)) },\n        changeAllFriends: (userId) => { dispatch(changeAllFriendsAction(userId)) },\n        changeAllPictures: (userId) => { dispatch(changeAllPicturesAction(userId)) },\n        addImage: (data, userId) => { dispatch(addPicturesAction(data, userId)) },\n        removeImage: (loggedInUserId, photoToRemoveId, timeLineUserId) => { dispatch(removePictureAction(loggedInUserId, photoToRemoveId, timeLineUserId)) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserGalleryPage);"],"sourceRoot":""}